%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (C-04) ()
%%Title: (76mm.ai)
%%CreationDate: 6/29/2011 10:57 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 126.5 125.7803 126.5 125.7803
%AI3_TileBox: -161.8599 -280.4795 414.1406 538.6401
%AI3_DocumentPreview: None
%AI5_ArtSize: 252.2803 252.2803
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -188.5 350.7803 2 1265 894 18 0 0 126 155 0 0
%AI5_OpenViewLayers: 237
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\203g\203\214\201[\203X) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\615\673\624\631\602\714\623\772\625\751\602\752)
(\615\673\624\631\602\714\623\772\625\751\602\752) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\623\672 \(\625\772\616\713\617\763\))
(\623\672 \(\625\772\616\713\617\763\)) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\613\633\614`\603p\603^\601[\603\623)
(\613\633\614`\603p\603^\601[\603\623) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4192.5 4444.7153 m
-3978.8999 4444.7153 L
-3978.8999 4436.9146 L
-4192.5 4436.9146 L
-4192.5 4444.7153 L
n
0 O
0 0 0 1 k
-4192.5 4440.8154 m
-4182.4854 4443.3071 -4175.6865 4444.6553 -4163.7007 4444.7153 c
-4150.7188 4444.7803 -4085.6997 4444.7153 y
-4020.6816 4444.7803 -4007.6997 4444.7153 v
-3995.7124 4444.6553 -3988.9136 4443.3071 -3978.8999 4440.8154 C
-3988.9136 4438.3237 -3995.7124 4436.9756 -4007.6997 4436.9146 c
-4020.6816 4436.8491 -4085.6997 4436.9146 y
-4150.7188 4436.8491 -4163.7007 4436.9146 v
-4175.6865 4436.9756 -4182.4854 4438.3237 -4192.5 4440.8154 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8065 8317.2803 m
-7967.2451 8317.2803 L
-7967.2451 8296.5645 L
-8065 8296.5645 L
-8065 8317.2803 L
n
0 O
0 g
1 XR
-7967.5586 8312.5986 m
-7982.8247 8298.8105 -8000.5537 8319.7295 -8015.9277 8307.4463 C
-8014.4199 8301.7939 -8008.7598 8308.748 -8006.5176 8304.1016 C
-8006.4341 8302.501 -8009.6313 8304.001 -8009.5127 8301.8809 C
-8007.6245 8298.4717 -8002.8955 8298.9688 -8001.5664 8303.0176 C
-7995.3115 8301.0479 -7988.7734 8295.1045 -7982.7847 8296.8975 C
-7981.2671 8298.248 -7982.0708 8299.4316 -7981.6211 8300.708 C
-7974.2871 8296.2725 -7965.4644 8305.4082 -7967.5586 8312.5986 C
f
-8011.2842 8314.2129 m
-8011.8247 8314.5889 -8010.9277 8315.7002 -8011.2529 8316.1885 C
-8013.3237 8315.4365 -8015.6919 8311.3584 -8017.4731 8308.5908 C
-8017.2632 8310.1201 -8018.6641 8311.4443 -8020.0781 8309.2129 C
-8020.2383 8308.3955 -8019.3667 8308.1084 -8019.6729 8307.2168 C
-8020.8306 8305.6484 -8021.8472 8307.1338 -8022.7798 8306.9053 C
-8023.3184 8306.1416 -8023.6143 8305.499 -8023.6816 8304.9746 C
-8017.5537 8302.1543 -8010.9263 8313.957 -8004.7456 8314.3828 C
-8004.9048 8317.3955 -8008.8555 8319.0811 -8011.2842 8314.2129 C
f
u
u
0 XR
-8008.1602 8308.9404 m
-8023.0142 8302.4004 -8044.4731 8306.6221 -8060.3687 8306.5996 c
-8066.2988 8306.5928 -8055.8965 8306.6016 -8061.8267 8306.6064 c
N
0 O
0 g
-8005.8052 8307.7197 m
-8023.1475 8300.5439 -8042.9341 8305.3359 -8061.0532 8305.2666 C
-8061.8608 8306.1533 -8062.6685 8307.042 -8063.4751 8307.9277 C
-8062.6973 8307.9277 -8061.9194 8307.9268 -8061.1421 8307.9336 C
-8060.3345 8307.0459 -8059.5273 8306.1592 -8058.7202 8305.2725 C
-8059.3516 8305.2822 -8059.9844 8305.2754 -8060.6157 8305.2754 c
-8062.3735 8305.2783 -8066.9165 8307.9424 -8063.0376 8307.9375 c
-8062.4063 8307.9375 -8061.7734 8307.9443 -8061.1421 8307.9336 c
-8059.4155 8307.9063 -8054.8184 8305.3037 -8058.7202 8305.2725 c
-8059.4976 8305.2637 -8060.2759 8305.2666 -8061.0532 8305.2666 c
-8062.8081 8305.2656 -8067.3574 8307.9131 -8063.4751 8307.9277 c
-8046.1177 8307.9951 -8027.1025 8303.2939 -8010.5151 8310.1592 c
-8009.1035 8310.7441 -8003.8081 8308.5469 -8005.8052 8307.7197 c
-8005.8052 8307.7197 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8065 8317.2803 m
-8053.0078 8317.2803 L
-8053.0078 8306.6436 L
-8065 8306.6436 L
-8065 8317.2803 L
n
-8064.3218 8306.6436 m
-8064.3218 8310.5928 L
-8064.3218 8311.6279 L
-8064.3218 8312.2666 L
-8064.3218 8313.3652 L
-8064.3218 8317.2803 L
-8053.6865 8317.2803 L
-8053.6865 8313.3652 L
-8053.6865 8312.2666 L
-8053.6865 8311.6279 L
-8053.6865 8310.5928 L
-8053.6865 8306.6436 L
-8064.3218 8306.6436 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8053.0078 8313.3652 m
-8053.0078 8312.7197 L
-8065 8312.7217 L
-8065 8313.3652 L
-8065 8313.4307 L
-8053.0078 8313.4297 L
-8053.0078 8313.3652 L
f
-8053.0078 8310.5928 m
-8065 8310.5928 L
-8065 8311.3018 L
-8053.0078 8311.3018 L
-8053.0078 8310.5928 L
f
0.15 1 0.9 0.1 k
-8053.0078 8312.332 m
-8065 8312.332 L
-8065 8312.7217 L
-8053.0078 8312.7197 L
-8053.0078 8312.332 L
f
-8053.0078 8311.6279 m
-8053.0078 8311.3018 L
-8065 8311.3018 L
-8065 8311.6279 L
-8065 8311.6924 L
-8053.0078 8311.6924 L
-8053.0078 8311.6279 L
f
0 1 1 0 k
-8053.0078 8312.2666 m
-8053.0078 8311.6924 L
-8065 8311.6924 L
-8065 8312.2666 L
-8065 8312.332 L
-8053.0078 8312.332 L
-8053.0078 8312.2666 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8065 8316.085 m
-8054.3638 8316.085 L
-8054.3638 8305.4482 L
-8065 8305.4482 L
-8065 8316.085 L
n
-8065 8305.4482 m
-8065 8309.3389 L
-8065 8310.0488 L
-8065 8310.4316 L
-8065 8311.0732 L
-8065 8311.4619 L
-8065 8312.1709 L
-8065 8316.085 L
-8054.3638 8316.085 L
-8054.3638 8305.4482 L
-8065 8305.4482 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8058.9585 8317.2803 m
-8058.2515 8317.2803 L
-8058.2607 8312.2363 L
-8052.5229 8312.2354 L
-8052.5229 8311.5244 L
-8058.9707 8311.5273 L
-8058.9585 8317.2803 L
f
-8060.6055 8309.8145 m
-8060.8696 8310.0771 -8061.0215 8310.4434 -8061.0215 8310.8164 C
-8061.0073 8317.2803 L
-8060.2979 8317.2803 L
-8060.3125 8310.8164 L
-8060.3125 8310.6299 -8060.2363 8310.4482 -8060.1045 8310.3154 c
-8059.9717 8310.1836 -8059.7891 8310.1084 -8059.6021 8310.1084 C
-8052.5229 8310.1084 L
-8052.5229 8309.3984 L
-8059.6021 8309.3984 L
-8059.9761 8309.3984 -8060.3418 8309.5498 -8060.6055 8309.8145 c
f
0.15 1 0.9 0.1 k
-8059.2827 8317.2803 m
-8058.9585 8317.2803 L
-8058.9707 8311.5273 L
-8052.5229 8311.5244 L
-8052.5229 8311.1357 L
-8059.2827 8311.1357 L
-8059.2827 8317.2803 L
f
-8060.1045 8310.3154 m
-8060.2363 8310.4482 -8060.3125 8310.6299 -8060.3125 8310.8164 C
-8060.2979 8317.2803 L
-8059.9219 8317.2803 L
-8059.9219 8310.8164 L
-8059.9219 8310.7324 -8059.8877 8310.6514 -8059.8281 8310.5908 c
-8059.7695 8310.5322 -8059.6865 8310.499 -8059.6025 8310.499 C
-8052.5229 8310.499 L
-8052.5229 8310.1084 L
-8059.6021 8310.1084 L
-8059.7891 8310.1084 -8059.9717 8310.1836 -8060.1045 8310.3154 c
f
0 1 1 0 k
-8059.8281 8310.5908 m
-8059.8877 8310.6514 -8059.9219 8310.7324 -8059.9219 8310.8164 C
-8059.9219 8317.2803 L
-8059.2827 8317.2803 L
-8059.2827 8311.1357 L
-8052.5229 8311.1357 L
-8052.5229 8310.499 L
-8059.6025 8310.499 L
-8059.6865 8310.499 -8059.7695 8310.5322 -8059.8281 8310.5908 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8065 8317.2803 m
-8053.0078 8317.2803 L
-8053.0078 8306.6436 L
-8065 8306.6436 L
-8065 8317.2803 L
n
-8064.0117 8306.6436 m
-8064.0117 8310.5928 L
-8064.0117 8311.6279 L
-8064.0117 8312.2666 L
-8064.0117 8313.3652 L
-8064.0117 8317.2803 L
-8053.3765 8317.2803 L
-8053.3765 8313.3652 L
-8053.3765 8312.2666 L
-8053.3765 8311.6279 L
-8053.3765 8310.5928 L
-8053.3765 8306.6436 L
-8064.0117 8306.6436 L
n
0 O
0.15 1 0.9 0.1 k
-8053.0078 8312.332 m
-8065 8312.332 L
-8065 8312.7217 L
-8053.0078 8312.7197 L
-8053.0078 8312.332 L
f
-8053.0078 8311.6279 m
-8053.0078 8311.3018 L
-8065 8311.3018 L
-8065 8311.6279 L
-8065 8311.6924 L
-8053.0078 8311.6924 L
-8053.0078 8311.6279 L
f
0 1 1 0 k
-8053.0078 8312.2666 m
-8053.0078 8311.6924 L
-8065 8311.6924 L
-8065 8312.2666 L
-8065 8312.332 L
-8053.0078 8312.332 L
-8053.0078 8312.2666 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-8063.2715 8313.4307 m
-8065 8313.4307 L
-8065 8310.5928 L
-8063.2715 8310.5928 L
-8063.2715 8313.4307 L
f
0.15 1 0.9 0.1 k
-8062.5967 8313.4141 m
-8063.4492 8313.4141 L
-8063.4492 8310.5771 L
-8062.5967 8310.5771 L
-8062.5967 8313.4141 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-8053.0078 8313.3652 m
-8053.0078 8312.7197 L
-8065 8312.7217 L
-8065 8313.3652 L
-8065 8313.4307 L
-8053.0078 8313.4297 L
-8053.0078 8313.3652 L
f
-8053.0078 8310.5928 m
-8065 8310.5928 L
-8065 8311.3018 L
-8053.0078 8311.3018 L
-8053.0078 8310.5928 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8065 8317.2803 m
-8053.6099 8317.2803 L
-8053.6099 8306.6436 L
-8065 8306.6436 L
-8065 8317.2803 L
n
-8064.2461 8313.3652 m
-8064.2461 8317.2803 L
-8053.6099 8317.2803 L
-8053.6099 8306.6436 L
-8064.2461 8306.6436 L
-8064.2461 8310.5352 L
-8064.2461 8313.3652 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8058.6245 8313.3018 m
-8058.6245 8312.6572 L
-8065 8312.6572 L
-8065 8313.3018 L
-8065 8313.3652 L
-8058.6245 8313.3652 L
-8058.6245 8313.3018 L
f
-8058.6245 8310.5283 m
-8065 8310.5283 L
-8065 8311.2383 L
-8058.6245 8311.2383 L
-8058.6245 8310.5283 L
f
0.15 1 0.9 0.1 k
-8058.6245 8312.2666 m
-8065 8312.2666 L
-8065 8312.6572 L
-8058.6245 8312.6572 L
-8058.6245 8312.2666 L
f
-8058.6245 8311.5635 m
-8058.6245 8311.2383 L
-8065 8311.2383 L
-8065 8311.5635 L
-8065 8311.6289 L
-8058.6245 8311.6289 L
-8058.6245 8311.5635 L
f
0 1 1 0 k
-8058.6245 8312.2012 m
-8058.6245 8311.6289 L
-8065 8311.6289 L
-8065 8312.2012 L
-8065 8312.2666 L
-8058.6245 8312.2666 L
-8058.6245 8312.2012 L
f
U
-8064.2461 8317.2803 m
-8053.6099 8317.2803 L
-8053.6099 8306.6436 L
-8064.2461 8306.6436 L
-8064.2461 8317.2803 L
n
-8053.7241 8311.9619 m
-8061.8125 8316.6318 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-8061.4814 8311.2402 m
-8061.4814 8308.4209 L
-8055.3535 8311.958 L
-8061.4814 8315.4961 L
-8061.4814 8312.6572 L
-8061.8125 8312.6572 L
-8061.8125 8313.3652 L
-8061.8125 8316.6318 L
-8053.7241 8311.9619 L
-8061.8125 8307.293 L
-8061.8125 8310.5313 L
-8061.8125 8311.2402 L
-8061.4814 8311.2402 L
f
0.15 1 0.9 0.1 k
-8061.4814 8315.4961 m
-8055.3535 8311.958 L
-8061.4814 8308.4209 L
-8061.4814 8311.2402 L
-8061.4814 8311.6279 L
-8061.3472 8311.6279 L
-8061.2148 8311.2559 -8060.8633 8310.9873 -8060.4453 8310.9873 c
-8059.9155 8310.9873 -8059.4849 8311.417 -8059.4849 8311.9473 c
-8059.4849 8312.4775 -8059.9155 8312.9072 -8060.4453 8312.9072 c
-8060.8633 8312.9072 -8061.2148 8312.6396 -8061.3472 8312.2666 C
-8061.4814 8312.2666 L
-8061.4814 8312.6572 L
-8061.4814 8315.4961 L
f
0 1 1 0 k
-8060.4453 8312.9072 m
-8059.9155 8312.9072 -8059.4849 8312.4775 -8059.4849 8311.9473 c
-8059.4849 8311.417 -8059.9155 8310.9873 -8060.4453 8310.9873 c
-8060.8633 8310.9873 -8061.2148 8311.2559 -8061.3472 8311.6279 c
-8061.3828 8311.7275 -8061.4058 8311.834 -8061.4058 8311.9473 c
-8061.4058 8312.0596 -8061.3828 8312.165 -8061.3472 8312.2666 c
-8061.2148 8312.6396 -8060.8633 8312.9072 -8060.4453 8312.9072 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8064.8833 8317.2354 m
-7973.0479 8317.2354 L
-7973.0479 8312.9561 L
-8064.8833 8312.9561 L
-8064.8833 8317.2354 L
n
0 O
0 0 0 1 k
-8064.6631 8314.5557 m
-8065 8314.6221 -8064.4814 8314.8115 -8064.8833 8314.6689 C
-8064.8379 8314.5508 -8064.7725 8314.4619 -8064.6631 8314.5557 C
f
-7974.1675 8314.7217 m
-7975.2524 8315.4844 -7976.6816 8314.7139 -7977.8701 8315.2002 C
-7978.0098 8315.2324 -7977.8345 8314.7822 -7978.1484 8314.8828 C
-7979.3008 8315.4756 -7981.1162 8315.1221 -7982.5195 8314.665 C
-7982.4346 8314.5469 L
-7982.7017 8314.4619 -7983.0283 8314.8525 -7983.3115 8314.7979 C
-7983.3135 8314.7197 -7983.2207 8314.6865 -7983.2861 8314.5791 C
-7983.3574 8314.8154 -7983.7983 8314.6885 -7983.9185 8314.8643 C
-7984.0303 8314.7725 -7984.0195 8314.585 -7984.1641 8314.4814 C
-7984.3262 8314.75 L
-7984.7769 8315.3896 -7985.4209 8314.7061 -7986.0361 8315.0361 C
-7986.0063 8314.9736 -7985.9453 8314.9248 -7985.9941 8314.8643 C
-7986.9814 8315.2529 -7988.2168 8315.1807 -7989.3208 8315.3232 C
-7989.2769 8315.2285 -7989.2363 8315.0557 -7989.3008 8314.9482 C
-7989.3555 8315.2314 -7989.6963 8315.3027 -7989.9922 8315.3584 C
-7990.1255 8315.0674 -7990.4995 8315.624 -7990.8467 8315.4639 C
-7990.8169 8315.3994 L
-7991.0732 8315.7041 -7991.1973 8315.2236 -7991.4053 8315.5889 C
-7991.5684 8315.3604 L
-7991.6807 8315.7705 -7991.9395 8315.1475 -7992.1514 8315.3564 C
-7992.1445 8315.4404 L
-7992.3442 8315.54 -7992.4482 8315.334 -7992.6338 8315.4033 C
-7992.6514 8315.3564 L
-7993.0854 8315.4639 -7993.3379 8315.2354 -7993.3271 8315.5557 C
-7993.4795 8315.2988 -7992.9063 8315.4385 -7993.1455 8315.0654 C
-7994.5732 8315.3955 -7996.0459 8315.3311 -7997.4834 8315.3369 C
-7997.6465 8315.208 -7997.7505 8315.1689 -7997.7871 8315.0479 C
-7997.9307 8315.1123 -7998.3281 8315.1064 -7998.4585 8315.2705 C
-7998.4102 8315.2637 -7998.5513 8315.1064 -7998.6274 8315.0908 C
-7998.8887 8314.9697 -7998.9131 8315.4424 -7999.2002 8315.2988 C
-7999.0859 8315.2139 -7999.0469 8315.1104 -7999.0854 8314.9912 C
-7999.3301 8315.2412 -7999.6577 8315.2012 -7999.9473 8315.2822 C
-7999.9023 8315.2285 -7999.8325 8315.1963 -7999.8433 8315.0957 C
-8000.1602 8315.3789 -8000.4209 8315.0361 -8000.6982 8315.2148 C
-8000.5947 8315.0303 L
-8001.0415 8314.8057 -8000.7266 8315.417 -8001.1128 8315.2842 C
-8001.02 8315.2256 -8001.0527 8315.1533 -8001.0361 8315.0781 C
-8001.3965 8315.4141 -8001.9795 8315.3027 -8002.3389 8315.417 C
-8002.3174 8315.3916 -8002.3232 8315.3408 Y
-8002.7148 8315.3828 -8003.1245 8315.2783 -8003.5552 8315.4248 C
-8003.7119 8315.3428 -8003.5039 8314.9736 -8003.9185 8315.042 C
-8003.9033 8315.4131 -8004.6221 8315.1943 -8004.3779 8315.6143 C
-8004.7319 8315.5537 -8005.2925 8315.4141 -8005.5283 8315.54 C
-8005.3691 8315.3994 -8005.7007 8315.0869 -8005.4063 8315.0557 C
-8005.6289 8314.8301 L
-8005.5957 8314.6787 -8005.3999 8314.8818 -8005.4707 8314.6904 C
-8005.6182 8314.7061 -8006.0479 8314.8525 -8006.1797 8314.792 C
-8006.4531 8315.0195 -8006.7041 8315.4443 -8007.1465 8315.4912 C
-8006.9385 8315.3467 -8007.2646 8315.082 -8007.1235 8315.0186 C
-8007.7407 8315.7295 L
-8007.8877 8315.7471 -8007.7725 8315.4365 -8007.9854 8315.5332 C
-8007.9746 8315.6318 -8008.0674 8315.6924 -8008.1318 8315.7725 C
-8008.1875 8315.7295 -8008.7441 8315.8643 -8008.8081 8315.499 C
-8008.8735 8315.3564 -8008.5684 8315.4229 -8008.7314 8315.292 C
-8009.0029 8315.2959 -8009.0151 8315.4209 -8009.2871 8315.4268 C
-8009.2925 8315.3779 L
-8009.4717 8315.3232 -8009.8213 8315.5332 -8009.6265 8315.7354 C
-8009.5015 8315.7471 -8009.6738 8315.5156 -8009.4888 8315.6221 C
-8009.6152 8315.834 -8009.9312 8315.8936 -8010.2031 8315.8975 C
-8010.1104 8315.8389 -8010.1216 8315.7412 -8010.0845 8315.6377 C
-8010.4497 8315.9248 -8010.8369 8316.0156 -8011.2451 8316.1357 C
-8011.2515 8316.3096 -8011.0928 8315.8193 -8011.0327 8315.9111 C
-8011.5557 8315.6699 -8012.1128 8316.2529 -8012.5479 8315.9004 C
-8012.4766 8315.8701 -8012.5098 8316.1475 -8012.5146 8316.0986 C
-8012.7666 8316.0771 -8012.7549 8315.8252 -8012.9189 8315.918 C
-8012.9355 8315.7705 -8013.1255 8315.9658 -8013.2944 8316.0107 C
-8013.3818 8316.1172 -8013.3384 8315.9385 -8013.1914 8315.9229 C
-8013.4268 8316.0479 -8014.3691 8316.2744 -8014.9131 8316.0596 C
-8014.9023 8316.1572 -8015.2471 8316.418 -8015.3721 8316.4072 C
-8015.3232 8316.1787 L
-8015.4375 8316.042 -8015.7422 8316.1982 -8015.7632 8316.0029 C
-8016.0303 8316.2803 -8014.7344 8315.7666 -8015.0957 8315.9805 C
-8015.1895 8315.79 -8015.5991 8316.3447 -8015.5215 8316.0332 C
-8015.7725 8316.042 -8016.0161 8316.2988 -8016.2559 8316.085 C
-8016.1865 8316.1221 -8016.0522 8315.7676 -8016.2549 8315.7842 C
-8016.6123 8315.8252 -8016.3564 8315.8936 -8016.6465 8315.9697 C
-8016.8281 8316.0635 L
-8016.8398 8316.2861 -8017.1475 8316.0332 -8017.0146 8316.2822 C
-8017.0586 8316.0986 -8017.5337 8316.3955 -8017.4971 8316.0264 C
-8017.4473 8315.7354 L
-8017.6016 8315.7568 -8017.7002 8316.042 -8017.8213 8316.1699 C
-8017.8418 8316.1436 -8017.8823 8316.085 -8017.8745 8316.0381 C
-8017.8994 8316.4834 -8018.2432 8316.001 -8018.4268 8316.3447 C
-8018.7505 8316.1904 -8019.2495 8316.3311 -8019.4023 8316.0537 C
-8019.6514 8316.1885 -8019.8784 8316.3486 -8020.1621 8316.2529 C
-8020.1055 8316.2109 -8020.0283 8316.1982 -8020.0122 8316.1025 C
-8020.1904 8315.9717 -8020.2344 8316.0889 -8020.3975 8316.1611 C
-8020.3608 8316.0947 -8020.7539 8315.9004 -8020.9521 8315.7432 C
-8021.1992 8315.876 -8021.1143 8316.1162 -8021.1392 8316.2627 C
-8021.3652 8315.8232 -8021.8379 8316.5459 -8022.1211 8316.1475 C
-8022.0352 8316.0869 -8021.7598 8315.9316 -8021.9658 8315.8213 C
-8022.1919 8315.3828 -8022.4219 8316.1455 -8022.7861 8315.9346 C
-8022.6968 8316.2988 L
-8022.8594 8316.0732 -8023.2334 8316.5107 -8023.1963 8316.1396 C
-8023.3184 8316.2705 -8023.6265 8316.0186 -8023.5859 8316.374 C
-8024.1846 8316.0732 -8025.0425 8316.5557 -8025.4102 8315.918 C
-8025.4961 8315.9775 -8025.7104 8315.917 -8025.6665 8316.0996 C
-8025.5239 8316.2979 -8025.4673 8315.958 -8025.4141 8316.0928 C
-8025.4912 8316.1035 -8025.5078 8316.2012 -8025.5161 8316.25 C
-8025.7021 8316.1689 -8025.8486 8316.1436 -8025.6729 8315.8477 C
-8026.0869 8315.6279 -8026.1001 8316.4521 -8026.6274 8316.3135 C
-8026.6035 8316.166 -8026.6436 8316.1104 -8026.7979 8316.1338 C
-8027.0903 8316.3857 L
-8027.4312 8316.3271 -8027.2842 8316.0508 -8027.2925 8315.8018 C
-8027.4746 8315.8447 -8027.6973 8315.833 -8027.7803 8316.0186 C
-8028.0015 8315.7061 L
-8027.8398 8315.9316 -8028.1514 8315.8564 -8028.2368 8315.917 C
-8028.1514 8315.8564 L
-8028.1846 8315.75 -8028.3955 8315.8154 -8028.5024 8315.8467 C
-8028.4766 8316.001 -8028.2617 8316.0635 -8028.1445 8316.1084 C
-8028.2373 8316.2178 -8028.3823 8316.1924 -8028.5059 8316.3213 C
-8028.4648 8316.0771 -8028.8027 8316.1475 -8028.9473 8316.1221 C
-8029.1133 8316.0693 -8029.1348 8316.3408 -8029.1831 8316.333 C
-8029.1875 8316.2061 -8029.4541 8316.3115 -8029.3247 8316.1338 C
-8029.2681 8316.0928 -8029.1953 8316.2568 -8029.1016 8316.1455 C
-8029.2109 8316.0508 -8029.1982 8315.8301 -8029.4258 8315.9912 C
-8029.5967 8316.1123 -8029.3818 8316.4736 -8029.7061 8316.3193 C
-8029.6211 8316.2588 -8029.6055 8316.1611 -8029.5391 8316.0732 C
-8029.8433 8315.9463 L
-8029.8564 8316.1689 L
-8029.8975 8316.1123 -8029.8691 8316.0928 -8029.8877 8316.0635 C
-8029.9785 8316.2979 -8030.3521 8316.1357 -8030.4209 8316.3994 C
-8030.5742 8316.4229 -8030.7441 8316.2451 -8030.8906 8316.2197 C
-8030.8623 8316.2002 L
-8031.0415 8316.0693 -8031.2793 8316.1553 -8031.4297 8316.3057 C
-8031.4219 8316.2568 L
-8031.5195 8316.2393 -8031.7505 8316.2744 -8031.8735 8316.4053 C
-8032.1201 8316.2373 -8031.9561 8315.5645 -8032.2295 8315.8447 C
-8032.48 8315.8525 -8032.6221 8316.2529 -8032.5215 8316.3955 C
-8032.9717 8316.2451 -8033.4834 8316.6084 -8033.9009 8316.2627 C
-8033.9658 8316.3525 -8033.9248 8316.4092 -8034.0586 8316.4619 C
-8034.7197 8316.374 -8035.4551 8316.7256 -8035.9814 8316.2881 C
-8035.79 8316.1943 -8035.9688 8316.0654 -8035.9727 8315.9385 C
-8036.1309 8316.1377 -8036.1631 8315.7314 -8036.2197 8316.0732 C
-8036.2041 8316.2744 -8036.2197 8316.3721 -8036.0337 8316.4531 C
-8036.4282 8316.5615 -8037.0283 8316.5615 -8037.2471 8316.374 C
-8037.1377 8316.4668 -8037.2227 8316.5283 -8037.3086 8316.5889 C
-8037.2803 8316.2676 -8037.5713 8316.2197 -8037.7915 8316.333 C
-8037.8223 8316.5283 L
-8037.9658 8316.3271 L
-8038.0503 8316.3896 -8038.0591 8316.7373 -8038.2773 8316.5498 C
-8038.2891 8316.4736 -8038.3018 8316.3965 -8038.3418 8316.3408 C
-8038.5693 8316.501 -8038.8906 8316.7725 -8039.1377 8316.6064 C
-8039.3398 8316.3213 L
-8039.4453 8316.3525 -8039.6235 8316.5244 -8039.4375 8316.6064 C
-8039.8594 8316.4346 -8040.1309 8316.4131 -8040.2646 8316.166 C
-8040.9912 8316.7676 -8042.0459 8316.792 -8042.8906 8316.749 C
-8042.8652 8316.6025 L
-8043.0923 8316.4658 -8042.9834 8316.8584 -8043.1416 8316.7568 C
-8043.0684 8316.6172 -8043.3145 8316.4531 -8043.1362 8316.2822 C
-8043.4609 8316.1279 -8043.5547 8316.5361 -8043.7656 8316.6025 C
-8043.7979 8316.7949 -8043.5957 8316.4795 -8043.6367 8316.7236 C
-8043.6729 8316.792 -8044.0859 8316.5732 -8044.1362 8316.8643 C
-8044.2178 8316.75 -8044.1543 8316.5361 -8044.1104 8316.418 C
-8044.3086 8316.5596 L
-8044.5513 8316.2197 -8043.7559 8315.9521 -8044.0107 8315.5332 C
-8044.1934 8315.5791 L
-8044.3682 8315.2744 -8043.71 8315.2354 -8044.1689 8315.1309 C
-8044.3682 8315.2744 -8044.5381 8315.6963 -8044.3608 8315.8252 C
-8044.7754 8315.9053 -8044.5527 8316.5186 -8044.9985 8316.4941 C
-8045.1201 8316.3232 -8044.6416 8316.4531 -8044.7275 8316.2139 C
-8044.9375 8315.9795 -8045.1484 8316.3447 -8045.3354 8316.2627 C
-8045.1279 8316.3721 -8045.3032 8316.666 -8045.4375 8316.7197 C
-8045.6641 8316.582 -8045.29 8316.4443 -8045.6113 8316.4141 C
-8045.6641 8316.582 -8045.9595 8316.708 -8045.7041 8316.8252 C
-8045.8203 8317.2061 -8046.0381 8316.7197 -8046.2129 8317.0146 C
-8046.3174 8316.7471 -8045.8823 8316.3955 -8046.2354 8316.2617 C
-8046.1792 8316.5195 -8046.6704 8316.6123 -8046.4839 8316.9951 C
-8046.6221 8316.9209 -8046.6367 8316.7178 -8046.5361 8316.5596 C
-8046.7334 8316.4004 -8047.0151 8317.0303 -8047.0801 8316.5186 C
-8047.1479 8316.7822 L
-8047.21 8316.6963 -8047.2983 8316.6318 -8047.3994 8316.4893 C
-8047.5732 8316.4844 -8047.96 8316.8467 -8047.9443 8316.4482 C
-8048 8316.4893 -8048.3975 8316.4717 -8048.2441 8316.7471 C
-8047.9971 8316.915 -8047.96 8316.5459 -8047.8223 8316.918 C
-8047.9971 8316.6143 -8048.1787 8316.958 -8048.3213 8317.0596 C
-8048.3447 8316.9053 L
-8048.4297 8316.9658 -8048.6255 8316.9316 -8048.6787 8317.0986 C
-8048.6133 8317.0107 -8048.6475 8316.9053 -8048.7148 8316.8682 C
-8048.8042 8317.1025 L
-8049.1494 8317.2197 -8048.8857 8316.6904 -8049.2217 8316.7588 C
-8048.9663 8316.5771 L
-8049.0225 8316.6162 -8049.1367 8316.3965 -8049.2979 8316.4697 C
-8049.3604 8316.6836 -8049.4775 8316.9404 -8049.5313 8317.1064 C
-8049.7207 8317.2002 -8049.6162 8316.8652 -8049.8027 8317.085 C
-8049.5586 8316.8271 L
-8049.5215 8316.7568 -8049.7231 8316.4736 -8049.9761 8316.4795 C
-8050.1377 8316.5537 -8050.3887 8316.8623 -8050.1338 8316.9795 C
-8050.2607 8316.9834 -8050.4385 8316.8525 -8050.3379 8316.6963 C
-8050.6255 8316.7705 -8050.2998 8316.9268 -8050.5479 8317.0596 C
-8050.6494 8316.917 -8050.9658 8316.7139 -8051.1563 8316.5068 C
-8050.8975 8316.1484 L
-8051.0693 8316.1455 L
-8050.8467 8315.8584 -8051.1826 8315.9268 -8051.0566 8315.624 C
-8051.1743 8315.5771 -8051.3169 8315.6797 -8051.4307 8315.7588 C
-8051.0864 8316.2432 -8051.8159 8316.4209 -8051.7158 8316.8623 C
-8052.1875 8316.9834 -8052.0107 8315.7881 -8052.5024 8316.4795 C
-8052.4219 8316.5947 -8052.6533 8316.9307 -8052.3564 8316.8027 C
-8052.6494 8316.7549 -8052.5557 8317.2461 -8052.9014 8317.0635 C
-8052.6455 8316.8818 -8053.1763 8316.6162 -8052.8066 8316.3525 C
-8052.8311 8316.499 -8052.6001 8316.4639 -8052.5435 8316.4229 C
-8052.6641 8316.2529 -8052.5186 8315.9775 -8052.8184 8315.9775 C
-8053.0015 8316.0195 -8053.2524 8316.0283 -8053.2158 8316.2588 C
-8053.2085 8316.5117 -8052.9365 8316.2314 -8053.0537 8316.4873 C
-8053.4185 8316.5752 -8053.4795 8316.1904 -8053.6304 8316.6396 C
-8053.3999 8316.6035 -8053.3423 8316.8643 -8053.3467 8317.0381 C
-8053.6143 8317.1436 L
-8053.5625 8316.9756 L
-8053.9922 8316.8545 -8053.6895 8317.2803 -8054.1055 8317.2354 C
-8054.3008 8316.9033 L
-8054.2017 8316.6172 -8053.6953 8317.0303 -8053.7695 8316.5645 C
-8054.04 8316.5459 -8054.1299 8316.7822 -8054.3848 8316.6621 C
-8054.3281 8316.6221 -8054.2505 8316.6104 -8054.1943 8316.5693 C
-8054.2915 8316.5537 -8054.3877 8315.9365 -8054.7734 8316.2979 C
-8054.9727 8316.4385 -8054.8262 8316.4639 -8054.8311 8316.6377 C
-8055.2656 8316.6904 -8055.3955 8316.8682 -8055.6753 8316.8955 C
-8055.6177 8316.5557 -8056.1699 8316.8623 -8055.8608 8316.5146 C
-8055.7188 8316.7139 -8055.0903 8316.6943 -8054.9365 8316.3701 C
-8055.0947 8315.9668 -8054.5952 8316.4268 -8054.5024 8316.0186 C
-8054.8506 8316.0088 -8054.8335 8315.6123 -8054.8896 8315.3525 C
-8054.9863 8315.334 -8055.0801 8315.4443 -8055.1377 8315.4844 C
-8055.1787 8315.7295 -8055.0522 8315.7256 -8055.0449 8315.9775 C
-8055.4336 8315.9111 -8055.8081 8316.0479 -8056.0225 8316.2861 C
-8056.1523 8316.165 -8056.1113 8315.9209 -8055.9575 8315.8975 C
-8056.4199 8315.9697 -8056.9141 8315.9365 -8057.3535 8315.8623 C
-8057.0693 8316.2617 -8057.8433 8315.9561 -8057.6494 8316.2881 C
-8057.4141 8316.3779 -8057.2119 8316.6621 -8057.3418 8316.8408 C
-8057.4888 8316.8154 -8057.3369 8316.666 -8057.3984 8316.5811 C
-8057.5859 8316.7988 -8057.6895 8316.2314 -8057.8735 8316.5752 C
-8057.4512 8316.4463 -8057.7915 8316.0889 -8057.7139 8315.7764 C
-8058.0186 8315.9521 -8057.7007 8315.5537 -8058.0024 8315.5537 C
-8058.3057 8315.7275 -8058.6787 8315.8643 -8059.0161 8315.9316 C
-8059.4399 8315.6357 -8060.0898 8315.9268 -8060.4683 8315.9385 C
-8060.6665 8315.7803 -8060.5322 8315.4268 -8060.7471 8315.3652 C
-8060.9995 8315.3721 -8060.5601 8315.7471 -8060.9336 8315.585 C
-8060.8975 8315.5146 L
-8061.0107 8315.5967 -8061.5825 8315.2744 -8061.6929 8315.7822 C
-8061.5776 8315.3994 L
-8061.6475 8315.3643 -8061.7119 8315.4521 -8061.7695 8315.4932 C
-8061.7725 8315.3682 -8061.8535 8315.2549 -8061.7402 8315.1729 C
-8061.9707 8314.9092 -8062.2241 8315.2148 -8062.4746 8315.2256 C
-8062.3135 8315.4521 L
-8062.7422 8315.6299 -8063.0293 8315.4053 -8063.4443 8315.4844 C
-8063.4316 8315.2627 L
-8063.6787 8315.3955 L
-8063.6182 8315.1807 -8063.8447 8315.042 -8063.9751 8315.2217 C
-8063.3335 8314.6787 L
-8063.1553 8314.8096 -8063.5283 8314.9463 -8063.4165 8315.165 C
-8063.3213 8315.3564 -8062.9375 8315.2959 -8062.8755 8315.082 C
-8063.0225 8315.0576 -8063.0293 8315.1064 -8063.1436 8315.1865 C
-8063.1919 8314.8779 -8062.9688 8314.8896 -8062.8584 8314.6836 C
-8062.9355 8314.6963 -8063.0449 8314.6025 -8063.0615 8314.7002 C
-8062.9102 8314.5498 -8062.7578 8314.5264 -8062.5059 8314.5186 C
-8062.6763 8314.6396 -8062.4131 8314.71 -8062.4775 8314.7979 C
-8062.4575 8314.5264 -8062.2168 8314.4424 -8061.9053 8314.5186 C
-8061.6831 8314.833 -8061.3208 8314.3164 -8060.96 8314.4033 C
-8061.1064 8314.6787 -8061.2935 8314.8994 -8061.5127 8315.0107 C
-8061.2861 8315.1484 -8061.2607 8315.0029 -8061.0337 8315.1416 C
-8060.9238 8314.9365 -8060.8457 8314.6221 -8060.5503 8314.4971 C
-8060.5342 8314.7002 L
-8060.2666 8314.5967 -8060.2666 8314.2959 -8059.9258 8314.3525 C
-8059.3418 8314.4521 -8058.7407 8314.4521 -8058.2949 8314.4775 C
-8058.2783 8314.6797 L
-8058.0303 8314.2461 -8057.4521 8314.5195 -8057.1182 8314.3271 C
-8056.5503 8314.5225 -8055.8848 8314.1338 -8055.5938 8314.4834 C
-8054.5913 8314.3271 -8053.7148 8314.1748 -8052.6768 8314.249 C
-8052.8516 8314.5439 L
-8052.6655 8314.3271 -8052.7305 8314.7139 -8052.5479 8314.6699 C
-8052.7578 8314.4346 -8052.2949 8314.3643 -8052.1665 8314.1836 C
-8051.7041 8314.4131 -8051.1104 8314.1631 -8050.7007 8313.9561 C
-8050.6846 8314.1592 L
-8050.2705 8313.7783 -8049.7759 8314.1123 -8049.2598 8314.1748 C
-8049.2007 8314.2588 -8049.1074 8314.4492 -8048.9536 8314.4268 C
-8048.6738 8314.0986 -8048.5273 8314.1221 -8048.1167 8313.917 C
-8047.8169 8313.917 -8047.3301 8313.998 -8047.0254 8314.126 C
-8045.8975 8313.665 -8044.7456 8313.96 -8043.5732 8313.6826 C
-8043.4888 8313.9209 L
-8042.3521 8313.4111 -8040.9541 8313.874 -8039.9839 8313.6123 C
-8040.0776 8314.0195 L
-8039.7734 8314.1455 -8039.3843 8313.9131 -8039.4619 8313.624 C
-8039.1567 8313.749 -8038.7007 8313.4268 -8038.5068 8313.7617 C
-8038.1953 8313.8369 -8038.1255 8313.5732 -8037.8662 8313.5186 C
-8037.2422 8313.6729 -8037.0107 8313.6377 -8036.4224 8313.5615 C
-8036.5684 8313.5361 L
-8036.6328 8313.626 -8036.6387 8313.7988 -8036.4922 8313.8252 C
-8036.2725 8313.7119 -8035.6846 8313.9346 -8035.9033 8313.4482 C
-8035.2754 8313.7295 -8034.4385 8313.2197 -8033.8271 8313.5986 C
-8033.8789 8313.4658 -8033.7246 8313.4404 -8033.6602 8313.3506 C
-8033.1089 8313.3447 -8032.5293 8313.6162 -8032.0898 8313.3896 C
-8032.0024 8313.4561 -8032.2295 8313.6162 -8032.0049 8313.6299 C
-8031.8721 8313.5791 -8032.0024 8313.4561 -8031.8384 8313.3818 C
-8030.9453 8313.1338 -8030.0303 8313.6377 -8029.2188 8313.5732 C
-8027.7754 8313.3164 -8026.2695 8313.4463 -8024.8867 8313.4033 C
-8024.9023 8313.501 L
-8024.4395 8313.1279 -8023.8159 8313.8828 -8023.4463 8313.3213 C
-8023.3369 8313.4141 -8023.0283 8313.3652 -8023.1094 8313.5537 C
-8022.7407 8313.29 -8022.0771 8313.8018 -8021.5439 8313.4668 C
-8021.5928 8313.458 -8021.6211 8313.4775 -8021.6777 8313.5195 C
-8021.1392 8313.7354 -8020.6641 8313.4404 -8020.0957 8313.6357 C
-8020.1533 8313.6777 -8020.2583 8313.708 -8020.2754 8313.8057 C
-8020.0557 8313.9932 -8019.7549 8313.3936 -8019.6348 8313.8643 C
-8019.5088 8313.8604 -8019.5449 8313.6279 -8019.6221 8313.6416 C
-8018.3779 8313.8252 -8017.0498 8313.5244 -8015.7549 8313.417 C
-8014.8271 8313.6982 -8015.6982 8314.21 -8014.9663 8313.8584 C
-8014.9063 8313.9492 -8014.9229 8313.6787 -8014.9131 8313.7764 C
-8014.6299 8313.6445 -8014.4717 8314.3018 -8014.2754 8314.0557 C
-8014.3564 8313.7666 -8014.1445 8313.8936 -8014.1387 8313.7178 C
-8013.5713 8313.9053 -8013.4575 8314.166 -8013.0098 8313.9463 C
-8013.0435 8314.0986 L
-8012.5186 8313.6689 -8011.9102 8313.8994 -8011.4673 8313.4033 C
-8008.5728 8313.3135 -8005.7983 8313.0381 -8002.9761 8312.9805 C
-8000.1865 8313.0752 -7997.4551 8312.8525 -7994.6221 8313.1162 C
-7993.9585 8313.5156 -7993.9087 8313.5049 -7993.1797 8313.3428 C
-7993.2095 8313.4072 -7993.2549 8313.4229 -7993.2061 8313.4834 C
-7993.1699 8313.1553 -7992.6929 8313.4521 -7992.6235 8313.1396 C
-7991.5762 8313.2002 -7990.6113 8313.1104 -7989.5337 8313.1084 C
-7989.7041 8313.1436 -7989.7896 8313.4111 -7989.5869 8313.3896 C
-7989.3755 8313.1807 L
-7989.3408 8313.2725 L
-7989.2021 8313.2236 -7989.0513 8313.0615 -7989.1943 8312.9561 C
-7986.4873 8312.6729 -7983.8242 8313.3311 -7981.1729 8313.25 C
-7980.5435 8313.3867 -7979.6475 8313.2617 -7978.9629 8313.1943 C
-7976.9355 8313.6318 -7975.1079 8313.9844 -7973.0479 8313.6787 C
-7973.3169 8314.5264 -7974.1675 8314.7217 V
f
-8064.2578 8314.5225 m
-8064.1855 8314.6865 -8063.9497 8314.7764 -8064.1377 8314.9951 C
-8064.1611 8314.8408 -8064.2822 8314.6689 -8064.2578 8314.5225 C
f
-8057.9619 8316.21 m
-8057.9536 8316.1611 -8057.8721 8316.2764 -8057.8521 8316.3027 C
-8057.9297 8316.3154 -8058.0024 8316.4531 -8058.0645 8316.3682 C
-8057.9854 8316.3564 -8057.9976 8316.2783 -8057.9619 8316.21 C
f
-8056.3521 8316.3076 m
-8056.3765 8316.4531 -8056.7207 8316.5693 -8056.9238 8316.5869 C
-8056.3521 8316.3076 L
f
-8054.8521 8316.9092 m
-8054.7227 8317.0322 -8054.7583 8317.0996 -8054.9326 8317.0957 C
-8054.9453 8317.0186 -8054.8877 8316.9795 -8054.8521 8316.9092 C
f
-8054.7456 8316.5771 m
-8054.6211 8316.5732 -8054.5591 8316.6592 -8054.4985 8316.7432 C
-8054.5029 8316.6172 -8054.7871 8316.8213 -8054.7456 8316.5771 C
f
-8051.4893 8317.001 m
-8051.4111 8316.9893 -8051.2417 8316.8682 -8051.1689 8317.0303 C
-8051.2505 8316.917 -8051.5498 8317.2148 -8051.4893 8317.001 C
f
-8049.9761 8316.7803 m
-8049.9272 8316.79 -8049.9072 8316.8164 -8049.8506 8316.7764 C
-8049.7607 8316.8428 -8049.8555 8316.9492 -8049.9312 8316.9629 C
-8049.9761 8316.7803 L
f
-8022.4287 8316.1943 m
-8022.5923 8316.2666 L
-8022.5684 8316.1221 L
-8022.4287 8316.1943 L
f
-8010.3574 8316.1865 m
-8010.1943 8316.0947 -8010.2441 8316.3232 -8010.2168 8316.3447 C
-8010.3643 8316.3604 -8010.1621 8316.165 -8010.3574 8316.1865 C
f
-8003.8486 8315.458 m
-8003.8984 8315.4619 L
-8003.8818 8315.1631 L
-8003.8486 8315.458 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8038.9727 8317.2803 m
-8038.9727 8291.252 L
-8065 8291.252 L
-8065 8317.2803 L
-8038.9727 8317.2803 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8065 8299.9268 m
-8038.9727 8299.9268 l
S
0.64 0.650477 0.701045 0.510735 K
-8065 8308.6045 m
-8038.9727 8308.6045 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8065 8304.2656 m
-8038.9727 8304.2656 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-8043.5742 8304.292 m
-8043.3442 8304.0205 -8043.6914 8303.7344 -8044 8303.5234 c
-8044.1118 8303.4463 -8044.5215 8303.6592 -8044.7466 8303.4932 c
-8045.0439 8303.2754 -8045.1826 8303.1885 -8045.4824 8303.1943 c
-8045.6455 8303.1982 -8046.0435 8303.3281 -8046.1895 8303.3584 c
-8046.5679 8303.4346 -8046.8022 8303.6318 -8047.3672 8303.5352 c
-8047.7344 8303.4717 -8047.8286 8303.3809 -8047.9233 8303.4287 c
-8048.1118 8303.5703 -8048.2202 8303.7939 -8048.4258 8303.8428 c
-8048.9575 8303.9697 -8049.3535 8304.0137 -8049.8818 8304.0029 c
-8050.3047 8303.9932 -8051.4185 8304.0615 -8052.2866 8303.9619 c
-8052.6226 8303.9219 -8052.6025 8303.4971 -8052.7695 8303.4932 c
-8052.8618 8303.4912 -8052.7646 8303.8066 -8052.8306 8303.8271 c
-8053.1694 8303.9336 -8053.4702 8302.7832 -8053.6943 8302.8525 c
-8053.8047 8302.8877 -8053.5562 8303.4336 -8053.6729 8303.4619 c
-8053.8975 8303.5176 -8054.2178 8302.499 -8054.4321 8302.5615 c
-8054.5635 8302.5986 -8054.2886 8303.0186 -8054.4375 8303.0869 c
-8054.6655 8303.1914 -8054.9087 8302.3154 -8055.1064 8302.4141 C
-8055.1543 8302.4619 -8054.7295 8303.2178 -8055.1685 8303.1592 c
-8055.2871 8303.1416 -8055.5054 8302.5938 -8055.5801 8302.6201 c
-8055.6919 8302.6602 -8055.3535 8303.082 -8055.4897 8303.208 C
-8055.7681 8303.4346 -8056.3711 8302.4434 -8056.4575 8302.5146 c
-8056.5791 8302.6162 -8056.1279 8303.3779 -8056.2695 8303.4463 C
-8056.4497 8303.71 -8057.0142 8302.833 -8057.0889 8302.8818 c
-8057.1777 8302.9404 -8056.9058 8303.3184 -8056.8799 8303.5137 c
-8056.8545 8303.708 -8056.9966 8303.8418 -8057.2144 8303.79 c
-8057.4736 8303.7275 -8057.8696 8302.9219 -8057.9727 8303.0156 C
-8058.0791 8303.0713 -8057.8682 8303.3584 -8057.7954 8303.5928 c
-8057.7583 8303.708 -8057.8882 8303.8818 -8058.0298 8303.8818 c
-8058.3135 8303.9297 -8058.6255 8303.2783 -8058.7065 8303.3828 c
-8058.7524 8303.4424 -8058.5898 8303.7705 -8058.7295 8303.8682 c
-8058.8994 8303.9863 -8059.3115 8303.5186 -8059.4521 8303.5732 C
-8059.5361 8303.6221 -8059.4126 8303.877 -8059.4927 8303.9336 c
-8059.7295 8304.0996 -8060.0039 8303.7012 -8060.0513 8303.749 C
-8060.1167 8303.7715 -8060.1201 8303.8164 -8060.2793 8303.9209 c
-8060.4736 8304.0479 -8060.5254 8304.1289 -8060.5425 8304.2451 c
-8060.5654 8304.3633 -8060.3135 8304.6553 -8060.1655 8304.6299 c
-8059.8223 8304.5703 -8059.8662 8305.1299 -8059.6328 8304.9961 c
-8059.5679 8304.96 -8059.6592 8304.5391 -8059.4199 8304.5459 c
-8059.0488 8304.5586 -8058.9858 8305.1016 -8058.7817 8305.0908 c
-8058.6406 8305.084 -8058.8521 8304.4639 -8058.6328 8304.541 c
-8058.4751 8304.5967 -8058.0063 8305.582 -8057.9795 8305.4902 c
-8057.8975 8305.2227 -8058.0703 8304.6787 -8057.9409 8304.6885 c
-8057.7568 8304.7031 -8057.5078 8305.5977 -8057.2544 8305.7178 c
-8057.1826 8305.7529 -8057.3774 8304.8809 -8057.1958 8304.877 C
-8057.0898 8304.9268 -8056.7578 8305.7295 -8056.6274 8305.7783 C
-8056.5591 8305.7627 -8056.5879 8305.4053 -8056.5176 8305.3848 c
-8056.4688 8305.3701 -8056.2817 8305.8457 -8056.21 8305.8037 c
-8056.1055 8305.7432 -8056.2471 8305.2725 -8056.0889 8305.2031 c
-8055.9175 8305.1289 -8055.4878 8306.1729 -8055.3486 8306.0781 c
-8055.2769 8306.0303 -8055.3574 8305.4902 -8055.21 8305.5264 c
-8055.0718 8305.5586 -8054.9414 8305.8945 -8054.8081 8305.9229 c
-8054.7295 8305.9385 -8054.7935 8305.4717 -8054.7495 8305.4541 c
-8054.5889 8305.3955 -8054.2329 8305.9521 -8054.0688 8305.8037 c
-8053.8584 8305.6152 -8053.9395 8305.25 -8053.8345 8305.2627 c
-8053.6274 8305.2861 -8053.4912 8305.5234 -8053.4146 8305.4639 c
-8053.2642 8305.3486 -8053.3281 8305.0596 -8053.0527 8304.9727 c
-8052.8975 8304.9229 -8052.7935 8305.2148 -8052.7495 8305.2109 c
-8052.6738 8305.208 -8052.6782 8305.1104 -8052.6665 8305.0049 c
-8052.6328 8304.7412 -8052.6064 8304.6797 -8052.4878 8304.6572 c
-8052.0854 8304.6338 -8051.5625 8304.5645 -8051.1807 8304.5557 c
-8050.6274 8304.541 -8049.2607 8304.5176 -8049.1182 8304.5176 c
-8049 8304.4932 -8048.7432 8304.6748 -8048.6689 8304.7412 c
-8048.4678 8304.9258 -8048.2998 8305.1396 -8047.9858 8305.4004 c
-8047.8906 8305.4814 -8047.8081 8305.4609 -8047.7378 8305.4365 c
-8047.5249 8305.3652 -8047.4585 8305.3135 -8047.2202 8305.2822 c
-8046.9175 8305.2393 -8046.4272 8305.3291 -8046.1245 8305.4229 c
-8045.6035 8305.582 -8045.5264 8305.6045 -8045.0977 8305.5557 c
-8044.6992 8305.5098 -8044.0586 8305.4385 -8044.0479 8305.0908 c
-8044.0415 8304.876 -8043.9414 8304.7236 -8043.5742 8304.292 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8038.9722 8317.2803 m
-8038.9722 8291.2529 L
-8065 8291.2529 L
-8065 8317.2803 L
-8038.9722 8317.2803 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8047.6455 8304.2695 m
-8038.9736 8304.2695 l
S
-8051.9839 8317.2803 m
-8051.9839 8308.6045 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8047.7202 8299.9307 m
-8038.9727 8299.9307 l
S
-8056.3232 8317.2793 m
-8056.3232 8307.9258 l
S
0.64 0.650477 0.701045 0.510735 K
-8047.6504 8317.2793 m
-8047.6504 8314.8672 l
-8044.9937 8314.6436 -8043.3096 8312.9404 v
-8041.6064 8311.2139 -8041.3774 8308.6084 y
-8038.9727 8308.6084 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8055.8418 8301.4658 m
-8055.8418 8301.5303 -8055.8218 8301.5713 -8055.7783 8301.5713 c
-8055.6943 8301.5713 -8055.4634 8301.2344 -8055.3994 8301.2344 c
-8055.3154 8301.2344 -8055.2729 8301.2764 -8055.2729 8301.3818 c
-8055.2729 8301.4658 -8055.5264 8302.373 y
-8055.5264 8302.4141 -8055.5264 8302.4141 -8055.5049 8302.4141 c
-8055.4414 8302.4141 -8055.0615 8301.8672 -8054.9351 8301.8672 c
-8054.9146 8301.8672 -8054.8936 8301.8877 -8054.8936 8301.9092 c
-8055.1675 8302.8154 -8055.1675 8303.0059 v
-8055.1675 8303.0693 -8055.1675 8303.0908 -8055.1465 8303.0908 c
-8055.1055 8303.0908 -8054.6826 8302.5205 -8054.5562 8302.5205 c
-8054.5352 8302.5205 -8054.5137 8302.541 -8054.5137 8302.5625 c
-8054.5137 8302.626 -8054.7666 8303.3643 -8054.7666 8303.5322 c
-8054.7666 8303.5752 -8054.7666 8303.5752 -8054.7446 8303.5752 c
-8054.6826 8303.5752 -8054.4722 8303.3643 -8054.4297 8303.3643 c
-8054.4082 8303.3643 -8054.3882 8303.3857 -8054.3882 8303.4063 c
-8054.3882 8303.4268 -8054.4927 8303.7861 -8054.4927 8303.8701 c
-8054.4927 8303.8916 -8054.4927 8303.8916 -8054.4722 8303.8916 c
-8054.4297 8303.8916 -8054.0918 8303.5322 -8054.0078 8303.5322 c
-8053.9658 8303.5322 -8053.9233 8303.5752 -8053.9233 8303.6592 c
-8053.9233 8303.8076 -8054.1138 8304.5244 -8054.1138 8304.5664 c
-8054.1138 8304.6504 -8054.0918 8304.6924 -8054.0498 8304.6924 c
-8053.9658 8304.6924 -8053.7119 8304.376 -8053.6494 8304.376 c
-8053.5854 8304.376 -8053.5439 8304.3965 -8053.5439 8304.4609 c
-8053.5854 8304.8818 L
-8053.5854 8304.9463 -8053.5854 8304.9658 -8053.5654 8304.9658 c
-8053.5225 8304.9658 -8053.2915 8304.6719 -8053.2065 8304.6719 c
-8053.1006 8304.6719 -8053.1006 8305.1572 -8053.1006 8305.2197 c
-8053.1006 8305.3252 -8053.0166 8305.4092 -8052.8896 8305.4092 c
-8052.8057 8305.4092 -8052.4678 8305.1777 -8052.4473 8305.1777 c
-8052.3623 8305.1777 -8052.3198 8305.6201 -8052.2568 8305.6201 c
-8052.1943 8305.6201 -8051.9199 8305.4932 -8051.8564 8305.4932 c
-8051.6455 8305.4932 -8051.6035 8305.5791 -8051.6035 8305.7471 c
-8051.6255 8305.8945 L
-8051.6255 8305.9365 -8051.6035 8305.9365 -8051.5835 8305.9365 c
-8051.4985 8305.9365 -8051.2241 8305.6621 -8051.1392 8305.6621 c
-8050.9287 8305.6621 -8048.8198 8307.7295 -8048.5454 8308.0029 c
-8048.3984 8308.1709 -8048.3984 8308.4668 -8048.3984 8308.5938 c
-8048.3984 8309.458 -8048.3984 8309.542 -8048.2295 8309.626 c
-8047.5977 8309.8799 -8047.5127 8310.0273 -8046.7334 8311.3135 c
-8046.6479 8311.4609 -8045.7407 8312.0732 -8045.5942 8312.0732 c
-8045.4878 8312.0732 -8045.1094 8311.8193 -8045.0239 8311.8193 c
-8044.9194 8311.8193 -8044.8135 8311.8828 -8044.8135 8312.0508 c
-8044.8135 8312.4941 -8045.3408 8313.001 -8045.9312 8313.001 c
-8046.7534 8313.001 -8047.0913 8312.3037 -8047.1338 8311.9053 c
-8047.1543 8311.7568 -8047.2393 8311.6719 -8047.3447 8311.6719 c
-8047.3862 8311.6719 -8047.4287 8311.6924 -8047.4702 8311.7568 c
-8047.9561 8312.5576 -8048.9473 8313.001 -8049.7065 8313.001 c
-8050.7393 8313.001 -8051.8774 8312.3682 -8052.3418 8312.0947 c
-8052.7842 8311.8418 -8053.4814 8311.6719 -8053.8809 8311.6719 c
-8054.3242 8311.6719 -8054.3662 8311.8193 -8054.3662 8312.0732 c
-8054.3662 8312.2207 -8053.9023 8312.6621 -8053.9023 8312.79 c
-8053.9023 8312.916 -8054.0498 8313.001 -8054.4082 8313.001 c
-8054.8936 8313.001 -8055.5679 8312.2832 -8055.5679 8311.5039 c
-8055.5679 8310.8916 -8054.7666 8310.3652 -8054.3022 8310.3652 c
-8053.3755 8310.3652 -8053.0942 8310.7236 -8052.5264 8311.1875 c
-8052.4414 8311.25 -8052.3774 8311.2725 -8052.3359 8311.2725 c
-8052.1895 8311.2725 -8052.1895 8310.1748 -8052.1895 8310.0498 c
-8052.1895 8309.9004 -8052.2729 8309.8379 -8052.3774 8309.8379 c
-8054.7822 8309.8379 -8059.6592 8308.6143 -8061.3672 8302.458 c
-8061.4297 8302.2461 -8061.5361 8302.1416 -8061.6406 8302.1416 c
-8061.7881 8302.1416 -8062.7793 8302.9844 -8062.7793 8304.5664 c
-8062.7793 8306.4004 -8061.5767 8307.3701 -8060.9873 8307.3701 c
-8060.8398 8307.3701 -8060.6494 8307.3496 -8060.6494 8307.2012 c
-8060.6494 8307.1387 -8060.6929 8307.0752 -8060.7759 8306.9697 c
-8061.1143 8306.6338 -8061.3672 8306 -8061.3672 8305.6836 c
-8061.3672 8305.4717 -8061.2607 8305.3037 -8061.1143 8305.3037 c
-8060.9033 8305.3037 -8060.5654 8306.2529 -8060.46 8306.4004 c
-8060.3335 8306.6113 -8059.9546 8306.9912 -8059.2378 8307.5186 c
-8058.4995 8308.0439 -8057.0654 8309.3525 -8057.0654 8310.6172 c
-8057.0654 8311.9893 -8058.1191 8312.8955 -8058.9209 8312.8955 c
-8059.7007 8312.8955 -8060.6714 8312.3682 -8061.0713 8311.8828 c
-8061.7041 8311.1455 -8062.3154 8310.5752 -8062.8218 8310.5752 c
-8063.1592 8310.5752 -8063.3066 8310.7861 -8063.3066 8310.9971 c
-8063.3066 8311.334 -8063.0537 8311.5664 -8062.5479 8311.6084 c
-8061.9575 8311.6514 -8061.8936 8312.0732 -8061.8936 8312.4092 c
-8061.8936 8312.6836 -8062.4209 8313.001 -8062.8433 8313.001 c
-8063.4751 8313.001 -8064.2974 8312.3037 -8064.2974 8310.4707 c
-8064.2974 8308.9727 -8063.0537 8308.5098 -8062.5679 8308.5098 c
-8062.1265 8308.5098 -8061.4722 8308.5938 -8061.0928 8308.9307 c
-8059.8066 8310.1338 -8059.1318 8310.3428 -8058.5835 8310.3428 c
-8058.3721 8310.3428 -8058.2881 8310.3428 -8058.2881 8310.4912 c
-8058.2881 8310.8076 -8059.0474 8310.9971 -8059.1318 8311.0186 c
-8059.3423 8311.0811 -8059.5103 8311.3135 -8059.5103 8311.5244 c
-8059.5103 8312.0098 -8059.2378 8312.0303 -8058.8774 8312.0303 c
-8058.5215 8312.0303 -8057.8042 8311.6719 -8057.8042 8310.4707 c
-8057.8042 8309.4795 -8058.9424 8308.3193 -8059.4058 8308.0879 c
-8059.7007 8307.918 -8060.5874 8307.9404 -8060.9458 8307.8975 c
-8061.6406 8307.8125 -8063.4121 8306.8652 -8063.4121 8304.376 c
-8063.4336 8302.9629 -8062.1265 8301.6357 -8061.8511 8301.4463 c
-8061.6826 8301.3389 -8061.5986 8301.2129 -8061.5986 8301.0439 c
-8061.5986 8300.833 -8061.6626 8297.9023 -8061.9995 8297.9023 c
-8062.4424 8297.9023 -8062.5054 8297.9023 -8062.5054 8298.0938 c
-8062.21 8299.1885 -8062.21 8299.4209 v
-8062.21 8299.7373 -8062.4424 8301.2129 -8063.3066 8301.2129 c
-8063.5806 8301.2129 -8064.0449 8300.9805 -8064.0449 8300.665 c
-8064.0449 8300.3701 -8063.3486 8299.168 -8063.3486 8298.8936 c
-8063.3486 8298.4082 -8063.3921 8298.3877 -8064.0654 8297.7764 c
-8064.2559 8297.6289 -8064.3193 8297.5029 -8064.3193 8297.3115 c
-8064.3193 8297.1436 -8064.2134 8297.0156 -8064.0449 8297.0156 c
-8063.8975 8297.0156 -8063.3281 8297.292 -8063.2017 8297.3115 c
-8063.0752 8297.3115 -8062.8433 8297.333 -8062.6538 8297.333 c
-8062.2734 8297.333 -8062.0845 8297.2061 -8062.0845 8297.0801 c
-8062.0845 8296.8477 -8062.0845 8296.1738 -8062.9263 8294.7178 c
-8063.1167 8294.3809 -8064.2974 8293.0527 -8064.2974 8292.7148 c
-8064.2974 8292.5459 -8064.2134 8292.5264 -8064.1089 8292.5264 c
-8063.9185 8292.5264 -8063.4966 8292.9473 -8063.3706 8293.0947 c
-8062.1265 8294.4229 -8061.3042 8295.8564 -8060.9238 8297.1221 c
-8060.8398 8297.4385 -8060.7344 8297.3545 -8060.5654 8297.376 c
-8058.4155 8297.8818 -8056.3271 8300.3906 -8056.3271 8300.4121 c
-8056.4326 8300.6855 -8056.4326 8300.749 v
-8056.4326 8300.876 -8056.3271 8300.8975 -8056.3057 8300.8975 c
-8056.2432 8300.8975 -8056.0527 8300.6855 -8056.0103 8300.6855 c
-8055.9058 8300.6855 -8055.7783 8300.7705 -8055.7783 8300.918 C
-8055.8418 8301.4658 l
f
0 D
-8059.1104 8299.9697 m
-8058.5215 8299.9697 -8058.0986 8300.0752 -8057.6982 8300.3486 c
-8057.6553 8300.3701 -8057.6138 8300.3906 -8057.5928 8300.3906 c
-8057.5498 8300.3906 -8057.5498 8300.3701 -8057.5498 8300.3271 c
-8057.5498 8299.9063 -8059.4272 8297.9463 -8060.5654 8297.9463 c
-8060.6289 8297.9463 -8060.6714 8297.9873 -8060.6714 8298.0498 c
-8060.6714 8298.2402 -8060.5874 8300.2432 -8060.2495 8300.2432 c
-8060.1865 8300.2432 -8060.1016 8300.2217 -8060.0386 8300.1807 c
-8059.7007 8300.0322 -8059.4902 8299.9697 -8059.1104 8299.9697 c
f
-8058.5835 8302.7314 m
-8058.5835 8302.3096 -8058.5625 8301.8457 -8057.8662 8301.8457 c
-8057.2334 8301.8457 -8056.6431 8302.5 -8056.4961 8302.6475 c
-8056.4326 8302.6895 -8056.3906 8302.71 -8056.3486 8302.71 c
-8056.3271 8302.71 -8056.2847 8302.668 -8056.2847 8302.626 c
-8056.2847 8302.1826 -8057.6553 8300.5176 -8059.0049 8300.5176 c
-8059.2578 8300.5176 -8060.2705 8300.6855 -8060.2705 8301.2344 c
-8060.2705 8301.4873 -8059.8906 8302.8584 -8059.2793 8303.9336 c
-8057.9087 8306.4219 -8053.7119 8307.9805 -8051.8145 8307.9805 c
-8050.9072 8308.0029 -8050.6118 8307.6865 -8050.4863 8307.665 c
-8050.4648 8307.665 -8050.4438 8307.6445 -8050.4233 8307.6445 c
-8050.3174 8307.6445 -8050.1904 8307.708 -8050.1904 8307.8555 c
-8050.1904 8307.877 -8050.2119 8307.877 v
-8050.3594 8309.0146 -8050.4014 8309.416 -8050.4014 8310.6797 c
-8050.4014 8312.0732 -8050.4014 8312.1992 -8049.4321 8312.1992 c
-8048.1455 8312.1992 -8047.8506 8311.124 -8047.8506 8310.8916 c
-8047.8506 8310.4707 -8048.4399 8310.1748 -8048.5889 8310.1748 c
-8048.7358 8310.1748 -8048.9058 8310.2822 -8048.9058 8310.4707 c
-8048.9058 8310.7656 -8048.9473 8310.9131 -8049.2207 8310.9131 c
-8049.4951 8310.9131 -8049.4951 8310.5547 -8049.4951 8310.4482 c
-8049.4951 8310.1963 -8049.3896 8309.9434 -8049.1782 8309.8164 c
-8048.7998 8309.5635 -8048.7998 8309.1631 -8048.7998 8308.9521 c
-8048.7998 8308.8467 -8048.7998 8308.7197 -8048.8198 8308.6143 c
-8048.8418 8308.4463 -8050.7817 8306.4004 -8051.0977 8306.4004 c
-8051.2446 8306.4004 -8051.5615 8306.5469 -8052.4258 8306.5469 c
-8054.5767 8306.5469 -8055.5474 8304.8193 -8055.7378 8304.292 c
-8055.9897 8303.5752 -8056.7915 8303.2793 -8057.0225 8303.2793 c
-8057.2129 8303.2793 -8057.2129 8303.3223 -8057.2129 8303.7227 c
-8057.2129 8303.8076 -8057.4238 8304.1436 y
-8057.4238 8304.334 -8056.3906 8304.5869 -8056.3906 8304.7764 c
-8056.3906 8304.9463 -8056.5801 8304.9658 -8056.7271 8304.9658 c
-8056.8115 8304.9658 -8057.8882 8304.9658 -8058.3306 8304.1436 c
-8058.5415 8303.7432 -8058.5835 8303.1748 -8058.5835 8302.7314 c
f
1 D
-8054.4927 8300.4756 m
-8054.4927 8300.4316 -8054.5137 8300.4121 -8054.5352 8300.4121 c
-8054.5986 8300.4121 -8054.7666 8300.749 -8054.8506 8300.749 c
-8054.9146 8300.749 -8054.9995 8300.665 -8055.0415 8300.5586 c
-8055.0615 8300.4756 -8055.1255 8300.0107 -8055.21 8300.0107 c
-8055.2524 8300.0107 -8055.4209 8300.2432 -8055.4634 8300.2432 c
-8055.6104 8300.2432 -8055.7158 8300.0107 -8055.7158 8299.8018 c
-8055.7158 8299.6953 -8055.7783 8299.6953 -8055.9263 8299.6953 c
-8056.5166 8299.6953 -8058.1406 8297.5234 -8058.5625 8295.7725 c
-8058.6055 8295.6045 -8058.5835 8295.457 -8058.8994 8295.3506 c
-8061.0713 8294.6143 -8063.5176 8292.4619 -8063.5176 8292.3359 c
-8063.5176 8292.1885 -8063.4336 8292.1045 -8063.3066 8292.1045 c
-8063.2432 8292.1045 -8063.1592 8292.1045 -8062.6538 8292.4404 c
-8061.7681 8293.0313 -8059.7217 8294.3184 -8058.8994 8294.3184 c
-8058.6265 8294.3184 -8058.6055 8293.96 -8058.6055 8293.7061 c
-8058.6055 8293.5156 -8058.6265 8293.2842 -8058.6265 8293.1377 c
-8058.6465 8292.8633 -8058.9634 8292.5459 -8058.9634 8292.3779 c
-8058.9634 8292.2305 -8058.8154 8292.125 -8058.6465 8292.125 c
-8058.4575 8292.125 -8058.3306 8292.1465 -8058.1606 8292.3359 c
-8057.8662 8292.6729 -8057.7402 8292.8213 -8057.4238 8292.8213 c
-8057.1914 8292.8213 -8056.1377 8292.1045 -8055.8838 8292.1045 c
-8055.5679 8292.1045 -8055.1895 8292.5889 -8055.1895 8292.8848 c
-8055.1895 8293.6221 -8056.0942 8294.2129 -8056.6431 8294.2129 c
-8057.0225 8294.2129 -8057.4438 8294.0869 -8057.6353 8293.8545 c
-8057.6982 8293.79 -8057.7607 8293.749 -8057.8242 8293.749 c
-8057.9937 8293.749 -8058.1191 8294.2129 -8058.1191 8294.2549 c
-8058.1191 8294.6777 -8055.2729 8294.7393 -8054.9146 8294.7393 c
-8054.7666 8294.7393 -8054.6401 8294.6553 -8054.5352 8294.4863 c
-8054.3447 8294.1924 -8053.1855 8292.9697 -8051.6255 8292.9697 c
-8049.79 8292.9697 -8048.0825 8294.2324 -8048.0825 8296.1309 c
-8048.0825 8296.2373 -8048.1245 8296.7842 -8048.1245 8296.8066 c
-8048.1245 8296.8701 -8047.0063 8298.6191 -8045.6782 8298.6191 c
-8044.6245 8298.6191 -8044.2656 8298.0303 -8044.2656 8297.5439 c
-8044.2656 8297.3115 -8044.3711 8296.6592 -8044.8984 8296.6592 c
-8045.1094 8296.6592 -8045.2144 8296.8701 -8045.2144 8297.249 c
-8045.2144 8297.333 -8045.0039 8297.7129 -8045.0039 8297.8184 c
-8045.0039 8297.8604 -8045.0239 8297.8818 -8045.0879 8297.8818 c
-8045.4258 8297.8818 -8045.9521 8297.5234 -8046.1846 8296.8701 c
-8046.4595 8296.1533 -8046.8594 8295.457 -8047.1958 8295.0557 c
-8047.5127 8294.6982 -8047.6182 8294.1064 -8047.6182 8293.7695 c
-8047.6182 8293.2842 -8047.1338 8292.125 -8045.4878 8292.125 c
-8044.2871 8292.125 -8043.4434 8292.8633 -8043.4434 8293.4746 c
-8043.4434 8294.0869 -8043.7598 8294.4658 -8044.2026 8294.4658 c
-8044.6455 8294.4658 -8044.9824 8294.1279 -8044.9824 8293.79 c
-8044.9824 8293.1162 -8045.1514 8292.9697 -8045.4878 8292.9697 c
-8045.6992 8292.9697 -8045.8896 8293.0947 -8045.8896 8293.4111 c
-8045.8896 8293.6436 -8045.8896 8294.0225 -8044.3711 8295.2881 c
-8043.8857 8295.6885 -8043.4214 8296.3857 -8043.4214 8297.165 c
-8043.4214 8297.9248 -8044.4561 8299.125 -8045.6362 8299.125 c
-8046.8594 8299.125 -8047.6401 8298.3457 -8048.2515 8297.6289 c
-8048.5454 8297.292 -8049.9814 8295.6045 -8050.0439 8295.582 c
-8050.2334 8295.4346 -8050.3174 8295.3096 -8050.3174 8295.1826 c
-8050.3174 8295.0771 -8050.2119 8294.9717 -8050.0854 8294.9717 c
-8049.8535 8294.9717 -8048.9058 8295.9209 -8048.8198 8295.9209 c
-8048.7568 8295.9209 -8048.7153 8295.8564 -8048.7153 8295.7725 c
-8048.7153 8295.0137 -8049.8535 8293.5381 -8051.6255 8293.5381 c
-8053.1006 8293.5381 -8053.9863 8294.6553 -8053.9863 8294.6982 c
-8053.9863 8294.8242 -8053.8394 8294.9492 -8053.5225 8295.0137 c
-8049.6426 8295.752 -8046.3955 8299.3018 -8046.3955 8303.918 c
-8046.3955 8304.0244 -8046.2256 8304.0508 -8046.0786 8304.0508 c
-8045.7202 8304.0508 -8045.0879 8304.1299 -8045.0879 8303.8564 c
-8045.0879 8303.75 -8045.1294 8303.624 -8045.1934 8303.4971 c
-8045.5518 8302.9268 -8045.8682 8302.7529 -8045.8682 8301.8018 c
-8045.8682 8301.3389 -8045.4878 8300.8125 -8044.8984 8300.8125 c
-8043.8657 8300.8125 -8043.4214 8301.8457 -8043.4214 8302.0771 c
-8043.4214 8302.2461 -8043.5073 8302.3096 -8043.5903 8302.3096 c
-8043.7178 8302.3096 -8044.2241 8301.7822 -8044.3711 8301.7822 c
-8044.5615 8301.7822 -8044.7085 8301.8242 -8044.7085 8302.3096 c
-8044.7085 8302.6475 -8043.4214 8306.3584 -8043.4214 8307.1592 c
-8043.4214 8307.7295 -8043.7598 8308.4258 -8044.6455 8308.9307 c
-8044.6875 8308.9521 -8044.7085 8308.9727 -8044.7085 8309.0146 c
-8044.7085 8309.0986 -8044.5615 8309.2051 -8044.4126 8309.2461 c
-8043.8018 8309.416 -8043.4214 8309.5215 -8043.4214 8310.4707 c
-8043.4214 8310.8291 -8043.7598 8311.5039 -8044.0127 8311.5039 c
-8044.2026 8311.5039 -8044.2026 8311.4609 -8044.2026 8311.1025 c
-8044.2026 8310.9551 -8044.2446 8310.8496 -8044.3926 8310.7441 c
-8044.7085 8310.5332 -8044.7295 8310.4912 -8044.8135 8310.0068 c
-8044.8774 8309.6904 -8045.0039 8309.6045 -8046.1426 8308.9727 c
-8046.5854 8308.6992 -8046.6904 8308.4668 -8046.7744 8308.2354 c
-8046.8594 8308.0439 -8046.9233 8308.0439 -8047.4287 8308.0439 c
-8047.9561 8308.0439 -8050.5073 8305.3252 -8050.5073 8305.1982 c
-8050.5073 8305.1357 -8050.3809 8304.8398 -8050.3809 8304.7764 c
-8050.3809 8304.7139 -8050.4014 8304.6719 -8050.4438 8304.6719 c
-8050.4863 8304.6719 -8050.6338 8304.8818 -8050.6758 8304.8818 c
-8050.7817 8304.8818 -8050.7817 8304.6924 -8050.7817 8304.5439 c
-8050.7817 8304.4404 -8050.5703 8303.8701 -8050.5703 8303.7227 c
-8050.5703 8303.6387 -8050.5918 8303.5752 -8050.6338 8303.5752 c
-8050.7178 8303.5752 -8050.9072 8304.0381 -8050.9922 8304.0381 c
-8051.0342 8304.0381 -8051.0762 8303.9971 -8051.0762 8303.8701 c
-8051.0762 8303.7227 -8050.8862 8303.0059 y
-8050.8862 8302.9424 -8050.9072 8302.8369 -8050.9502 8302.8369 c
-8051.0342 8302.8369 -8051.1826 8303.2373 -8051.2666 8303.2373 c
-8051.3286 8303.2373 -8051.3926 8303.1533 -8051.3926 8303.0059 c
-8051.3926 8302.9209 -8051.2446 8302.5 -8051.2446 8302.3945 c
-8051.2446 8302.3311 -8051.2666 8302.2666 -8051.3086 8302.2666 c
-8051.3506 8302.2666 -8051.5835 8302.8799 -8051.7095 8302.8799 c
-8051.7935 8302.8799 -8051.8994 8302.7725 -8051.8994 8302.668 c
-8051.8994 8302.584 -8051.7729 8302.2256 -8051.7729 8302.1416 c
-8051.7729 8302.0986 -8051.7729 8302.0771 -8051.7935 8302.0771 c
-8051.8774 8302.0771 -8052.0254 8302.5625 -8052.1104 8302.5625 c
-8052.3418 8302.5625 -8052.3623 8302.1416 -8052.3623 8301.9512 c
-8052.3623 8301.8672 -8052.2998 8301.5303 -8052.2998 8301.4658 c
-8052.2998 8301.4033 -8052.3198 8301.3818 -8052.3418 8301.3818 c
-8052.4897 8301.3818 -8052.6782 8302.1826 -8052.8271 8302.1826 c
-8053.0386 8302.1826 -8053.0386 8301.9932 -8053.0386 8301.7617 c
-8053.0166 8301.2344 L
-8053.0166 8301.2129 -8053.0386 8301.1924 y
-8053.0586 8301.1924 -8053.1006 8301.2129 -8053.1226 8301.2764 c
-8053.1855 8301.4873 -8053.3115 8301.9092 -8053.5225 8301.9092 c
-8053.6694 8301.9092 -8053.8174 8301.7402 -8053.8174 8301.5938 c
-8053.8174 8301.3604 -8053.7119 8300.9805 -8053.7119 8300.749 c
-8053.7119 8300.6855 -8053.7334 8300.665 -8053.7754 8300.665 c
-8053.8608 8300.665 -8053.9863 8301.1064 -8054.0278 8301.1924 c
-8054.0918 8301.2764 -8054.1553 8301.2979 -8054.2192 8301.2979 c
-8054.5352 8301.2979 -8054.5352 8300.9805 -8054.5352 8300.833 C
-8054.4927 8300.4756 l
f
0 D
-8055.8633 8296.1104 m
-8055.8633 8295.8779 -8057.8042 8295.6885 -8057.8662 8295.6885 c
-8057.9722 8295.6885 -8058.0352 8295.752 -8058.0352 8295.8564 c
-8058.0352 8296.7217 -8056.2847 8298.957 -8055.8633 8298.957 c
-8055.7998 8298.957 -8055.7783 8298.9365 -8055.7783 8298.873 c
-8056.2002 8297.6289 -8056.2002 8297.376 v
-8056.2002 8296.9961 -8056.0942 8296.7432 -8055.9058 8296.3213 c
-8055.8838 8296.2373 -8055.8633 8296.1738 -8055.8633 8296.1104 c
f
-8047.1338 8307.5596 m
-8046.9858 8307.5596 -8046.4795 8307.0547 -8046.3325 8307.0547 c
-8046.2065 8307.0547 -8046.0791 8307.1387 -8046.0791 8307.2861 c
-8046.0791 8307.3701 -8046.2695 8307.8125 -8046.2695 8307.918 c
-8046.2695 8308.2764 -8045.8896 8308.5732 -8045.5098 8308.5732 c
-8045.1094 8308.5732 -8043.9702 8308.2559 -8043.9702 8307.0322 c
-8043.9702 8305.9365 -8044.3926 8305.9365 -8046.0366 8305.9365 c
-8046.3955 8305.9365 -8048.0615 8306.126 -8048.3145 8306.126 c
-8048.4399 8306.126 -8048.4834 8305.957 -8048.4834 8305.8301 c
-8048.4834 8305.7891 -8048.4834 8305.7471 -8048.4614 8305.7256 c
-8048.3984 8305.3467 -8048.1675 8304.7979 -8048.1675 8304.418 c
-8048.1675 8299.9697 -8052.2998 8296.1104 -8054.7666 8296.1104 c
-8055.4209 8296.1104 -8055.6519 8296.9121 -8055.6519 8297.333 c
-8055.6519 8299.0625 -8053.6694 8300.0947 -8053.4175 8300.0947 c
-8053.3545 8300.0947 -8053.3335 8300.0752 -8053.3335 8300.0322 c
-8053.3335 8299.9902 -8053.3545 8299.9482 -8053.3975 8299.9063 c
-8053.5225 8299.7373 -8054.0498 8299.125 -8054.0498 8298.4932 c
-8054.0498 8298.1553 -8053.7554 8297.7129 -8052.9951 8297.7129 c
-8051.7305 8297.7129 -8051.1826 8299.0625 -8051.1826 8299.4209 c
-8051.1826 8299.5693 -8051.2446 8299.7793 -8051.4561 8299.7793 c
-8051.6035 8299.7793 -8052.0049 8299.125 -8052.1519 8299.125 c
-8052.2158 8299.125 -8052.4473 8299.252 -8052.5103 8299.252 c
-8052.5942 8299.252 -8052.6582 8299.2314 -8052.7422 8299.2314 c
-8052.8057 8299.2314 -8052.8481 8299.2939 -8052.8481 8299.3994 c
-8052.8481 8299.7588 -8052.3623 8300.3271 -8051.8774 8300.5811 c
-8050.9722 8301.0439 -8049.6226 8302.373 -8049.6226 8303.8281 c
-8049.6226 8304.249 -8049.6846 8304.6504 -8049.6846 8304.9873 c
-8049.6846 8305.5361 -8048.7568 8306.4004 -8047.8081 8307.2861 c
-8047.6401 8307.4336 -8047.3862 8307.5596 -8047.1338 8307.5596 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8038.9722 8317.2803 m
-8038.9722 8291.2529 L
-8065 8291.2529 L
-8065 8317.2803 L
-8038.9722 8317.2803 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8047.6455 8304.2695 m
-8038.9736 8304.2695 l
S
-8051.9839 8317.2803 m
-8051.9839 8308.6045 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-8047.7202 8299.9307 m
-8038.9727 8299.9307 l
S
-8056.3232 8317.2803 m
-8056.3232 8307.9258 l
S
0.7084 0.636438 0.515526 0.381872 K
-8047.6504 8317.2803 m
-8047.6504 8314.8672 l
-8044.9937 8314.6436 -8043.3096 8312.9404 v
-8041.6064 8311.2139 -8041.3774 8308.6084 y
-8038.9727 8308.6084 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8055.7783 8300.918 m
-8055.7783 8300.7705 -8055.9058 8300.6855 -8056.0103 8300.6855 c
-8056.0527 8300.6855 -8056.2432 8300.8975 -8056.3057 8300.8975 c
-8056.3271 8300.8975 -8056.4326 8300.876 -8056.4326 8300.749 c
-8056.4326 8300.6855 -8056.3271 8300.4121 y
-8056.3271 8300.3906 -8058.4155 8297.8818 -8060.5654 8297.376 c
-8060.7344 8297.3545 -8060.8398 8297.4385 -8060.9238 8297.1221 c
-8061.3042 8295.8564 -8062.1265 8294.4229 -8063.3706 8293.0947 c
-8063.4966 8292.9482 -8063.9185 8292.5264 -8064.1089 8292.5264 c
-8064.2134 8292.5264 -8064.2974 8292.5459 -8064.2974 8292.7148 c
-8064.2974 8293.0527 -8063.1167 8294.3809 -8062.9263 8294.7178 c
-8062.0845 8296.1738 -8062.0845 8296.8477 -8062.0845 8297.0801 c
-8062.0845 8297.2061 -8062.2734 8297.333 -8062.6538 8297.333 c
-8062.8433 8297.333 -8063.0752 8297.3115 -8063.2017 8297.3115 c
-8063.3281 8297.292 -8063.8975 8297.0156 -8064.0449 8297.0156 c
-8064.2134 8297.0156 -8064.3193 8297.1436 -8064.3193 8297.3115 c
-8064.3193 8297.5029 -8064.2559 8297.6289 -8064.0654 8297.7764 c
-8063.3921 8298.3877 -8063.3486 8298.4082 -8063.3486 8298.8936 c
-8063.3486 8299.168 -8064.0449 8300.3701 -8064.0449 8300.665 c
-8064.0449 8300.9805 -8063.5806 8301.2129 -8063.3066 8301.2129 c
-8062.4424 8301.2129 -8062.21 8299.7373 -8062.21 8299.4209 c
-8062.21 8299.1885 -8062.5054 8298.0938 y
-8062.5054 8297.9023 -8062.4424 8297.9023 -8061.9995 8297.9023 c
-8061.6626 8297.9023 -8061.5986 8300.833 -8061.5986 8301.0439 c
-8061.5986 8301.2129 -8061.6826 8301.3389 -8061.8511 8301.4463 c
-8062.1265 8301.6357 -8063.4336 8302.9629 -8063.4121 8304.376 c
-8063.4121 8306.8652 -8061.6406 8307.8125 -8060.9458 8307.8975 c
-8060.5874 8307.9404 -8059.7007 8307.918 -8059.4058 8308.0879 c
-8058.9424 8308.3193 -8057.8042 8309.4795 -8057.8042 8310.4707 c
-8057.8042 8311.6719 -8058.5215 8312.0303 -8058.8774 8312.0303 c
-8059.2378 8312.0303 -8059.5103 8312.0098 -8059.5103 8311.5244 c
-8059.5103 8311.3135 -8059.3423 8311.0811 -8059.1318 8311.0186 c
-8059.0474 8310.9971 -8058.2881 8310.8076 -8058.2881 8310.4912 c
-8058.2881 8310.3428 -8058.3721 8310.3428 -8058.5835 8310.3428 c
-8059.1318 8310.3428 -8059.8066 8310.1338 -8061.0928 8308.9307 c
-8061.4722 8308.5938 -8062.1265 8308.5098 -8062.5679 8308.5098 c
-8063.0537 8308.5098 -8064.2974 8308.9727 -8064.2974 8310.4707 c
-8064.2974 8312.3037 -8063.4751 8313.001 -8062.8433 8313.001 c
-8062.4209 8313.001 -8061.8936 8312.6836 -8061.8936 8312.4092 c
-8061.8936 8312.0732 -8061.9575 8311.6514 -8062.5479 8311.6084 c
-8063.0537 8311.5664 -8063.3066 8311.334 -8063.3066 8310.9971 c
-8063.3066 8310.7861 -8063.1592 8310.5752 -8062.8218 8310.5752 c
-8062.3154 8310.5752 -8061.7041 8311.1455 -8061.0713 8311.8828 c
-8060.6714 8312.3682 -8059.7007 8312.8955 -8058.9209 8312.8955 c
-8058.1191 8312.8955 -8057.0654 8311.9893 -8057.0654 8310.6172 c
-8057.0654 8309.3525 -8058.4995 8308.0439 -8059.2378 8307.5186 c
-8059.9546 8306.9912 -8060.3335 8306.6113 -8060.46 8306.4004 c
-8060.5654 8306.2529 -8060.9033 8305.3037 -8061.1143 8305.3037 c
-8061.2607 8305.3037 -8061.3672 8305.4717 -8061.3672 8305.6836 c
-8061.3672 8306 -8061.1143 8306.6338 -8060.7759 8306.9697 c
-8060.6929 8307.0752 -8060.6494 8307.1387 -8060.6494 8307.2012 c
-8060.6494 8307.3496 -8060.8398 8307.3701 -8060.9873 8307.3701 c
-8061.5767 8307.3701 -8062.7793 8306.4004 -8062.7793 8304.5664 c
-8062.7793 8302.9844 -8061.7881 8302.1416 -8061.6406 8302.1416 c
-8061.5361 8302.1416 -8061.4297 8302.2461 -8061.3672 8302.458 c
-8059.6592 8308.6143 -8054.7822 8309.8379 -8052.3774 8309.8379 c
-8052.2729 8309.8379 -8052.1895 8309.9004 -8052.1895 8310.0498 c
-8052.1895 8310.1748 -8052.1895 8311.2725 -8052.3359 8311.2725 c
-8052.3774 8311.2725 -8052.4414 8311.25 -8052.5264 8311.1875 c
-8053.0942 8310.7236 -8053.3755 8310.3652 -8054.3022 8310.3652 c
-8054.7666 8310.3652 -8055.5679 8310.8916 -8055.5679 8311.5039 c
-8055.5679 8312.2832 -8054.8936 8313.001 -8054.4082 8313.001 c
-8054.0498 8313.001 -8053.9023 8312.916 -8053.9023 8312.79 c
-8053.9023 8312.6621 -8054.3662 8312.2207 -8054.3662 8312.0732 c
-8054.3662 8311.8193 -8054.3242 8311.6719 -8053.8809 8311.6719 c
-8053.4814 8311.6719 -8052.7842 8311.8418 -8052.3418 8312.0947 c
-8051.8774 8312.3682 -8050.7393 8313.001 -8049.7065 8313.001 c
-8048.9473 8313.001 -8047.9561 8312.5576 -8047.4702 8311.7568 c
-8047.4287 8311.6924 -8047.3862 8311.6719 -8047.3447 8311.6719 c
-8047.2393 8311.6719 -8047.1543 8311.7568 -8047.1338 8311.9053 c
-8047.0913 8312.3037 -8046.7534 8313.001 -8045.9312 8313.001 c
-8045.3408 8313.001 -8044.8135 8312.4941 -8044.8135 8312.0508 c
-8044.8135 8311.8828 -8044.9194 8311.8193 -8045.0239 8311.8193 c
-8045.1094 8311.8193 -8045.4878 8312.0732 -8045.5942 8312.0732 c
-8045.7407 8312.0732 -8046.6479 8311.4609 -8046.7334 8311.3135 c
-8047.5127 8310.0273 -8047.5977 8309.8799 -8048.2295 8309.626 c
-8048.3984 8309.542 -8048.3984 8309.458 -8048.3984 8308.5938 c
-8048.3984 8308.4668 -8048.3984 8308.1709 -8048.5454 8308.0029 c
-8048.8198 8307.7295 -8050.9287 8305.6621 -8051.1392 8305.6621 c
-8051.2241 8305.6621 -8051.4985 8305.9365 -8051.5835 8305.9365 c
-8051.6035 8305.9365 -8051.6255 8305.9365 -8051.6255 8305.8945 C
-8051.6035 8305.7471 l
-8051.6035 8305.5791 -8051.6455 8305.4932 -8051.8564 8305.4932 c
-8051.9199 8305.4932 -8052.1943 8305.6201 -8052.2568 8305.6201 c
-8052.3198 8305.6201 -8052.3623 8305.1777 -8052.4473 8305.1777 c
-8052.4678 8305.1777 -8052.8057 8305.4092 -8052.8896 8305.4092 c
-8053.0166 8305.4092 -8053.1006 8305.3252 -8053.1006 8305.2197 c
-8053.1006 8305.1572 -8053.1006 8304.6719 -8053.2065 8304.6719 c
-8053.2915 8304.6719 -8053.5225 8304.9658 -8053.5654 8304.9658 c
-8053.5854 8304.9658 -8053.5854 8304.9463 -8053.5854 8304.8818 C
-8053.5439 8304.4609 l
-8053.5439 8304.3965 -8053.5854 8304.376 -8053.6494 8304.376 c
-8053.7119 8304.376 -8053.9658 8304.6924 -8054.0498 8304.6924 c
-8054.0918 8304.6924 -8054.1138 8304.6504 -8054.1138 8304.5664 c
-8054.1138 8304.5244 -8053.9233 8303.8076 -8053.9233 8303.6592 c
-8053.9233 8303.5752 -8053.9658 8303.5322 -8054.0078 8303.5322 c
-8054.0918 8303.5322 -8054.4297 8303.8916 -8054.4722 8303.8916 c
-8054.4927 8303.8916 -8054.4927 8303.8916 -8054.4927 8303.8701 c
-8054.4927 8303.7861 -8054.3882 8303.4268 -8054.3882 8303.4072 c
-8054.3882 8303.3857 -8054.4082 8303.3643 -8054.4297 8303.3643 c
-8054.4722 8303.3643 -8054.6826 8303.5752 -8054.7446 8303.5752 c
-8054.7666 8303.5752 -8054.7666 8303.5752 -8054.7666 8303.5322 c
-8054.7666 8303.3643 -8054.5137 8302.626 -8054.5137 8302.5625 c
-8054.5137 8302.541 -8054.5352 8302.5205 -8054.5562 8302.5205 c
-8054.6826 8302.5205 -8055.1055 8303.0908 -8055.1465 8303.0908 c
-8055.1675 8303.0908 -8055.1675 8303.0693 -8055.1675 8303.0059 c
-8055.1675 8302.8154 -8054.8936 8301.9092 y
-8054.8936 8301.8877 -8054.9146 8301.8672 -8054.9351 8301.8672 c
-8055.0615 8301.8672 -8055.4414 8302.4141 -8055.5049 8302.4141 c
-8055.5264 8302.4141 -8055.5264 8302.4141 -8055.5264 8302.373 c
-8055.2729 8301.4658 -8055.2729 8301.3818 v
-8055.2729 8301.2764 -8055.3154 8301.2344 -8055.3994 8301.2344 c
-8055.4634 8301.2344 -8055.6943 8301.5713 -8055.7783 8301.5713 c
-8055.8218 8301.5713 -8055.8418 8301.5303 -8055.8418 8301.4658 c
-8055.7783 8300.918 L
f
1 D
-8060.0386 8300.1807 m
-8060.1016 8300.2217 -8060.1865 8300.2432 -8060.2495 8300.2432 c
-8060.5874 8300.2432 -8060.6714 8298.2402 -8060.6714 8298.0498 c
-8060.6714 8297.9873 -8060.6289 8297.9463 -8060.5654 8297.9463 c
-8059.4272 8297.9463 -8057.5498 8299.9072 -8057.5498 8300.3271 c
-8057.5498 8300.3701 -8057.5498 8300.3906 -8057.5928 8300.3906 c
-8057.6138 8300.3906 -8057.6553 8300.3701 -8057.6982 8300.3486 c
-8058.0986 8300.0752 -8058.5215 8299.9697 -8059.1104 8299.9697 c
-8059.4902 8299.9697 -8059.7007 8300.0322 -8060.0386 8300.1807 c
f
-8058.3306 8304.1436 m
-8057.8882 8304.9658 -8056.8115 8304.9658 -8056.7271 8304.9658 c
-8056.5801 8304.9658 -8056.3906 8304.9463 -8056.3906 8304.7764 c
-8056.3906 8304.5869 -8057.4238 8304.334 -8057.4238 8304.1436 c
-8057.2129 8303.8076 -8057.2129 8303.7227 v
-8057.2129 8303.3232 -8057.2129 8303.2803 -8057.0225 8303.2803 c
-8056.7915 8303.2803 -8055.9897 8303.5752 -8055.7378 8304.292 c
-8055.5474 8304.8193 -8054.5767 8306.5469 -8052.4258 8306.5469 c
-8051.5615 8306.5469 -8051.2446 8306.4004 -8051.0977 8306.4004 c
-8050.7817 8306.4004 -8048.8418 8308.4463 -8048.8198 8308.6143 c
-8048.7998 8308.7197 -8048.7998 8308.8467 -8048.7998 8308.9521 c
-8048.7998 8309.1631 -8048.7998 8309.5635 -8049.1782 8309.8164 c
-8049.3896 8309.9434 -8049.4951 8310.1963 -8049.4951 8310.4482 c
-8049.4951 8310.5547 -8049.4951 8310.9131 -8049.2207 8310.9131 c
-8048.9473 8310.9131 -8048.9058 8310.7656 -8048.9058 8310.4707 c
-8048.9058 8310.2822 -8048.7358 8310.1748 -8048.5889 8310.1748 c
-8048.4399 8310.1748 -8047.8506 8310.4707 -8047.8506 8310.8916 c
-8047.8506 8311.124 -8048.1455 8312.1992 -8049.4321 8312.1992 c
-8050.4014 8312.1992 -8050.4014 8312.0732 -8050.4014 8310.6797 c
-8050.4014 8309.416 -8050.3594 8309.0146 -8050.2119 8307.877 c
-8050.1904 8307.877 -8050.1904 8307.8555 y
-8050.1904 8307.708 -8050.3174 8307.6445 -8050.4233 8307.6445 c
-8050.4438 8307.6445 -8050.4648 8307.665 -8050.4863 8307.665 c
-8050.6118 8307.6865 -8050.9072 8308.0029 -8051.8145 8307.9805 c
-8053.7119 8307.9805 -8057.9087 8306.4219 -8059.2793 8303.9336 c
-8059.8906 8302.8584 -8060.2705 8301.4873 -8060.2705 8301.2344 c
-8060.2705 8300.6855 -8059.2578 8300.5176 -8059.0049 8300.5176 c
-8057.6553 8300.5176 -8056.2847 8302.1826 -8056.2847 8302.626 c
-8056.2847 8302.668 -8056.3271 8302.71 -8056.3486 8302.71 c
-8056.3906 8302.71 -8056.4326 8302.6895 -8056.4961 8302.6475 c
-8056.6431 8302.5 -8057.2334 8301.8457 -8057.8662 8301.8457 c
-8058.5625 8301.8457 -8058.5835 8302.3096 -8058.5835 8302.7314 c
-8058.5835 8303.1748 -8058.5415 8303.7432 -8058.3306 8304.1436 c
f
0 D
-8054.5352 8300.833 m
-8054.5352 8300.9805 -8054.5352 8301.2979 -8054.2192 8301.2979 c
-8054.1553 8301.2979 -8054.0918 8301.2764 -8054.0278 8301.1924 c
-8053.9863 8301.1064 -8053.8608 8300.665 -8053.7754 8300.665 c
-8053.7334 8300.665 -8053.7119 8300.6855 -8053.7119 8300.749 c
-8053.7119 8300.9805 -8053.8174 8301.3604 -8053.8174 8301.5938 c
-8053.8174 8301.7402 -8053.6694 8301.9092 -8053.5225 8301.9092 c
-8053.3115 8301.9092 -8053.1855 8301.4873 -8053.1226 8301.2764 c
-8053.1006 8301.2129 -8053.0586 8301.1924 -8053.0386 8301.1924 c
-8053.0166 8301.2129 -8053.0166 8301.2344 V
-8053.0386 8301.7617 l
-8053.0386 8301.9932 -8053.0386 8302.1826 -8052.8271 8302.1826 c
-8052.6782 8302.1826 -8052.4897 8301.3818 -8052.3418 8301.3818 c
-8052.3198 8301.3818 -8052.2998 8301.4033 -8052.2998 8301.4658 c
-8052.2998 8301.5303 -8052.3623 8301.8672 -8052.3623 8301.9512 c
-8052.3623 8302.1416 -8052.3418 8302.5625 -8052.1104 8302.5625 c
-8052.0254 8302.5625 -8051.8774 8302.0771 -8051.7935 8302.0771 c
-8051.7729 8302.0771 -8051.7729 8302.0986 -8051.7729 8302.1416 c
-8051.7729 8302.2256 -8051.8994 8302.584 -8051.8994 8302.668 c
-8051.8994 8302.7725 -8051.7935 8302.8799 -8051.7095 8302.8799 c
-8051.5835 8302.8799 -8051.3506 8302.2666 -8051.3086 8302.2666 c
-8051.2666 8302.2666 -8051.2446 8302.3311 -8051.2446 8302.3945 c
-8051.2446 8302.5 -8051.3926 8302.9209 -8051.3926 8303.0059 c
-8051.3926 8303.1533 -8051.3286 8303.2373 -8051.2666 8303.2373 c
-8051.1826 8303.2373 -8051.0342 8302.8369 -8050.9502 8302.8369 c
-8050.9072 8302.8369 -8050.8862 8302.9424 -8050.8862 8303.0059 c
-8051.0762 8303.7227 -8051.0762 8303.8701 v
-8051.0762 8303.9971 -8051.0342 8304.0381 -8050.9922 8304.0381 c
-8050.9072 8304.0381 -8050.7178 8303.5752 -8050.6338 8303.5752 c
-8050.5918 8303.5752 -8050.5703 8303.6387 -8050.5703 8303.7227 c
-8050.5703 8303.8701 -8050.7817 8304.4404 -8050.7817 8304.5439 c
-8050.7817 8304.6924 -8050.7817 8304.8818 -8050.6758 8304.8818 c
-8050.6338 8304.8818 -8050.4863 8304.6719 -8050.4438 8304.6719 c
-8050.4014 8304.6719 -8050.3809 8304.7139 -8050.3809 8304.7764 c
-8050.3809 8304.8398 -8050.5073 8305.1357 -8050.5073 8305.1982 c
-8050.5073 8305.3252 -8047.9561 8308.0439 -8047.4287 8308.0439 c
-8046.9233 8308.0439 -8046.8594 8308.0439 -8046.7744 8308.2354 c
-8046.6904 8308.4668 -8046.5854 8308.6992 -8046.1426 8308.9727 c
-8045.0039 8309.6045 -8044.8774 8309.6904 -8044.8135 8310.0068 c
-8044.7295 8310.4912 -8044.7085 8310.5332 -8044.3926 8310.7441 c
-8044.2446 8310.8496 -8044.2026 8310.9551 -8044.2026 8311.1025 c
-8044.2026 8311.4609 -8044.2026 8311.5039 -8044.0127 8311.5039 c
-8043.7598 8311.5039 -8043.4214 8310.8291 -8043.4214 8310.4707 c
-8043.4214 8309.5215 -8043.8018 8309.416 -8044.4126 8309.2461 c
-8044.5615 8309.2051 -8044.7085 8309.0986 -8044.7085 8309.0146 c
-8044.7085 8308.9727 -8044.6875 8308.9521 -8044.6455 8308.9307 c
-8043.7598 8308.4258 -8043.4214 8307.7295 -8043.4214 8307.1592 c
-8043.4214 8306.3584 -8044.7085 8302.6475 -8044.7085 8302.3096 c
-8044.7085 8301.8242 -8044.5615 8301.7822 -8044.3711 8301.7822 c
-8044.2241 8301.7822 -8043.7178 8302.3096 -8043.5903 8302.3096 c
-8043.5073 8302.3096 -8043.4214 8302.2461 -8043.4214 8302.0771 c
-8043.4214 8301.8457 -8043.8657 8300.8125 -8044.8984 8300.8125 c
-8045.4878 8300.8125 -8045.8682 8301.3389 -8045.8682 8301.8018 c
-8045.8682 8302.7529 -8045.5518 8302.9268 -8045.1934 8303.4971 c
-8045.1294 8303.624 -8045.0879 8303.75 -8045.0879 8303.8564 c
-8045.0879 8304.1299 -8045.7202 8304.0508 -8046.0786 8304.0508 c
-8046.2256 8304.0508 -8046.3955 8304.0244 -8046.3955 8303.918 c
-8046.3955 8299.3018 -8049.6426 8295.752 -8053.5225 8295.0137 c
-8053.8394 8294.9492 -8053.9863 8294.8242 -8053.9863 8294.6982 c
-8053.9863 8294.6553 -8053.1006 8293.5381 -8051.6255 8293.5381 c
-8049.8535 8293.5381 -8048.7153 8295.0137 -8048.7153 8295.7725 c
-8048.7153 8295.8564 -8048.7568 8295.9209 -8048.8198 8295.9209 c
-8048.9058 8295.9209 -8049.8535 8294.9717 -8050.0854 8294.9717 c
-8050.2119 8294.9717 -8050.3174 8295.0771 -8050.3174 8295.1826 c
-8050.3174 8295.3096 -8050.2334 8295.4346 -8050.0439 8295.582 c
-8049.9814 8295.6045 -8048.5454 8297.292 -8048.2515 8297.6289 c
-8047.6401 8298.3457 -8046.8594 8299.125 -8045.6362 8299.125 c
-8044.4561 8299.125 -8043.4214 8297.9248 -8043.4214 8297.165 c
-8043.4214 8296.3857 -8043.8857 8295.6885 -8044.3711 8295.2881 c
-8045.8896 8294.0225 -8045.8896 8293.6436 -8045.8896 8293.4111 c
-8045.8896 8293.0947 -8045.6992 8292.9697 -8045.4878 8292.9697 c
-8045.1514 8292.9697 -8044.9824 8293.1162 -8044.9824 8293.79 c
-8044.9824 8294.1279 -8044.6455 8294.4658 -8044.2026 8294.4658 c
-8043.7598 8294.4658 -8043.4434 8294.0869 -8043.4434 8293.4746 c
-8043.4434 8292.8643 -8044.2871 8292.125 -8045.4878 8292.125 c
-8047.1338 8292.125 -8047.6182 8293.2842 -8047.6182 8293.7695 c
-8047.6182 8294.1064 -8047.5127 8294.6982 -8047.1958 8295.0557 c
-8046.8594 8295.457 -8046.4595 8296.1533 -8046.1846 8296.8701 c
-8045.9521 8297.5234 -8045.4258 8297.8818 -8045.0879 8297.8818 c
-8045.0239 8297.8818 -8045.0039 8297.8604 -8045.0039 8297.8184 c
-8045.0039 8297.7129 -8045.2144 8297.333 -8045.2144 8297.249 c
-8045.2144 8296.8701 -8045.1094 8296.6592 -8044.8984 8296.6592 c
-8044.3711 8296.6592 -8044.2656 8297.3115 -8044.2656 8297.5439 c
-8044.2656 8298.0303 -8044.6245 8298.6191 -8045.6782 8298.6191 c
-8047.0063 8298.6191 -8048.1245 8296.8701 -8048.1245 8296.8066 c
-8048.1245 8296.7842 -8048.0825 8296.2373 -8048.0825 8296.1309 c
-8048.0825 8294.2324 -8049.79 8292.9697 -8051.6255 8292.9697 c
-8053.1855 8292.9697 -8054.3447 8294.1924 -8054.5352 8294.4863 c
-8054.6401 8294.6553 -8054.7666 8294.7393 -8054.9146 8294.7393 c
-8055.2729 8294.7393 -8058.1191 8294.6777 -8058.1191 8294.2549 c
-8058.1191 8294.2129 -8057.9937 8293.749 -8057.8242 8293.749 c
-8057.7607 8293.749 -8057.6982 8293.79 -8057.6353 8293.8545 c
-8057.4438 8294.0869 -8057.0225 8294.2129 -8056.6431 8294.2129 c
-8056.0942 8294.2129 -8055.1895 8293.6221 -8055.1895 8292.8848 c
-8055.1895 8292.5889 -8055.5679 8292.1045 -8055.8838 8292.1045 c
-8056.1377 8292.1045 -8057.1914 8292.8213 -8057.4238 8292.8213 c
-8057.7402 8292.8213 -8057.8662 8292.6729 -8058.1606 8292.3359 c
-8058.3306 8292.1465 -8058.4575 8292.125 -8058.6465 8292.125 c
-8058.8154 8292.125 -8058.9634 8292.2305 -8058.9634 8292.3779 c
-8058.9634 8292.5459 -8058.6465 8292.8643 -8058.6265 8293.1377 c
-8058.6265 8293.2842 -8058.6055 8293.5156 -8058.6055 8293.7061 c
-8058.6055 8293.96 -8058.6265 8294.3184 -8058.8994 8294.3184 c
-8059.7217 8294.3184 -8061.7681 8293.0322 -8062.6538 8292.4404 c
-8063.1592 8292.1045 -8063.2432 8292.1045 -8063.3066 8292.1045 c
-8063.4336 8292.1045 -8063.5176 8292.1885 -8063.5176 8292.3359 c
-8063.5176 8292.4619 -8061.0713 8294.6143 -8058.8994 8295.3506 c
-8058.5835 8295.457 -8058.6055 8295.6045 -8058.5625 8295.7725 c
-8058.1406 8297.5234 -8056.5166 8299.6963 -8055.9263 8299.6963 c
-8055.7783 8299.6963 -8055.7158 8299.6963 -8055.7158 8299.8018 c
-8055.7158 8300.0107 -8055.6104 8300.2432 -8055.4634 8300.2432 c
-8055.4209 8300.2432 -8055.2524 8300.0107 -8055.21 8300.0107 c
-8055.1255 8300.0107 -8055.0615 8300.4756 -8055.0415 8300.5586 c
-8054.9995 8300.665 -8054.9146 8300.749 -8054.8506 8300.749 c
-8054.7666 8300.749 -8054.5986 8300.4121 -8054.5352 8300.4121 c
-8054.5137 8300.4121 -8054.4927 8300.4316 -8054.4927 8300.4756 c
-8054.5352 8300.833 L
f
1 D
-8055.9058 8296.3213 m
-8056.0942 8296.7432 -8056.2002 8296.9961 -8056.2002 8297.376 c
-8056.2002 8297.6289 -8055.7783 8298.873 y
-8055.7783 8298.9365 -8055.7998 8298.957 -8055.8633 8298.957 c
-8056.2847 8298.957 -8058.0352 8296.7217 -8058.0352 8295.8564 c
-8058.0352 8295.752 -8057.9722 8295.6885 -8057.8662 8295.6885 c
-8057.8042 8295.6885 -8055.8633 8295.8779 -8055.8633 8296.1104 c
-8055.8633 8296.1738 -8055.8838 8296.2373 -8055.9058 8296.3213 c
f
-8047.8081 8307.2861 m
-8048.7568 8306.4004 -8049.6846 8305.5361 -8049.6846 8304.9873 c
-8049.6846 8304.6504 -8049.6226 8304.249 -8049.6226 8303.8281 c
-8049.6226 8302.373 -8050.9722 8301.0439 -8051.8774 8300.5811 c
-8052.3623 8300.3271 -8052.8481 8299.7588 -8052.8481 8299.3994 c
-8052.8481 8299.2939 -8052.8057 8299.2314 -8052.7422 8299.2314 c
-8052.6582 8299.2314 -8052.5942 8299.252 -8052.5103 8299.252 c
-8052.4473 8299.252 -8052.2158 8299.125 -8052.1519 8299.125 c
-8052.0049 8299.125 -8051.6035 8299.7803 -8051.4561 8299.7803 c
-8051.2446 8299.7803 -8051.1826 8299.5693 -8051.1826 8299.4209 c
-8051.1826 8299.0625 -8051.7305 8297.7129 -8052.9951 8297.7129 c
-8053.7554 8297.7129 -8054.0498 8298.1553 -8054.0498 8298.4932 c
-8054.0498 8299.125 -8053.5225 8299.7373 -8053.3975 8299.9072 c
-8053.3545 8299.9482 -8053.3335 8299.9902 -8053.3335 8300.0322 c
-8053.3335 8300.0752 -8053.3545 8300.0947 -8053.4175 8300.0947 c
-8053.6694 8300.0947 -8055.6519 8299.0625 -8055.6519 8297.333 c
-8055.6519 8296.9121 -8055.4209 8296.1104 -8054.7666 8296.1104 c
-8052.2998 8296.1104 -8048.1675 8299.9697 -8048.1675 8304.418 c
-8048.1675 8304.7979 -8048.3984 8305.3467 -8048.4614 8305.7256 c
-8048.4834 8305.7471 -8048.4834 8305.7891 -8048.4834 8305.8301 c
-8048.4834 8305.957 -8048.4399 8306.126 -8048.3145 8306.126 c
-8048.0615 8306.126 -8046.3955 8305.9365 -8046.0366 8305.9365 c
-8044.3926 8305.9365 -8043.9702 8305.9365 -8043.9702 8307.0322 c
-8043.9702 8308.2559 -8045.1094 8308.5732 -8045.5098 8308.5732 c
-8045.8896 8308.5732 -8046.2695 8308.2764 -8046.2695 8307.918 c
-8046.2695 8307.8125 -8046.0791 8307.3701 -8046.0791 8307.2861 c
-8046.0791 8307.1387 -8046.2065 8307.0547 -8046.3325 8307.0547 c
-8046.4795 8307.0547 -8046.9858 8307.5596 -8047.1338 8307.5596 c
-8047.3862 8307.5596 -8047.6401 8307.4336 -8047.8081 8307.2861 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt \221\310\211~/ Adobe Calligraphic ) -
(Brush Tool/ 5 pt \221\310\211~/ Adobe Calligraphic Brush Tool/ 5 pt \203t\203) -
(\211\203b\203g/ Adobe Calligraphic Brush Tool/ 3 pt \203\211\203E\203\223\203h/ Adobe Cal) -
(ligraphic Brush Tool/ 7 pt \203\211\203E\203\223\203h/ Adobe Calligraphic Brush ) -
(Tool/ 15 pt\203\211\203E\203\223\203h/ Adobe ArtOnPath Brush Tool/ \226\330\222Y\211\346/ Adobe) -
( ArtOnPath Brush Tool/ \220\374 \(\220\346\215\327\)/ Adobe ArtOnPath Brush Tool/ ) -
(\203t\203\215\201[\203\211\203\213\203X\203|\201[\203N/ Adobe PatternOnPath Brush Tool/ \220\324\202\242\226\356\210\363\203u) -
(\203\211\203V / Adobe PatternOnPath Brush Tool/ \203S\203V\203b\203N/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt\603\611\603E\603\623\603h)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt \621\710\611~)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt \603\611\603E\603\623\603h)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \603t\603\611\603b\603g)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \621\710\611~)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt \603\611\603E\603\623\603h)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\603t\603\615\601[\603\611\603\613\603X\603|\601[\603N)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\626\730\622Y\611\746)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\620\774 \(\620\746\615\727\))
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\603S\603V\603b\603N)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\620\724\602\642\626\756\610\763\603u\603\611\603V )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623]) 0 Xs
([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
Pc
0 0 0 0 k
(\603z\603\617\603C\603g)
Pc
0 0 0 1 k
(\603u\603\611\603b\603N)
Pc
0 1 1 0 k
(CMYK \603\614\603b\603h)
Pc
0 0 1 0 k
(CMYK \603C\603G\603\615\601[)
Pc
1 0 1 0 k
(CMYK \603O\603\612\601[\603\623)
Pc
1 0 0 0 k
(CMYK \603V\603A\603\623)
Pc
1 1 0 0 k
(CMYK \603u\603\613\601[)
Pc
0 1 0 0 k
(CMYK \603}\603[\603\623\603^)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
2 (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
Pc
Bb
0 0 0 0 Bh
2 (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
0 0 0 0 Bh
2 (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
Pc
Bb
2 (\615\673\624\631\602\714\623\772\625\751\602\752) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\615\673\624\631\602\714\623\772\625\751\602\752)
Pc
Bb
0 0 0 0 Bh
2 (\623\672 \(\625\772\616\713\617\763\)) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\623\672 \(\625\772\616\713\617\763\))
Pc
(\613\633\614`\603p\603^\601[\603\623) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\613\633\614`\603p\603^\601[\603\623)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 113 250 0 50 Lb
(\203f\203U\203C\203\223) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 1 6 79 255 255 0 50 Lb
(76mm\227p\203K\203C\203h) Ln
1 A
u
0 A
1 Ap
0 D
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
233.8564 126.1406 m
233.8564 66.6504 185.6309 18.4238 126.1406 18.4238 c
66.6504 18.4238 18.4238 66.6504 18.4238 126.1406 c
18.4238 185.6299 66.6504 233.8564 126.1406 233.8564 c
185.6309 233.8564 233.8564 185.6299 233.8564 126.1406 c
(s) *
U
1 A
u
0 A
249.8721 126.1401 m
249.8721 57.8057 194.4756 2.40723 126.1396 2.40723 c
57.8047 2.40723 2.4082 57.8057 2.4082 126.1401 c
2.4082 194.4761 57.8047 249.8726 126.1396 249.8726 c
194.4756 249.8726 249.8721 194.4761 249.8721 126.1401 c
(s) *
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
0 1 0 1 0 0 0 7 128 128 128 0 50 Lb
(\215\355\217\234\213\326\216~\203\214\203C\203\204\201[) Ln
1 A
u
0 A
0 Ap
0 R
0 0 0 1 K
0 J 0 j 3.40158 w 4 M []0 d0 XR
8.11865 126.2134 m
3.0166 126.2134 L
S
0 G
126.1528 8.04199 m
126.1528 2.93848 L
S
0 O
0 g
5.66929 w126.0757 249.3052 m
126.0757 244.2031 L
B
u
1 Ap
0 0 0 1 K
3.95944 w249.873 126.1411 m
249.873 57.8057 194.4746 2.40723 126.1401 2.40723 c
57.8052 2.40723 2.40771 57.8057 2.40771 126.1411 c
2.40771 194.4761 57.8052 249.8726 126.1401 249.8726 c
194.4746 249.8726 249.873 194.4761 249.873 126.1411 c
s
U
u
0 0 0 0 K
1.13386 w249.873 126.1401 m
249.873 57.8037 194.4766 2.40723 126.1401 2.40723 c
57.8042 2.40723 2.40771 57.8037 2.40771 126.1401 c
2.40771 194.4751 57.8042 249.8726 126.1401 249.8726 c
194.4766 249.8726 249.873 194.4751 249.873 126.1401 c
s
U
0 Ap
1 G
1.13386 w126.1353 249.311 m
126.1353 245.0591 L
S
7.22803 126.1636 m
2.97607 126.1636 L
S
126.1362 7.24902 m
126.1362 2.96387 L
S
1 Ap
0 O
1 g
0 0 0 1 K
124.2271 246.623 m
124.2271 245.605 123.4019 244.7798 122.3833 244.7798 c
121.3677 244.7798 120.5425 245.605 120.5425 246.623 c
120.5425 247.6387 121.3677 248.4648 122.3833 248.4648 c
123.4019 248.4648 124.2271 247.6387 124.2271 246.623 c
b
131.7109 246.623 m
131.7109 245.605 130.8867 244.7798 129.8672 244.7798 c
128.8438 244.7798 128.0254 245.605 128.0254 246.623 c
128.0254 247.6387 128.8438 248.4648 129.8672 248.4648 c
130.8867 248.4648 131.7109 247.6387 131.7109 246.623 c
b
0 Ap
0 0 0 0 k
0 G
0.850394 w245.1563 128.061 m
248.4805 126.1431 L
245.1563 124.2236 L
245.1563 128.061 L
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
