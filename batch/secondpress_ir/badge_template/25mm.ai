%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (C-04) ()
%%Title: (25mm.ai)
%%CreationDate: 6/29/2011 10:46 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 48.5 47.8799 48.5 47.8799
%AI3_TileBox: -239.8101 -358.4297 336.1895 460.6899
%AI3_DocumentPreview: None
%AI5_ArtSize: 96.3799 96.3799
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -55.6665 123.3799 6 1265 894 18 0 0 126 155 0 0
%AI5_OpenViewLayers: 237
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\203g\203\214\201[\203X) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\615\673\624\631\602\714\623\772\625\751\602\752)
(\615\673\624\631\602\714\623\772\625\751\602\752) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\623\672 \(\625\772\616\713\617\763\))
(\623\672 \(\625\772\616\713\617\763\)) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\613\633\614`\603p\603^\601[\603\623)
(\613\633\614`\603p\603^\601[\603\623) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4270.5 4366.8149 m
-4056.8999 4366.8149 L
-4056.8999 4359.0142 L
-4270.5 4359.0142 L
-4270.5 4366.8149 L
n
0 O
0 0 0 1 k
-4270.5 4362.915 m
-4260.4854 4365.4067 -4253.6865 4366.7549 -4241.7007 4366.8149 c
-4228.7188 4366.8799 -4163.6997 4366.8149 y
-4098.6816 4366.8799 -4085.6997 4366.8149 v
-4073.7124 4366.7549 -4066.9136 4365.4067 -4056.8999 4362.915 C
-4066.9136 4360.4233 -4073.7124 4359.0752 -4085.6997 4359.0142 c
-4098.6816 4358.9487 -4163.6997 4359.0142 y
-4228.7188 4358.9487 -4241.7007 4359.0142 v
-4253.6865 4359.0752 -4260.4854 4360.4233 -4270.5 4362.915 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8143 8239.3799 m
-8045.2451 8239.3799 L
-8045.2451 8218.6641 L
-8143 8218.6641 L
-8143 8239.3799 L
n
0 O
0 g
1 XR
-8045.5586 8234.6982 m
-8060.8247 8220.9102 -8078.5537 8241.8291 -8093.9277 8229.5459 C
-8092.4199 8223.8936 -8086.7598 8230.8477 -8084.5176 8226.2012 C
-8084.4341 8224.6006 -8087.6313 8226.1006 -8087.5127 8223.9805 C
-8085.6245 8220.5713 -8080.8955 8221.0684 -8079.5664 8225.1172 C
-8073.3115 8223.1475 -8066.7734 8217.2041 -8060.7847 8218.9971 C
-8059.2671 8220.3477 -8060.0708 8221.5313 -8059.6211 8222.8076 C
-8052.2871 8218.3721 -8043.4644 8227.5078 -8045.5586 8234.6982 C
f
-8089.2842 8236.3125 m
-8089.8247 8236.6885 -8088.9277 8237.7998 -8089.2529 8238.2881 C
-8091.3237 8237.5361 -8093.6919 8233.458 -8095.4731 8230.6904 C
-8095.2632 8232.2197 -8096.6641 8233.5439 -8098.0781 8231.3125 C
-8098.2383 8230.4951 -8097.3667 8230.208 -8097.6729 8229.3164 C
-8098.8306 8227.748 -8099.8472 8229.2334 -8100.7798 8229.0049 C
-8101.3184 8228.2412 -8101.6143 8227.5986 -8101.6816 8227.0742 C
-8095.5537 8224.2539 -8088.9263 8236.0566 -8082.7456 8236.4824 C
-8082.9048 8239.4951 -8086.8555 8241.1807 -8089.2842 8236.3125 C
f
u
u
0 XR
-8086.1602 8231.04 m
-8101.0142 8224.5 -8122.4731 8228.7217 -8138.3687 8228.6992 c
-8144.2988 8228.6924 -8133.8965 8228.7012 -8139.8267 8228.7061 c
N
0 O
0 g
-8083.8052 8229.8193 m
-8101.1475 8222.6436 -8120.9341 8227.4355 -8139.0532 8227.3662 C
-8139.8608 8228.2529 -8140.6685 8229.1416 -8141.4751 8230.0273 C
-8140.6973 8230.0273 -8139.9194 8230.0264 -8139.1421 8230.0332 C
-8138.3345 8229.1455 -8137.5273 8228.2588 -8136.7202 8227.3721 C
-8137.3516 8227.3818 -8137.9844 8227.375 -8138.6157 8227.375 c
-8140.3735 8227.3779 -8144.9165 8230.042 -8141.0376 8230.0371 c
-8140.4063 8230.0371 -8139.7734 8230.0439 -8139.1421 8230.0332 c
-8137.4155 8230.0059 -8132.8184 8227.4033 -8136.7202 8227.3721 c
-8137.4976 8227.3633 -8138.2759 8227.3662 -8139.0532 8227.3662 c
-8140.8081 8227.3652 -8145.3574 8230.0127 -8141.4751 8230.0273 c
-8124.1177 8230.0947 -8105.1025 8225.3936 -8088.5151 8232.2588 c
-8087.1035 8232.8438 -8081.8081 8230.6465 -8083.8052 8229.8193 c
-8083.8052 8229.8193 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8143 8239.3799 m
-8131.0078 8239.3799 L
-8131.0078 8228.7432 L
-8143 8228.7432 L
-8143 8239.3799 L
n
-8142.3218 8228.7432 m
-8142.3218 8232.6924 L
-8142.3218 8233.7275 L
-8142.3218 8234.3662 L
-8142.3218 8235.4648 L
-8142.3218 8239.3799 L
-8131.6865 8239.3799 L
-8131.6865 8235.4648 L
-8131.6865 8234.3662 L
-8131.6865 8233.7275 L
-8131.6865 8232.6924 L
-8131.6865 8228.7432 L
-8142.3218 8228.7432 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8131.0078 8235.4648 m
-8131.0078 8234.8193 L
-8143 8234.8213 L
-8143 8235.4648 L
-8143 8235.5303 L
-8131.0078 8235.5293 L
-8131.0078 8235.4648 L
f
-8131.0078 8232.6924 m
-8143 8232.6924 L
-8143 8233.4014 L
-8131.0078 8233.4014 L
-8131.0078 8232.6924 L
f
0.15 1 0.9 0.1 k
-8131.0078 8234.4316 m
-8143 8234.4316 L
-8143 8234.8213 L
-8131.0078 8234.8193 L
-8131.0078 8234.4316 L
f
-8131.0078 8233.7275 m
-8131.0078 8233.4014 L
-8143 8233.4014 L
-8143 8233.7275 L
-8143 8233.792 L
-8131.0078 8233.792 L
-8131.0078 8233.7275 L
f
0 1 1 0 k
-8131.0078 8234.3662 m
-8131.0078 8233.792 L
-8143 8233.792 L
-8143 8234.3662 L
-8143 8234.4316 L
-8131.0078 8234.4316 L
-8131.0078 8234.3662 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8143 8238.1846 m
-8132.3638 8238.1846 L
-8132.3638 8227.5479 L
-8143 8227.5479 L
-8143 8238.1846 L
n
-8143 8227.5479 m
-8143 8231.4385 L
-8143 8232.1484 L
-8143 8232.5313 L
-8143 8233.1729 L
-8143 8233.5615 L
-8143 8234.2705 L
-8143 8238.1846 L
-8132.3638 8238.1846 L
-8132.3638 8227.5479 L
-8143 8227.5479 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8136.9585 8239.3799 m
-8136.2515 8239.3799 L
-8136.2607 8234.3359 L
-8130.5229 8234.335 L
-8130.5229 8233.624 L
-8136.9707 8233.627 L
-8136.9585 8239.3799 L
f
-8138.6055 8231.9141 m
-8138.8696 8232.1768 -8139.0215 8232.543 -8139.0215 8232.916 C
-8139.0073 8239.3799 L
-8138.2979 8239.3799 L
-8138.3125 8232.916 L
-8138.3125 8232.7295 -8138.2363 8232.5479 -8138.1045 8232.415 c
-8137.9717 8232.2832 -8137.7891 8232.208 -8137.6021 8232.208 C
-8130.5229 8232.208 L
-8130.5229 8231.498 L
-8137.6021 8231.498 L
-8137.9761 8231.498 -8138.3418 8231.6494 -8138.6055 8231.9141 c
f
0.15 1 0.9 0.1 k
-8137.2827 8239.3799 m
-8136.9585 8239.3799 L
-8136.9707 8233.627 L
-8130.5229 8233.624 L
-8130.5229 8233.2354 L
-8137.2827 8233.2354 L
-8137.2827 8239.3799 L
f
-8138.1045 8232.415 m
-8138.2363 8232.5479 -8138.3125 8232.7295 -8138.3125 8232.916 C
-8138.2979 8239.3799 L
-8137.9219 8239.3799 L
-8137.9219 8232.916 L
-8137.9219 8232.832 -8137.8877 8232.751 -8137.8281 8232.6904 c
-8137.7695 8232.6318 -8137.6865 8232.5986 -8137.6025 8232.5986 C
-8130.5229 8232.5986 L
-8130.5229 8232.208 L
-8137.6021 8232.208 L
-8137.7891 8232.208 -8137.9717 8232.2832 -8138.1045 8232.415 c
f
0 1 1 0 k
-8137.8281 8232.6904 m
-8137.8877 8232.751 -8137.9219 8232.832 -8137.9219 8232.916 C
-8137.9219 8239.3799 L
-8137.2827 8239.3799 L
-8137.2827 8233.2354 L
-8130.5229 8233.2354 L
-8130.5229 8232.5986 L
-8137.6025 8232.5986 L
-8137.6865 8232.5986 -8137.7695 8232.6318 -8137.8281 8232.6904 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8143 8239.3799 m
-8131.0078 8239.3799 L
-8131.0078 8228.7432 L
-8143 8228.7432 L
-8143 8239.3799 L
n
-8142.0117 8228.7432 m
-8142.0117 8232.6924 L
-8142.0117 8233.7275 L
-8142.0117 8234.3662 L
-8142.0117 8235.4648 L
-8142.0117 8239.3799 L
-8131.3765 8239.3799 L
-8131.3765 8235.4648 L
-8131.3765 8234.3662 L
-8131.3765 8233.7275 L
-8131.3765 8232.6924 L
-8131.3765 8228.7432 L
-8142.0117 8228.7432 L
n
0 O
0.15 1 0.9 0.1 k
-8131.0078 8234.4316 m
-8143 8234.4316 L
-8143 8234.8213 L
-8131.0078 8234.8193 L
-8131.0078 8234.4316 L
f
-8131.0078 8233.7275 m
-8131.0078 8233.4014 L
-8143 8233.4014 L
-8143 8233.7275 L
-8143 8233.792 L
-8131.0078 8233.792 L
-8131.0078 8233.7275 L
f
0 1 1 0 k
-8131.0078 8234.3662 m
-8131.0078 8233.792 L
-8143 8233.792 L
-8143 8234.3662 L
-8143 8234.4316 L
-8131.0078 8234.4316 L
-8131.0078 8234.3662 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-8141.2715 8235.5303 m
-8143 8235.5303 L
-8143 8232.6924 L
-8141.2715 8232.6924 L
-8141.2715 8235.5303 L
f
0.15 1 0.9 0.1 k
-8140.5967 8235.5137 m
-8141.4492 8235.5137 L
-8141.4492 8232.6768 L
-8140.5967 8232.6768 L
-8140.5967 8235.5137 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-8131.0078 8235.4648 m
-8131.0078 8234.8193 L
-8143 8234.8213 L
-8143 8235.4648 L
-8143 8235.5303 L
-8131.0078 8235.5293 L
-8131.0078 8235.4648 L
f
-8131.0078 8232.6924 m
-8143 8232.6924 L
-8143 8233.4014 L
-8131.0078 8233.4014 L
-8131.0078 8232.6924 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8143 8239.3799 m
-8131.6099 8239.3799 L
-8131.6099 8228.7432 L
-8143 8228.7432 L
-8143 8239.3799 L
n
-8142.2461 8235.4648 m
-8142.2461 8239.3799 L
-8131.6099 8239.3799 L
-8131.6099 8228.7432 L
-8142.2461 8228.7432 L
-8142.2461 8232.6348 L
-8142.2461 8235.4648 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8136.6245 8235.4014 m
-8136.6245 8234.7568 L
-8143 8234.7568 L
-8143 8235.4014 L
-8143 8235.4648 L
-8136.6245 8235.4648 L
-8136.6245 8235.4014 L
f
-8136.6245 8232.6279 m
-8143 8232.6279 L
-8143 8233.3379 L
-8136.6245 8233.3379 L
-8136.6245 8232.6279 L
f
0.15 1 0.9 0.1 k
-8136.6245 8234.3662 m
-8143 8234.3662 L
-8143 8234.7568 L
-8136.6245 8234.7568 L
-8136.6245 8234.3662 L
f
-8136.6245 8233.6631 m
-8136.6245 8233.3379 L
-8143 8233.3379 L
-8143 8233.6631 L
-8143 8233.7285 L
-8136.6245 8233.7285 L
-8136.6245 8233.6631 L
f
0 1 1 0 k
-8136.6245 8234.3008 m
-8136.6245 8233.7285 L
-8143 8233.7285 L
-8143 8234.3008 L
-8143 8234.3662 L
-8136.6245 8234.3662 L
-8136.6245 8234.3008 L
f
U
-8142.2461 8239.3799 m
-8131.6099 8239.3799 L
-8131.6099 8228.7432 L
-8142.2461 8228.7432 L
-8142.2461 8239.3799 L
n
-8131.7241 8234.0615 m
-8139.8125 8238.7314 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-8139.4814 8233.3398 m
-8139.4814 8230.5205 L
-8133.3535 8234.0576 L
-8139.4814 8237.5957 L
-8139.4814 8234.7568 L
-8139.8125 8234.7568 L
-8139.8125 8235.4648 L
-8139.8125 8238.7314 L
-8131.7241 8234.0615 L
-8139.8125 8229.3926 L
-8139.8125 8232.6309 L
-8139.8125 8233.3398 L
-8139.4814 8233.3398 L
f
0.15 1 0.9 0.1 k
-8139.4814 8237.5957 m
-8133.3535 8234.0576 L
-8139.4814 8230.5205 L
-8139.4814 8233.3398 L
-8139.4814 8233.7275 L
-8139.3472 8233.7275 L
-8139.2148 8233.3555 -8138.8633 8233.0869 -8138.4453 8233.0869 c
-8137.9155 8233.0869 -8137.4849 8233.5166 -8137.4849 8234.0469 c
-8137.4849 8234.5771 -8137.9155 8235.0068 -8138.4453 8235.0068 c
-8138.8633 8235.0068 -8139.2148 8234.7393 -8139.3472 8234.3662 C
-8139.4814 8234.3662 L
-8139.4814 8234.7568 L
-8139.4814 8237.5957 L
f
0 1 1 0 k
-8138.4453 8235.0068 m
-8137.9155 8235.0068 -8137.4849 8234.5771 -8137.4849 8234.0469 c
-8137.4849 8233.5166 -8137.9155 8233.0869 -8138.4453 8233.0869 c
-8138.8633 8233.0869 -8139.2148 8233.3555 -8139.3472 8233.7275 c
-8139.3828 8233.8271 -8139.4058 8233.9336 -8139.4058 8234.0469 c
-8139.4058 8234.1592 -8139.3828 8234.2646 -8139.3472 8234.3662 c
-8139.2148 8234.7393 -8138.8633 8235.0068 -8138.4453 8235.0068 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8142.8833 8239.335 m
-8051.0479 8239.335 L
-8051.0479 8235.0557 L
-8142.8833 8235.0557 L
-8142.8833 8239.335 L
n
0 O
0 0 0 1 k
-8142.6631 8236.6553 m
-8143 8236.7217 -8142.4814 8236.9111 -8142.8833 8236.7686 C
-8142.8379 8236.6504 -8142.7725 8236.5615 -8142.6631 8236.6553 C
f
-8052.1675 8236.8213 m
-8053.2524 8237.584 -8054.6816 8236.8135 -8055.8701 8237.2998 C
-8056.0098 8237.332 -8055.8345 8236.8818 -8056.1484 8236.9824 C
-8057.3008 8237.5752 -8059.1162 8237.2217 -8060.5195 8236.7646 C
-8060.4346 8236.6465 L
-8060.7017 8236.5615 -8061.0283 8236.9521 -8061.3115 8236.8975 C
-8061.3135 8236.8193 -8061.2207 8236.7861 -8061.2861 8236.6787 C
-8061.3574 8236.915 -8061.7983 8236.7881 -8061.9185 8236.9639 C
-8062.0303 8236.8721 -8062.0195 8236.6846 -8062.1641 8236.5811 C
-8062.3262 8236.8496 L
-8062.7769 8237.4893 -8063.4209 8236.8057 -8064.0361 8237.1357 C
-8064.0063 8237.0732 -8063.9453 8237.0244 -8063.9941 8236.9639 C
-8064.9814 8237.3525 -8066.2168 8237.2803 -8067.3208 8237.4229 C
-8067.2769 8237.3281 -8067.2363 8237.1553 -8067.3008 8237.0479 C
-8067.3555 8237.3311 -8067.6963 8237.4023 -8067.9922 8237.458 C
-8068.1255 8237.167 -8068.4995 8237.7236 -8068.8467 8237.5635 C
-8068.8169 8237.499 L
-8069.0732 8237.8037 -8069.1973 8237.3232 -8069.4053 8237.6885 C
-8069.5684 8237.46 L
-8069.6807 8237.8701 -8069.9395 8237.2471 -8070.1514 8237.4561 C
-8070.1445 8237.54 L
-8070.3442 8237.6396 -8070.4482 8237.4336 -8070.6338 8237.5029 C
-8070.6514 8237.4561 L
-8071.0854 8237.5635 -8071.3379 8237.335 -8071.3271 8237.6553 C
-8071.4795 8237.3984 -8070.9063 8237.5381 -8071.1455 8237.165 C
-8072.5732 8237.4951 -8074.0459 8237.4307 -8075.4834 8237.4365 C
-8075.6465 8237.3076 -8075.7505 8237.2686 -8075.7871 8237.1475 C
-8075.9307 8237.2119 -8076.3281 8237.2061 -8076.4585 8237.3701 C
-8076.4102 8237.3633 -8076.5513 8237.2061 -8076.6274 8237.1904 C
-8076.8887 8237.0693 -8076.9131 8237.542 -8077.2002 8237.3984 C
-8077.0859 8237.3135 -8077.0469 8237.21 -8077.0854 8237.0908 C
-8077.3301 8237.3408 -8077.6577 8237.3008 -8077.9473 8237.3818 C
-8077.9023 8237.3281 -8077.8325 8237.2959 -8077.8433 8237.1953 C
-8078.1602 8237.4785 -8078.4209 8237.1357 -8078.6982 8237.3145 C
-8078.5947 8237.1299 L
-8079.0415 8236.9053 -8078.7266 8237.5166 -8079.1128 8237.3838 C
-8079.02 8237.3252 -8079.0527 8237.2529 -8079.0361 8237.1777 C
-8079.3965 8237.5137 -8079.9795 8237.4023 -8080.3389 8237.5166 C
-8080.3174 8237.4912 -8080.3232 8237.4404 Y
-8080.7148 8237.4824 -8081.1245 8237.3779 -8081.5552 8237.5244 C
-8081.7119 8237.4424 -8081.5039 8237.0732 -8081.9185 8237.1416 C
-8081.9033 8237.5127 -8082.6221 8237.2939 -8082.3779 8237.7139 C
-8082.7319 8237.6533 -8083.2925 8237.5137 -8083.5283 8237.6396 C
-8083.3691 8237.499 -8083.7007 8237.1865 -8083.4063 8237.1553 C
-8083.6289 8236.9297 L
-8083.5957 8236.7783 -8083.3999 8236.9814 -8083.4707 8236.79 C
-8083.6182 8236.8057 -8084.0479 8236.9521 -8084.1797 8236.8916 C
-8084.4531 8237.1191 -8084.7041 8237.5439 -8085.1465 8237.5908 C
-8084.9385 8237.4463 -8085.2646 8237.1816 -8085.1235 8237.1182 C
-8085.7407 8237.8291 L
-8085.8877 8237.8467 -8085.7725 8237.5361 -8085.9854 8237.6328 C
-8085.9746 8237.7314 -8086.0674 8237.792 -8086.1318 8237.8721 C
-8086.1875 8237.8291 -8086.7441 8237.9639 -8086.8081 8237.5986 C
-8086.8735 8237.4561 -8086.5684 8237.5225 -8086.7314 8237.3916 C
-8087.0029 8237.3955 -8087.0151 8237.5205 -8087.2871 8237.5264 C
-8087.2925 8237.4775 L
-8087.4717 8237.4229 -8087.8213 8237.6328 -8087.6265 8237.835 C
-8087.5015 8237.8467 -8087.6738 8237.6152 -8087.4888 8237.7217 C
-8087.6152 8237.9336 -8087.9312 8237.9932 -8088.2031 8237.9971 C
-8088.1104 8237.9385 -8088.1216 8237.8408 -8088.0845 8237.7373 C
-8088.4497 8238.0244 -8088.8369 8238.1152 -8089.2451 8238.2354 C
-8089.2515 8238.4092 -8089.0928 8237.9189 -8089.0327 8238.0107 C
-8089.5557 8237.7695 -8090.1128 8238.3525 -8090.5479 8238 C
-8090.4766 8237.9697 -8090.5098 8238.2471 -8090.5146 8238.1982 C
-8090.7666 8238.1768 -8090.7549 8237.9248 -8090.9189 8238.0176 C
-8090.9355 8237.8701 -8091.1255 8238.0654 -8091.2944 8238.1104 C
-8091.3818 8238.2168 -8091.3384 8238.0381 -8091.1914 8238.0225 C
-8091.4268 8238.1475 -8092.3691 8238.374 -8092.9131 8238.1592 C
-8092.9023 8238.2568 -8093.2471 8238.5176 -8093.3721 8238.5068 C
-8093.3232 8238.2783 L
-8093.4375 8238.1416 -8093.7422 8238.2979 -8093.7632 8238.1025 C
-8094.0303 8238.3799 -8092.7344 8237.8662 -8093.0957 8238.0801 C
-8093.1895 8237.8896 -8093.5991 8238.4443 -8093.5215 8238.1328 C
-8093.7725 8238.1416 -8094.0161 8238.3984 -8094.2559 8238.1846 C
-8094.1865 8238.2217 -8094.0522 8237.8672 -8094.2549 8237.8838 C
-8094.6123 8237.9248 -8094.3564 8237.9932 -8094.6465 8238.0693 C
-8094.8281 8238.1631 L
-8094.8398 8238.3857 -8095.1475 8238.1328 -8095.0146 8238.3818 C
-8095.0586 8238.1982 -8095.5337 8238.4951 -8095.4971 8238.126 C
-8095.4473 8237.835 L
-8095.6016 8237.8564 -8095.7002 8238.1416 -8095.8213 8238.2695 C
-8095.8418 8238.2432 -8095.8823 8238.1846 -8095.8745 8238.1377 C
-8095.8994 8238.583 -8096.2432 8238.1006 -8096.4268 8238.4443 C
-8096.7505 8238.29 -8097.2495 8238.4307 -8097.4023 8238.1533 C
-8097.6514 8238.2881 -8097.8784 8238.4482 -8098.1621 8238.3525 C
-8098.1055 8238.3105 -8098.0283 8238.2979 -8098.0122 8238.2021 C
-8098.1904 8238.0713 -8098.2344 8238.1885 -8098.3975 8238.2607 C
-8098.3608 8238.1943 -8098.7539 8238 -8098.9521 8237.8428 C
-8099.1992 8237.9756 -8099.1143 8238.2158 -8099.1392 8238.3623 C
-8099.3652 8237.9229 -8099.8379 8238.6455 -8100.1211 8238.2471 C
-8100.0352 8238.1865 -8099.7598 8238.0313 -8099.9658 8237.9209 C
-8100.1919 8237.4824 -8100.4219 8238.2451 -8100.7861 8238.0342 C
-8100.6968 8238.3984 L
-8100.8594 8238.1729 -8101.2334 8238.6104 -8101.1963 8238.2393 C
-8101.3184 8238.3701 -8101.6265 8238.1182 -8101.5859 8238.4736 C
-8102.1846 8238.1729 -8103.0425 8238.6553 -8103.4102 8238.0176 C
-8103.4961 8238.0771 -8103.7104 8238.0166 -8103.6665 8238.1992 C
-8103.5239 8238.3975 -8103.4673 8238.0576 -8103.4141 8238.1924 C
-8103.4912 8238.2031 -8103.5078 8238.3008 -8103.5161 8238.3496 C
-8103.7021 8238.2686 -8103.8486 8238.2432 -8103.6729 8237.9473 C
-8104.0869 8237.7275 -8104.1001 8238.5518 -8104.6274 8238.4131 C
-8104.6035 8238.2656 -8104.6436 8238.21 -8104.7979 8238.2334 C
-8105.0903 8238.4854 L
-8105.4312 8238.4268 -8105.2842 8238.1504 -8105.2925 8237.9014 C
-8105.4746 8237.9443 -8105.6973 8237.9326 -8105.7803 8238.1182 C
-8106.0015 8237.8057 L
-8105.8398 8238.0313 -8106.1514 8237.9561 -8106.2368 8238.0166 C
-8106.1514 8237.9561 L
-8106.1846 8237.8496 -8106.3955 8237.915 -8106.5024 8237.9463 C
-8106.4766 8238.1006 -8106.2617 8238.1631 -8106.1445 8238.208 C
-8106.2373 8238.3174 -8106.3823 8238.292 -8106.5059 8238.4209 C
-8106.4648 8238.1768 -8106.8027 8238.2471 -8106.9473 8238.2217 C
-8107.1133 8238.1689 -8107.1348 8238.4404 -8107.1831 8238.4326 C
-8107.1875 8238.3057 -8107.4541 8238.4111 -8107.3247 8238.2334 C
-8107.2681 8238.1924 -8107.1953 8238.3564 -8107.1016 8238.2451 C
-8107.2109 8238.1504 -8107.1982 8237.9297 -8107.4258 8238.0908 C
-8107.5967 8238.2119 -8107.3818 8238.5732 -8107.7061 8238.4189 C
-8107.6211 8238.3584 -8107.6055 8238.2607 -8107.5391 8238.1729 C
-8107.8433 8238.0459 L
-8107.8564 8238.2686 L
-8107.8975 8238.2119 -8107.8691 8238.1924 -8107.8877 8238.1631 C
-8107.9785 8238.3975 -8108.3521 8238.2354 -8108.4209 8238.499 C
-8108.5742 8238.5225 -8108.7441 8238.3447 -8108.8906 8238.3193 C
-8108.8623 8238.2998 L
-8109.0415 8238.1689 -8109.2793 8238.2549 -8109.4297 8238.4053 C
-8109.4219 8238.3564 L
-8109.5195 8238.3389 -8109.7505 8238.374 -8109.8735 8238.5049 C
-8110.1201 8238.3369 -8109.9561 8237.6641 -8110.2295 8237.9443 C
-8110.48 8237.9521 -8110.6221 8238.3525 -8110.5215 8238.4951 C
-8110.9717 8238.3447 -8111.4834 8238.708 -8111.9009 8238.3623 C
-8111.9658 8238.4521 -8111.9248 8238.5088 -8112.0586 8238.5615 C
-8112.7197 8238.4736 -8113.4551 8238.8252 -8113.9814 8238.3877 C
-8113.79 8238.2939 -8113.9688 8238.165 -8113.9727 8238.0381 C
-8114.1309 8238.2373 -8114.1631 8237.8311 -8114.2197 8238.1729 C
-8114.2041 8238.374 -8114.2197 8238.4717 -8114.0337 8238.5527 C
-8114.4282 8238.6611 -8115.0283 8238.6611 -8115.2471 8238.4736 C
-8115.1377 8238.5664 -8115.2227 8238.6279 -8115.3086 8238.6885 C
-8115.2803 8238.3672 -8115.5713 8238.3193 -8115.7915 8238.4326 C
-8115.8223 8238.6279 L
-8115.9658 8238.4268 L
-8116.0503 8238.4893 -8116.0591 8238.8369 -8116.2773 8238.6494 C
-8116.2891 8238.5732 -8116.3018 8238.4961 -8116.3418 8238.4404 C
-8116.5693 8238.6006 -8116.8906 8238.8721 -8117.1377 8238.7061 C
-8117.3398 8238.4209 L
-8117.4453 8238.4521 -8117.6235 8238.624 -8117.4375 8238.7061 C
-8117.8594 8238.5342 -8118.1309 8238.5127 -8118.2646 8238.2656 C
-8118.9912 8238.8672 -8120.0459 8238.8916 -8120.8906 8238.8486 C
-8120.8652 8238.7021 L
-8121.0923 8238.5654 -8120.9834 8238.958 -8121.1416 8238.8564 C
-8121.0684 8238.7168 -8121.3145 8238.5527 -8121.1362 8238.3818 C
-8121.4609 8238.2275 -8121.5547 8238.6357 -8121.7656 8238.7021 C
-8121.7979 8238.8945 -8121.5957 8238.5791 -8121.6367 8238.8232 C
-8121.6729 8238.8916 -8122.0859 8238.6729 -8122.1362 8238.9639 C
-8122.2178 8238.8496 -8122.1543 8238.6357 -8122.1104 8238.5176 C
-8122.3086 8238.6592 L
-8122.5513 8238.3193 -8121.7559 8238.0518 -8122.0107 8237.6328 C
-8122.1934 8237.6787 L
-8122.3682 8237.374 -8121.71 8237.335 -8122.1689 8237.2305 C
-8122.3682 8237.374 -8122.5381 8237.7959 -8122.3608 8237.9248 C
-8122.7754 8238.0049 -8122.5527 8238.6182 -8122.9985 8238.5938 C
-8123.1201 8238.4229 -8122.6416 8238.5527 -8122.7275 8238.3135 C
-8122.9375 8238.0791 -8123.1484 8238.4443 -8123.3354 8238.3623 C
-8123.1279 8238.4717 -8123.3032 8238.7656 -8123.4375 8238.8193 C
-8123.6641 8238.6816 -8123.29 8238.5439 -8123.6113 8238.5137 C
-8123.6641 8238.6816 -8123.9595 8238.8076 -8123.7041 8238.9248 C
-8123.8203 8239.3057 -8124.0381 8238.8193 -8124.2129 8239.1143 C
-8124.3174 8238.8467 -8123.8823 8238.4951 -8124.2354 8238.3613 C
-8124.1792 8238.6191 -8124.6704 8238.7119 -8124.4839 8239.0947 C
-8124.6221 8239.0205 -8124.6367 8238.8174 -8124.5361 8238.6592 C
-8124.7334 8238.5 -8125.0151 8239.1299 -8125.0801 8238.6182 C
-8125.1479 8238.8818 L
-8125.21 8238.7959 -8125.2983 8238.7314 -8125.3994 8238.5889 C
-8125.5732 8238.584 -8125.96 8238.9463 -8125.9443 8238.5479 C
-8126 8238.5889 -8126.3975 8238.5713 -8126.2441 8238.8467 C
-8125.9971 8239.0146 -8125.96 8238.6455 -8125.8223 8239.0176 C
-8125.9971 8238.7139 -8126.1787 8239.0576 -8126.3213 8239.1592 C
-8126.3447 8239.0049 L
-8126.4297 8239.0654 -8126.6255 8239.0313 -8126.6787 8239.1982 C
-8126.6133 8239.1104 -8126.6475 8239.0049 -8126.7148 8238.9678 C
-8126.8042 8239.2021 L
-8127.1494 8239.3193 -8126.8857 8238.79 -8127.2217 8238.8584 C
-8126.9663 8238.6768 L
-8127.0225 8238.7158 -8127.1367 8238.4961 -8127.2979 8238.5693 C
-8127.3604 8238.7832 -8127.4775 8239.04 -8127.5313 8239.2061 C
-8127.7207 8239.2998 -8127.6162 8238.9648 -8127.8027 8239.1846 C
-8127.5586 8238.9268 L
-8127.5215 8238.8564 -8127.7231 8238.5732 -8127.9761 8238.5791 C
-8128.1377 8238.6533 -8128.3887 8238.9619 -8128.1338 8239.0791 C
-8128.2607 8239.083 -8128.4385 8238.9521 -8128.3379 8238.7959 C
-8128.6255 8238.8701 -8128.2998 8239.0264 -8128.5479 8239.1592 C
-8128.6494 8239.0166 -8128.9658 8238.8135 -8129.1563 8238.6064 C
-8128.8975 8238.248 L
-8129.0693 8238.2451 L
-8128.8467 8237.958 -8129.1826 8238.0264 -8129.0566 8237.7236 C
-8129.1743 8237.6768 -8129.3169 8237.7793 -8129.4307 8237.8584 C
-8129.0864 8238.3428 -8129.8159 8238.5205 -8129.7158 8238.9619 C
-8130.1875 8239.083 -8130.0107 8237.8877 -8130.5024 8238.5791 C
-8130.4219 8238.6943 -8130.6533 8239.0303 -8130.3564 8238.9023 C
-8130.6494 8238.8545 -8130.5557 8239.3457 -8130.9014 8239.1631 C
-8130.6455 8238.9814 -8131.1763 8238.7158 -8130.8066 8238.4521 C
-8130.8311 8238.5986 -8130.6001 8238.5635 -8130.5435 8238.5225 C
-8130.6641 8238.3525 -8130.5186 8238.0771 -8130.8184 8238.0771 C
-8131.0015 8238.1191 -8131.2524 8238.1279 -8131.2158 8238.3584 C
-8131.2085 8238.6113 -8130.9365 8238.3311 -8131.0537 8238.5869 C
-8131.4185 8238.6748 -8131.4795 8238.29 -8131.6304 8238.7393 C
-8131.3999 8238.7031 -8131.3423 8238.9639 -8131.3467 8239.1377 C
-8131.6143 8239.2432 L
-8131.5625 8239.0752 L
-8131.9922 8238.9541 -8131.6895 8239.3799 -8132.1055 8239.335 C
-8132.3008 8239.0029 L
-8132.2017 8238.7168 -8131.6953 8239.1299 -8131.7695 8238.6641 C
-8132.04 8238.6455 -8132.1299 8238.8818 -8132.3848 8238.7617 C
-8132.3281 8238.7217 -8132.2505 8238.71 -8132.1943 8238.6689 C
-8132.2915 8238.6533 -8132.3877 8238.0361 -8132.7734 8238.3975 C
-8132.9727 8238.5381 -8132.8262 8238.5635 -8132.8311 8238.7373 C
-8133.2656 8238.79 -8133.3955 8238.9678 -8133.6753 8238.9951 C
-8133.6177 8238.6553 -8134.1699 8238.9619 -8133.8608 8238.6143 C
-8133.7188 8238.8135 -8133.0903 8238.7939 -8132.9365 8238.4697 C
-8133.0947 8238.0664 -8132.5952 8238.5264 -8132.5024 8238.1182 C
-8132.8506 8238.1084 -8132.8335 8237.7119 -8132.8896 8237.4521 C
-8132.9863 8237.4336 -8133.0801 8237.5439 -8133.1377 8237.584 C
-8133.1787 8237.8291 -8133.0522 8237.8252 -8133.0449 8238.0771 C
-8133.4336 8238.0107 -8133.8081 8238.1475 -8134.0225 8238.3857 C
-8134.1523 8238.2646 -8134.1113 8238.0205 -8133.9575 8237.9971 C
-8134.4199 8238.0693 -8134.9141 8238.0361 -8135.3535 8237.9619 C
-8135.0693 8238.3613 -8135.8433 8238.0557 -8135.6494 8238.3877 C
-8135.4141 8238.4775 -8135.2119 8238.7617 -8135.3418 8238.9404 C
-8135.4888 8238.915 -8135.3369 8238.7656 -8135.3984 8238.6807 C
-8135.5859 8238.8984 -8135.6895 8238.3311 -8135.8735 8238.6748 C
-8135.4512 8238.5459 -8135.7915 8238.1885 -8135.7139 8237.876 C
-8136.0186 8238.0518 -8135.7007 8237.6533 -8136.0024 8237.6533 C
-8136.3057 8237.8271 -8136.6787 8237.9639 -8137.0161 8238.0313 C
-8137.4399 8237.7354 -8138.0898 8238.0264 -8138.4683 8238.0381 C
-8138.6665 8237.8799 -8138.5322 8237.5264 -8138.7471 8237.4648 C
-8138.9995 8237.4717 -8138.5601 8237.8467 -8138.9336 8237.6846 C
-8138.8975 8237.6143 L
-8139.0107 8237.6963 -8139.5825 8237.374 -8139.6929 8237.8818 C
-8139.5776 8237.499 L
-8139.6475 8237.4639 -8139.7119 8237.5518 -8139.7695 8237.5928 C
-8139.7725 8237.4678 -8139.8535 8237.3545 -8139.7402 8237.2725 C
-8139.9707 8237.0088 -8140.2241 8237.3145 -8140.4746 8237.3252 C
-8140.3135 8237.5518 L
-8140.7422 8237.7295 -8141.0293 8237.5049 -8141.4443 8237.584 C
-8141.4316 8237.3623 L
-8141.6787 8237.4951 L
-8141.6182 8237.2803 -8141.8447 8237.1416 -8141.9751 8237.3213 C
-8141.3335 8236.7783 L
-8141.1553 8236.9092 -8141.5283 8237.0459 -8141.4165 8237.2646 C
-8141.3213 8237.4561 -8140.9375 8237.3955 -8140.8755 8237.1816 C
-8141.0225 8237.1572 -8141.0293 8237.2061 -8141.1436 8237.2861 C
-8141.1919 8236.9775 -8140.9688 8236.9893 -8140.8584 8236.7832 C
-8140.9355 8236.7959 -8141.0449 8236.7021 -8141.0615 8236.7998 C
-8140.9102 8236.6494 -8140.7578 8236.626 -8140.5059 8236.6182 C
-8140.6763 8236.7393 -8140.4131 8236.8096 -8140.4775 8236.8975 C
-8140.4575 8236.626 -8140.2168 8236.542 -8139.9053 8236.6182 C
-8139.6831 8236.9326 -8139.3208 8236.416 -8138.96 8236.5029 C
-8139.1064 8236.7783 -8139.2935 8236.999 -8139.5127 8237.1104 C
-8139.2861 8237.248 -8139.2607 8237.1025 -8139.0337 8237.2412 C
-8138.9238 8237.0361 -8138.8457 8236.7217 -8138.5503 8236.5967 C
-8138.5342 8236.7998 L
-8138.2666 8236.6963 -8138.2666 8236.3955 -8137.9258 8236.4521 C
-8137.3418 8236.5518 -8136.7407 8236.5518 -8136.2949 8236.5771 C
-8136.2783 8236.7793 L
-8136.0303 8236.3457 -8135.4521 8236.6191 -8135.1182 8236.4268 C
-8134.5503 8236.6221 -8133.8848 8236.2334 -8133.5938 8236.583 C
-8132.5913 8236.4268 -8131.7148 8236.2744 -8130.6768 8236.3486 C
-8130.8516 8236.6436 L
-8130.6655 8236.4268 -8130.7305 8236.8135 -8130.5479 8236.7695 C
-8130.7578 8236.5342 -8130.2949 8236.4639 -8130.1665 8236.2832 C
-8129.7041 8236.5127 -8129.1104 8236.2627 -8128.7007 8236.0557 C
-8128.6846 8236.2588 L
-8128.2705 8235.8779 -8127.7759 8236.2119 -8127.2598 8236.2744 C
-8127.2007 8236.3584 -8127.1074 8236.5488 -8126.9536 8236.5264 C
-8126.6738 8236.1982 -8126.5273 8236.2217 -8126.1167 8236.0166 C
-8125.8169 8236.0166 -8125.3301 8236.0977 -8125.0254 8236.2256 C
-8123.8975 8235.7646 -8122.7456 8236.0596 -8121.5732 8235.7822 C
-8121.4888 8236.0205 L
-8120.3521 8235.5107 -8118.9541 8235.9736 -8117.9839 8235.7119 C
-8118.0776 8236.1191 L
-8117.7734 8236.2451 -8117.3843 8236.0127 -8117.4619 8235.7236 C
-8117.1567 8235.8486 -8116.7007 8235.5264 -8116.5068 8235.8613 C
-8116.1953 8235.9365 -8116.1255 8235.6729 -8115.8662 8235.6182 C
-8115.2422 8235.7725 -8115.0107 8235.7373 -8114.4224 8235.6611 C
-8114.5684 8235.6357 L
-8114.6328 8235.7256 -8114.6387 8235.8984 -8114.4922 8235.9248 C
-8114.2725 8235.8115 -8113.6846 8236.0342 -8113.9033 8235.5479 C
-8113.2754 8235.8291 -8112.4385 8235.3193 -8111.8271 8235.6982 C
-8111.8789 8235.5654 -8111.7246 8235.54 -8111.6602 8235.4502 C
-8111.1089 8235.4443 -8110.5293 8235.7158 -8110.0898 8235.4893 C
-8110.0024 8235.5557 -8110.2295 8235.7158 -8110.0049 8235.7295 C
-8109.8721 8235.6787 -8110.0024 8235.5557 -8109.8384 8235.4814 C
-8108.9453 8235.2334 -8108.0303 8235.7373 -8107.2188 8235.6729 C
-8105.7754 8235.416 -8104.2695 8235.5459 -8102.8867 8235.5029 C
-8102.9023 8235.6006 L
-8102.4395 8235.2275 -8101.8159 8235.9824 -8101.4463 8235.4209 C
-8101.3369 8235.5137 -8101.0283 8235.4648 -8101.1094 8235.6533 C
-8100.7407 8235.3896 -8100.0771 8235.9014 -8099.5439 8235.5664 C
-8099.5928 8235.5576 -8099.6211 8235.5771 -8099.6777 8235.6191 C
-8099.1392 8235.835 -8098.6641 8235.54 -8098.0957 8235.7354 C
-8098.1533 8235.7773 -8098.2583 8235.8076 -8098.2754 8235.9053 C
-8098.0557 8236.0928 -8097.7549 8235.4932 -8097.6348 8235.9639 C
-8097.5088 8235.96 -8097.5449 8235.7275 -8097.6221 8235.7412 C
-8096.3779 8235.9248 -8095.0498 8235.624 -8093.7549 8235.5166 C
-8092.8271 8235.7979 -8093.6982 8236.3096 -8092.9663 8235.958 C
-8092.9063 8236.0488 -8092.9229 8235.7783 -8092.9131 8235.876 C
-8092.6299 8235.7441 -8092.4717 8236.4014 -8092.2754 8236.1553 C
-8092.3564 8235.8662 -8092.1445 8235.9932 -8092.1387 8235.8174 C
-8091.5713 8236.0049 -8091.4575 8236.2656 -8091.0098 8236.0459 C
-8091.0435 8236.1982 L
-8090.5186 8235.7686 -8089.9102 8235.999 -8089.4673 8235.5029 C
-8086.5728 8235.4131 -8083.7983 8235.1377 -8080.9761 8235.0801 C
-8078.1865 8235.1748 -8075.4551 8234.9521 -8072.6221 8235.2158 C
-8071.9585 8235.6152 -8071.9087 8235.6045 -8071.1797 8235.4424 C
-8071.2095 8235.5068 -8071.2549 8235.5225 -8071.2061 8235.583 C
-8071.1699 8235.2549 -8070.6929 8235.5518 -8070.6235 8235.2393 C
-8069.5762 8235.2998 -8068.6113 8235.21 -8067.5337 8235.208 C
-8067.7041 8235.2432 -8067.7896 8235.5107 -8067.5869 8235.4893 C
-8067.3755 8235.2803 L
-8067.3408 8235.3721 L
-8067.2021 8235.3232 -8067.0513 8235.1611 -8067.1943 8235.0557 C
-8064.4873 8234.7725 -8061.8242 8235.4307 -8059.1729 8235.3496 C
-8058.5435 8235.4863 -8057.6475 8235.3613 -8056.9629 8235.2939 C
-8054.9355 8235.7314 -8053.1079 8236.084 -8051.0479 8235.7783 C
-8051.3169 8236.626 -8052.1675 8236.8213 V
f
-8142.2578 8236.6221 m
-8142.1855 8236.7861 -8141.9497 8236.876 -8142.1377 8237.0947 C
-8142.1611 8236.9404 -8142.2822 8236.7686 -8142.2578 8236.6221 C
f
-8135.9619 8238.3096 m
-8135.9536 8238.2607 -8135.8721 8238.376 -8135.8521 8238.4023 C
-8135.9297 8238.415 -8136.0024 8238.5527 -8136.0645 8238.4678 C
-8135.9854 8238.4561 -8135.9976 8238.3779 -8135.9619 8238.3096 C
f
-8134.3521 8238.4072 m
-8134.3765 8238.5527 -8134.7207 8238.6689 -8134.9238 8238.6865 C
-8134.3521 8238.4072 L
f
-8132.8521 8239.0088 m
-8132.7227 8239.1318 -8132.7583 8239.1992 -8132.9326 8239.1953 C
-8132.9453 8239.1182 -8132.8877 8239.0791 -8132.8521 8239.0088 C
f
-8132.7456 8238.6768 m
-8132.6211 8238.6729 -8132.5591 8238.7588 -8132.4985 8238.8428 C
-8132.5029 8238.7168 -8132.7871 8238.9209 -8132.7456 8238.6768 C
f
-8129.4893 8239.1006 m
-8129.4111 8239.0889 -8129.2417 8238.9678 -8129.1689 8239.1299 C
-8129.2505 8239.0166 -8129.5498 8239.3145 -8129.4893 8239.1006 C
f
-8127.9761 8238.8799 m
-8127.9272 8238.8896 -8127.9072 8238.916 -8127.8506 8238.876 C
-8127.7607 8238.9424 -8127.8555 8239.0488 -8127.9312 8239.0625 C
-8127.9761 8238.8799 L
f
-8100.4287 8238.2939 m
-8100.5923 8238.3662 L
-8100.5684 8238.2217 L
-8100.4287 8238.2939 L
f
-8088.3574 8238.2861 m
-8088.1943 8238.1943 -8088.2441 8238.4229 -8088.2168 8238.4443 C
-8088.3643 8238.46 -8088.1621 8238.2646 -8088.3574 8238.2861 C
f
-8081.8486 8237.5576 m
-8081.8984 8237.5615 L
-8081.8818 8237.2627 L
-8081.8486 8237.5576 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8116.9727 8239.3799 m
-8116.9727 8213.3516 L
-8143 8213.3516 L
-8143 8239.3799 L
-8116.9727 8239.3799 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8143 8222.0264 m
-8116.9727 8222.0264 l
S
0.64 0.650477 0.701045 0.510735 K
-8143 8230.7041 m
-8116.9727 8230.7041 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8143 8226.3652 m
-8116.9727 8226.3652 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-8121.5742 8226.3916 m
-8121.3442 8226.1201 -8121.6914 8225.834 -8122 8225.623 c
-8122.1118 8225.5459 -8122.5215 8225.7588 -8122.7466 8225.5928 c
-8123.0439 8225.375 -8123.1826 8225.2881 -8123.4824 8225.2939 c
-8123.6455 8225.2979 -8124.0435 8225.4277 -8124.1895 8225.458 c
-8124.5679 8225.5342 -8124.8022 8225.7314 -8125.3672 8225.6348 c
-8125.7344 8225.5713 -8125.8286 8225.4805 -8125.9233 8225.5283 c
-8126.1118 8225.6699 -8126.2202 8225.8936 -8126.4258 8225.9424 c
-8126.9575 8226.0693 -8127.3535 8226.1133 -8127.8818 8226.1025 c
-8128.3047 8226.0928 -8129.4185 8226.1611 -8130.2866 8226.0615 c
-8130.6226 8226.0215 -8130.6025 8225.5967 -8130.7695 8225.5928 c
-8130.8618 8225.5908 -8130.7646 8225.9063 -8130.8306 8225.9268 c
-8131.1694 8226.0332 -8131.4702 8224.8828 -8131.6943 8224.9521 c
-8131.8047 8224.9873 -8131.5562 8225.5332 -8131.6729 8225.5615 c
-8131.8975 8225.6172 -8132.2178 8224.5986 -8132.4321 8224.6611 c
-8132.5635 8224.6982 -8132.2886 8225.1182 -8132.4375 8225.1865 c
-8132.6655 8225.291 -8132.9087 8224.415 -8133.1064 8224.5137 C
-8133.1543 8224.5615 -8132.7295 8225.3174 -8133.1685 8225.2588 c
-8133.2871 8225.2412 -8133.5054 8224.6934 -8133.5801 8224.7197 c
-8133.6919 8224.7598 -8133.3535 8225.1816 -8133.4897 8225.3076 C
-8133.7681 8225.5342 -8134.3711 8224.543 -8134.4575 8224.6143 c
-8134.5791 8224.7158 -8134.1279 8225.4775 -8134.2695 8225.5459 C
-8134.4497 8225.8096 -8135.0142 8224.9326 -8135.0889 8224.9814 c
-8135.1777 8225.04 -8134.9058 8225.418 -8134.8799 8225.6133 c
-8134.8545 8225.8076 -8134.9966 8225.9414 -8135.2144 8225.8896 c
-8135.4736 8225.8271 -8135.8696 8225.0215 -8135.9727 8225.1152 C
-8136.0791 8225.1709 -8135.8682 8225.458 -8135.7954 8225.6924 c
-8135.7583 8225.8076 -8135.8882 8225.9814 -8136.0298 8225.9814 c
-8136.3135 8226.0293 -8136.6255 8225.3779 -8136.7065 8225.4824 c
-8136.7524 8225.542 -8136.5898 8225.8701 -8136.7295 8225.9678 c
-8136.8994 8226.0859 -8137.3115 8225.6182 -8137.4521 8225.6729 C
-8137.5361 8225.7217 -8137.4126 8225.9766 -8137.4927 8226.0332 c
-8137.7295 8226.1992 -8138.0039 8225.8008 -8138.0513 8225.8486 C
-8138.1167 8225.8711 -8138.1201 8225.916 -8138.2793 8226.0205 c
-8138.4736 8226.1475 -8138.5254 8226.2285 -8138.5425 8226.3447 c
-8138.5654 8226.4629 -8138.3135 8226.7549 -8138.1655 8226.7295 c
-8137.8223 8226.6699 -8137.8662 8227.2295 -8137.6328 8227.0957 c
-8137.5679 8227.0596 -8137.6592 8226.6387 -8137.4199 8226.6455 c
-8137.0488 8226.6582 -8136.9858 8227.2012 -8136.7817 8227.1904 c
-8136.6406 8227.1836 -8136.8521 8226.5635 -8136.6328 8226.6406 c
-8136.4751 8226.6963 -8136.0063 8227.6816 -8135.9795 8227.5898 c
-8135.8975 8227.3223 -8136.0703 8226.7783 -8135.9409 8226.7881 c
-8135.7568 8226.8027 -8135.5078 8227.6973 -8135.2544 8227.8174 c
-8135.1826 8227.8525 -8135.3774 8226.9805 -8135.1958 8226.9766 C
-8135.0898 8227.0264 -8134.7578 8227.8291 -8134.6274 8227.8779 C
-8134.5591 8227.8623 -8134.5879 8227.5049 -8134.5176 8227.4844 c
-8134.4688 8227.4697 -8134.2817 8227.9453 -8134.21 8227.9033 c
-8134.1055 8227.8428 -8134.2471 8227.3721 -8134.0889 8227.3027 c
-8133.9175 8227.2285 -8133.4878 8228.2725 -8133.3486 8228.1777 c
-8133.2769 8228.1299 -8133.3574 8227.5898 -8133.21 8227.626 c
-8133.0718 8227.6582 -8132.9414 8227.9941 -8132.8081 8228.0225 c
-8132.7295 8228.0381 -8132.7935 8227.5713 -8132.7495 8227.5537 c
-8132.5889 8227.4951 -8132.2329 8228.0518 -8132.0688 8227.9033 c
-8131.8584 8227.7148 -8131.9395 8227.3496 -8131.8345 8227.3623 c
-8131.6274 8227.3857 -8131.4912 8227.623 -8131.4146 8227.5635 c
-8131.2642 8227.4482 -8131.3281 8227.1592 -8131.0527 8227.0723 c
-8130.8975 8227.0225 -8130.7935 8227.3145 -8130.7495 8227.3105 c
-8130.6738 8227.3076 -8130.6782 8227.21 -8130.6665 8227.1045 c
-8130.6328 8226.8408 -8130.6064 8226.7793 -8130.4878 8226.7568 c
-8130.0854 8226.7334 -8129.5625 8226.6641 -8129.1807 8226.6553 c
-8128.6274 8226.6406 -8127.2607 8226.6172 -8127.1182 8226.6172 c
-8127 8226.5928 -8126.7432 8226.7744 -8126.6689 8226.8408 c
-8126.4678 8227.0254 -8126.2998 8227.2393 -8125.9858 8227.5 c
-8125.8906 8227.5811 -8125.8081 8227.5605 -8125.7378 8227.5361 c
-8125.5249 8227.4648 -8125.4585 8227.4131 -8125.2202 8227.3818 c
-8124.9175 8227.3389 -8124.4272 8227.4287 -8124.1245 8227.5225 c
-8123.6035 8227.6816 -8123.5264 8227.7041 -8123.0977 8227.6553 c
-8122.6992 8227.6094 -8122.0586 8227.5381 -8122.0479 8227.1904 c
-8122.0415 8226.9756 -8121.9414 8226.8232 -8121.5742 8226.3916 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8116.9722 8239.3799 m
-8116.9722 8213.3525 L
-8143 8213.3525 L
-8143 8239.3799 L
-8116.9722 8239.3799 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8125.6455 8226.3691 m
-8116.9736 8226.3691 l
S
-8129.9839 8239.3799 m
-8129.9839 8230.7041 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8125.7202 8222.0303 m
-8116.9727 8222.0303 l
S
-8134.3232 8239.3789 m
-8134.3232 8230.0254 l
S
0.64 0.650477 0.701045 0.510735 K
-8125.6504 8239.3789 m
-8125.6504 8236.9668 l
-8122.9937 8236.7432 -8121.3096 8235.04 v
-8119.6064 8233.3135 -8119.3774 8230.708 y
-8116.9727 8230.708 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8133.8418 8223.5654 m
-8133.8418 8223.6299 -8133.8218 8223.6709 -8133.7783 8223.6709 c
-8133.6943 8223.6709 -8133.4634 8223.334 -8133.3994 8223.334 c
-8133.3154 8223.334 -8133.2729 8223.376 -8133.2729 8223.4814 c
-8133.2729 8223.5654 -8133.5264 8224.4727 y
-8133.5264 8224.5137 -8133.5264 8224.5137 -8133.5049 8224.5137 c
-8133.4414 8224.5137 -8133.0615 8223.9668 -8132.9351 8223.9668 c
-8132.9146 8223.9668 -8132.8936 8223.9873 -8132.8936 8224.0088 c
-8133.1675 8224.915 -8133.1675 8225.1055 v
-8133.1675 8225.1689 -8133.1675 8225.1904 -8133.1465 8225.1904 c
-8133.1055 8225.1904 -8132.6826 8224.6201 -8132.5562 8224.6201 c
-8132.5352 8224.6201 -8132.5137 8224.6406 -8132.5137 8224.6621 c
-8132.5137 8224.7256 -8132.7666 8225.4639 -8132.7666 8225.6318 c
-8132.7666 8225.6748 -8132.7666 8225.6748 -8132.7446 8225.6748 c
-8132.6826 8225.6748 -8132.4722 8225.4639 -8132.4297 8225.4639 c
-8132.4082 8225.4639 -8132.3882 8225.4854 -8132.3882 8225.5059 c
-8132.3882 8225.5264 -8132.4927 8225.8857 -8132.4927 8225.9697 c
-8132.4927 8225.9912 -8132.4927 8225.9912 -8132.4722 8225.9912 c
-8132.4297 8225.9912 -8132.0918 8225.6318 -8132.0078 8225.6318 c
-8131.9658 8225.6318 -8131.9233 8225.6748 -8131.9233 8225.7588 c
-8131.9233 8225.9072 -8132.1138 8226.624 -8132.1138 8226.666 c
-8132.1138 8226.75 -8132.0918 8226.792 -8132.0498 8226.792 c
-8131.9658 8226.792 -8131.7119 8226.4756 -8131.6494 8226.4756 c
-8131.5854 8226.4756 -8131.5439 8226.4961 -8131.5439 8226.5605 c
-8131.5854 8226.9814 L
-8131.5854 8227.0459 -8131.5854 8227.0654 -8131.5654 8227.0654 c
-8131.5225 8227.0654 -8131.2915 8226.7715 -8131.2065 8226.7715 c
-8131.1006 8226.7715 -8131.1006 8227.2568 -8131.1006 8227.3193 c
-8131.1006 8227.4248 -8131.0166 8227.5088 -8130.8896 8227.5088 c
-8130.8057 8227.5088 -8130.4678 8227.2773 -8130.4473 8227.2773 c
-8130.3623 8227.2773 -8130.3198 8227.7197 -8130.2568 8227.7197 c
-8130.1943 8227.7197 -8129.9199 8227.5928 -8129.8564 8227.5928 c
-8129.6455 8227.5928 -8129.6035 8227.6787 -8129.6035 8227.8467 c
-8129.6255 8227.9941 L
-8129.6255 8228.0361 -8129.6035 8228.0361 -8129.5835 8228.0361 c
-8129.4985 8228.0361 -8129.2241 8227.7617 -8129.1392 8227.7617 c
-8128.9287 8227.7617 -8126.8198 8229.8291 -8126.5454 8230.1025 c
-8126.3984 8230.2705 -8126.3984 8230.5664 -8126.3984 8230.6934 c
-8126.3984 8231.5576 -8126.3984 8231.6416 -8126.2295 8231.7256 c
-8125.5977 8231.9795 -8125.5127 8232.127 -8124.7334 8233.4131 c
-8124.6479 8233.5605 -8123.7407 8234.1729 -8123.5942 8234.1729 c
-8123.4878 8234.1729 -8123.1094 8233.9189 -8123.0239 8233.9189 c
-8122.9194 8233.9189 -8122.8135 8233.9824 -8122.8135 8234.1504 c
-8122.8135 8234.5938 -8123.3408 8235.1006 -8123.9312 8235.1006 c
-8124.7534 8235.1006 -8125.0913 8234.4033 -8125.1338 8234.0049 c
-8125.1543 8233.8564 -8125.2393 8233.7715 -8125.3447 8233.7715 c
-8125.3862 8233.7715 -8125.4287 8233.792 -8125.4702 8233.8564 c
-8125.9561 8234.6572 -8126.9473 8235.1006 -8127.7065 8235.1006 c
-8128.7393 8235.1006 -8129.8774 8234.4678 -8130.3418 8234.1943 c
-8130.7842 8233.9414 -8131.4814 8233.7715 -8131.8809 8233.7715 c
-8132.3242 8233.7715 -8132.3662 8233.9189 -8132.3662 8234.1729 c
-8132.3662 8234.3203 -8131.9023 8234.7617 -8131.9023 8234.8896 c
-8131.9023 8235.0156 -8132.0498 8235.1006 -8132.4082 8235.1006 c
-8132.8936 8235.1006 -8133.5679 8234.3828 -8133.5679 8233.6035 c
-8133.5679 8232.9912 -8132.7666 8232.4648 -8132.3022 8232.4648 c
-8131.3755 8232.4648 -8131.0942 8232.8232 -8130.5264 8233.2871 c
-8130.4414 8233.3496 -8130.3774 8233.3721 -8130.3359 8233.3721 c
-8130.1895 8233.3721 -8130.1895 8232.2744 -8130.1895 8232.1494 c
-8130.1895 8232 -8130.2729 8231.9375 -8130.3774 8231.9375 c
-8132.7822 8231.9375 -8137.6592 8230.7139 -8139.3672 8224.5576 c
-8139.4297 8224.3457 -8139.5361 8224.2412 -8139.6406 8224.2412 c
-8139.7881 8224.2412 -8140.7793 8225.084 -8140.7793 8226.666 c
-8140.7793 8228.5 -8139.5767 8229.4697 -8138.9873 8229.4697 c
-8138.8398 8229.4697 -8138.6494 8229.4492 -8138.6494 8229.3008 c
-8138.6494 8229.2383 -8138.6929 8229.1748 -8138.7759 8229.0693 c
-8139.1143 8228.7334 -8139.3672 8228.0996 -8139.3672 8227.7832 c
-8139.3672 8227.5713 -8139.2607 8227.4033 -8139.1143 8227.4033 c
-8138.9033 8227.4033 -8138.5654 8228.3525 -8138.46 8228.5 c
-8138.3335 8228.7109 -8137.9546 8229.0908 -8137.2378 8229.6182 c
-8136.4995 8230.1436 -8135.0654 8231.4521 -8135.0654 8232.7168 c
-8135.0654 8234.0889 -8136.1191 8234.9951 -8136.9209 8234.9951 c
-8137.7007 8234.9951 -8138.6714 8234.4678 -8139.0713 8233.9824 c
-8139.7041 8233.2451 -8140.3154 8232.6748 -8140.8218 8232.6748 c
-8141.1592 8232.6748 -8141.3066 8232.8857 -8141.3066 8233.0967 c
-8141.3066 8233.4336 -8141.0537 8233.666 -8140.5479 8233.708 c
-8139.9575 8233.751 -8139.8936 8234.1729 -8139.8936 8234.5088 c
-8139.8936 8234.7832 -8140.4209 8235.1006 -8140.8433 8235.1006 c
-8141.4751 8235.1006 -8142.2974 8234.4033 -8142.2974 8232.5703 c
-8142.2974 8231.0723 -8141.0537 8230.6094 -8140.5679 8230.6094 c
-8140.1265 8230.6094 -8139.4722 8230.6934 -8139.0928 8231.0303 c
-8137.8066 8232.2334 -8137.1318 8232.4424 -8136.5835 8232.4424 c
-8136.3721 8232.4424 -8136.2881 8232.4424 -8136.2881 8232.5908 c
-8136.2881 8232.9072 -8137.0474 8233.0967 -8137.1318 8233.1182 c
-8137.3423 8233.1807 -8137.5103 8233.4131 -8137.5103 8233.624 c
-8137.5103 8234.1094 -8137.2378 8234.1299 -8136.8774 8234.1299 c
-8136.5215 8234.1299 -8135.8042 8233.7715 -8135.8042 8232.5703 c
-8135.8042 8231.5791 -8136.9424 8230.4189 -8137.4058 8230.1875 c
-8137.7007 8230.0176 -8138.5874 8230.04 -8138.9458 8229.9971 c
-8139.6406 8229.9121 -8141.4121 8228.9648 -8141.4121 8226.4756 c
-8141.4336 8225.0625 -8140.1265 8223.7354 -8139.8511 8223.5459 c
-8139.6826 8223.4385 -8139.5986 8223.3125 -8139.5986 8223.1436 c
-8139.5986 8222.9326 -8139.6626 8220.002 -8139.9995 8220.002 c
-8140.4424 8220.002 -8140.5054 8220.002 -8140.5054 8220.1934 c
-8140.21 8221.2881 -8140.21 8221.5205 v
-8140.21 8221.8369 -8140.4424 8223.3125 -8141.3066 8223.3125 c
-8141.5806 8223.3125 -8142.0449 8223.0801 -8142.0449 8222.7646 c
-8142.0449 8222.4697 -8141.3486 8221.2676 -8141.3486 8220.9932 c
-8141.3486 8220.5078 -8141.3921 8220.4873 -8142.0654 8219.876 c
-8142.2559 8219.7285 -8142.3193 8219.6025 -8142.3193 8219.4111 c
-8142.3193 8219.2432 -8142.2134 8219.1152 -8142.0449 8219.1152 c
-8141.8975 8219.1152 -8141.3281 8219.3916 -8141.2017 8219.4111 c
-8141.0752 8219.4111 -8140.8433 8219.4326 -8140.6538 8219.4326 c
-8140.2734 8219.4326 -8140.0845 8219.3057 -8140.0845 8219.1797 c
-8140.0845 8218.9473 -8140.0845 8218.2734 -8140.9263 8216.8174 c
-8141.1167 8216.4805 -8142.2974 8215.1523 -8142.2974 8214.8145 c
-8142.2974 8214.6455 -8142.2134 8214.626 -8142.1089 8214.626 c
-8141.9185 8214.626 -8141.4966 8215.0469 -8141.3706 8215.1943 c
-8140.1265 8216.5225 -8139.3042 8217.9561 -8138.9238 8219.2217 c
-8138.8398 8219.5381 -8138.7344 8219.4541 -8138.5654 8219.4756 c
-8136.4155 8219.9814 -8134.3271 8222.4902 -8134.3271 8222.5117 c
-8134.4326 8222.7852 -8134.4326 8222.8486 v
-8134.4326 8222.9756 -8134.3271 8222.9971 -8134.3057 8222.9971 c
-8134.2432 8222.9971 -8134.0527 8222.7852 -8134.0103 8222.7852 c
-8133.9058 8222.7852 -8133.7783 8222.8701 -8133.7783 8223.0176 C
-8133.8418 8223.5654 l
f
0 D
-8137.1104 8222.0693 m
-8136.5215 8222.0693 -8136.0986 8222.1748 -8135.6982 8222.4482 c
-8135.6553 8222.4697 -8135.6138 8222.4902 -8135.5928 8222.4902 c
-8135.5498 8222.4902 -8135.5498 8222.4697 -8135.5498 8222.4268 c
-8135.5498 8222.0059 -8137.4272 8220.0459 -8138.5654 8220.0459 c
-8138.6289 8220.0459 -8138.6714 8220.0869 -8138.6714 8220.1494 c
-8138.6714 8220.3398 -8138.5874 8222.3428 -8138.2495 8222.3428 c
-8138.1865 8222.3428 -8138.1016 8222.3213 -8138.0386 8222.2803 c
-8137.7007 8222.1318 -8137.4902 8222.0693 -8137.1104 8222.0693 c
f
-8136.5835 8224.8311 m
-8136.5835 8224.4092 -8136.5625 8223.9453 -8135.8662 8223.9453 c
-8135.2334 8223.9453 -8134.6431 8224.5996 -8134.4961 8224.7471 c
-8134.4326 8224.7891 -8134.3906 8224.8096 -8134.3486 8224.8096 c
-8134.3271 8224.8096 -8134.2847 8224.7676 -8134.2847 8224.7256 c
-8134.2847 8224.2822 -8135.6553 8222.6172 -8137.0049 8222.6172 c
-8137.2578 8222.6172 -8138.2705 8222.7852 -8138.2705 8223.334 c
-8138.2705 8223.5869 -8137.8906 8224.958 -8137.2793 8226.0332 c
-8135.9087 8228.5215 -8131.7119 8230.0801 -8129.8145 8230.0801 c
-8128.9072 8230.1025 -8128.6118 8229.7861 -8128.4863 8229.7646 c
-8128.4648 8229.7646 -8128.4438 8229.7441 -8128.4233 8229.7441 c
-8128.3174 8229.7441 -8128.1904 8229.8076 -8128.1904 8229.9551 c
-8128.1904 8229.9766 -8128.2119 8229.9766 v
-8128.3594 8231.1143 -8128.4014 8231.5156 -8128.4014 8232.7793 c
-8128.4014 8234.1729 -8128.4014 8234.2988 -8127.4321 8234.2988 c
-8126.1455 8234.2988 -8125.8506 8233.2236 -8125.8506 8232.9912 c
-8125.8506 8232.5703 -8126.4399 8232.2744 -8126.5889 8232.2744 c
-8126.7358 8232.2744 -8126.9058 8232.3818 -8126.9058 8232.5703 c
-8126.9058 8232.8652 -8126.9473 8233.0127 -8127.2207 8233.0127 c
-8127.4951 8233.0127 -8127.4951 8232.6543 -8127.4951 8232.5479 c
-8127.4951 8232.2959 -8127.3896 8232.043 -8127.1782 8231.916 c
-8126.7998 8231.6631 -8126.7998 8231.2627 -8126.7998 8231.0518 c
-8126.7998 8230.9463 -8126.7998 8230.8193 -8126.8198 8230.7139 c
-8126.8418 8230.5459 -8128.7817 8228.5 -8129.0977 8228.5 c
-8129.2446 8228.5 -8129.5615 8228.6465 -8130.4258 8228.6465 c
-8132.5767 8228.6465 -8133.5474 8226.9189 -8133.7378 8226.3916 c
-8133.9897 8225.6748 -8134.7915 8225.3789 -8135.0225 8225.3789 c
-8135.2129 8225.3789 -8135.2129 8225.4219 -8135.2129 8225.8223 c
-8135.2129 8225.9072 -8135.4238 8226.2432 y
-8135.4238 8226.4336 -8134.3906 8226.6865 -8134.3906 8226.876 c
-8134.3906 8227.0459 -8134.5801 8227.0654 -8134.7271 8227.0654 c
-8134.8115 8227.0654 -8135.8882 8227.0654 -8136.3306 8226.2432 c
-8136.5415 8225.8428 -8136.5835 8225.2744 -8136.5835 8224.8311 c
f
1 D
-8132.4927 8222.5752 m
-8132.4927 8222.5313 -8132.5137 8222.5117 -8132.5352 8222.5117 c
-8132.5986 8222.5117 -8132.7666 8222.8486 -8132.8506 8222.8486 c
-8132.9146 8222.8486 -8132.9995 8222.7646 -8133.0415 8222.6582 c
-8133.0615 8222.5752 -8133.1255 8222.1104 -8133.21 8222.1104 c
-8133.2524 8222.1104 -8133.4209 8222.3428 -8133.4634 8222.3428 c
-8133.6104 8222.3428 -8133.7158 8222.1104 -8133.7158 8221.9014 c
-8133.7158 8221.7949 -8133.7783 8221.7949 -8133.9263 8221.7949 c
-8134.5166 8221.7949 -8136.1406 8219.623 -8136.5625 8217.8721 c
-8136.6055 8217.7041 -8136.5835 8217.5566 -8136.8994 8217.4502 c
-8139.0713 8216.7139 -8141.5176 8214.5615 -8141.5176 8214.4355 c
-8141.5176 8214.2881 -8141.4336 8214.2041 -8141.3066 8214.2041 c
-8141.2432 8214.2041 -8141.1592 8214.2041 -8140.6538 8214.54 c
-8139.7681 8215.1309 -8137.7217 8216.418 -8136.8994 8216.418 c
-8136.6265 8216.418 -8136.6055 8216.0596 -8136.6055 8215.8057 c
-8136.6055 8215.6152 -8136.6265 8215.3838 -8136.6265 8215.2373 c
-8136.6465 8214.9629 -8136.9634 8214.6455 -8136.9634 8214.4775 c
-8136.9634 8214.3301 -8136.8154 8214.2246 -8136.6465 8214.2246 c
-8136.4575 8214.2246 -8136.3306 8214.2461 -8136.1606 8214.4355 c
-8135.8662 8214.7725 -8135.7402 8214.9209 -8135.4238 8214.9209 c
-8135.1914 8214.9209 -8134.1377 8214.2041 -8133.8838 8214.2041 c
-8133.5679 8214.2041 -8133.1895 8214.6885 -8133.1895 8214.9844 c
-8133.1895 8215.7217 -8134.0942 8216.3125 -8134.6431 8216.3125 c
-8135.0225 8216.3125 -8135.4438 8216.1865 -8135.6353 8215.9541 c
-8135.6982 8215.8896 -8135.7607 8215.8486 -8135.8242 8215.8486 c
-8135.9937 8215.8486 -8136.1191 8216.3125 -8136.1191 8216.3545 c
-8136.1191 8216.7773 -8133.2729 8216.8389 -8132.9146 8216.8389 c
-8132.7666 8216.8389 -8132.6401 8216.7549 -8132.5352 8216.5859 c
-8132.3447 8216.292 -8131.1855 8215.0693 -8129.6255 8215.0693 c
-8127.79 8215.0693 -8126.0825 8216.332 -8126.0825 8218.2305 c
-8126.0825 8218.3369 -8126.1245 8218.8838 -8126.1245 8218.9063 c
-8126.1245 8218.9697 -8125.0063 8220.7188 -8123.6782 8220.7188 c
-8122.6245 8220.7188 -8122.2656 8220.1299 -8122.2656 8219.6436 c
-8122.2656 8219.4111 -8122.3711 8218.7588 -8122.8984 8218.7588 c
-8123.1094 8218.7588 -8123.2144 8218.9697 -8123.2144 8219.3486 c
-8123.2144 8219.4326 -8123.0039 8219.8125 -8123.0039 8219.918 c
-8123.0039 8219.96 -8123.0239 8219.9814 -8123.0879 8219.9814 c
-8123.4258 8219.9814 -8123.9521 8219.623 -8124.1846 8218.9697 c
-8124.4595 8218.2529 -8124.8594 8217.5566 -8125.1958 8217.1553 c
-8125.5127 8216.7979 -8125.6182 8216.2061 -8125.6182 8215.8691 c
-8125.6182 8215.3838 -8125.1338 8214.2246 -8123.4878 8214.2246 c
-8122.2871 8214.2246 -8121.4434 8214.9629 -8121.4434 8215.5742 c
-8121.4434 8216.1865 -8121.7598 8216.5654 -8122.2026 8216.5654 c
-8122.6455 8216.5654 -8122.9824 8216.2275 -8122.9824 8215.8896 c
-8122.9824 8215.2158 -8123.1514 8215.0693 -8123.4878 8215.0693 c
-8123.6992 8215.0693 -8123.8896 8215.1943 -8123.8896 8215.5107 c
-8123.8896 8215.7432 -8123.8896 8216.1221 -8122.3711 8217.3877 c
-8121.8857 8217.7881 -8121.4214 8218.4854 -8121.4214 8219.2646 c
-8121.4214 8220.0244 -8122.4561 8221.2246 -8123.6362 8221.2246 c
-8124.8594 8221.2246 -8125.6401 8220.4453 -8126.2515 8219.7285 c
-8126.5454 8219.3916 -8127.9814 8217.7041 -8128.0439 8217.6816 c
-8128.2334 8217.5342 -8128.3174 8217.4092 -8128.3174 8217.2822 c
-8128.3174 8217.1768 -8128.2119 8217.0713 -8128.0854 8217.0713 c
-8127.8535 8217.0713 -8126.9058 8218.0205 -8126.8198 8218.0205 c
-8126.7568 8218.0205 -8126.7153 8217.9561 -8126.7153 8217.8721 c
-8126.7153 8217.1133 -8127.8535 8215.6377 -8129.6255 8215.6377 c
-8131.1006 8215.6377 -8131.9863 8216.7549 -8131.9863 8216.7979 c
-8131.9863 8216.9238 -8131.8394 8217.0488 -8131.5225 8217.1133 c
-8127.6426 8217.8516 -8124.3955 8221.4014 -8124.3955 8226.0176 c
-8124.3955 8226.124 -8124.2256 8226.1504 -8124.0786 8226.1504 c
-8123.7202 8226.1504 -8123.0879 8226.2295 -8123.0879 8225.9561 c
-8123.0879 8225.8496 -8123.1294 8225.7236 -8123.1934 8225.5967 c
-8123.5518 8225.0264 -8123.8682 8224.8525 -8123.8682 8223.9014 c
-8123.8682 8223.4385 -8123.4878 8222.9121 -8122.8984 8222.9121 c
-8121.8657 8222.9121 -8121.4214 8223.9453 -8121.4214 8224.1768 c
-8121.4214 8224.3457 -8121.5073 8224.4092 -8121.5903 8224.4092 c
-8121.7178 8224.4092 -8122.2241 8223.8818 -8122.3711 8223.8818 c
-8122.5615 8223.8818 -8122.7085 8223.9238 -8122.7085 8224.4092 c
-8122.7085 8224.7471 -8121.4214 8228.458 -8121.4214 8229.2588 c
-8121.4214 8229.8291 -8121.7598 8230.5254 -8122.6455 8231.0303 c
-8122.6875 8231.0518 -8122.7085 8231.0723 -8122.7085 8231.1143 c
-8122.7085 8231.1982 -8122.5615 8231.3047 -8122.4126 8231.3457 c
-8121.8018 8231.5156 -8121.4214 8231.6211 -8121.4214 8232.5703 c
-8121.4214 8232.9287 -8121.7598 8233.6035 -8122.0127 8233.6035 c
-8122.2026 8233.6035 -8122.2026 8233.5605 -8122.2026 8233.2021 c
-8122.2026 8233.0547 -8122.2446 8232.9492 -8122.3926 8232.8438 c
-8122.7085 8232.6328 -8122.7295 8232.5908 -8122.8135 8232.1064 c
-8122.8774 8231.79 -8123.0039 8231.7041 -8124.1426 8231.0723 c
-8124.5854 8230.7988 -8124.6904 8230.5664 -8124.7744 8230.335 c
-8124.8594 8230.1436 -8124.9233 8230.1436 -8125.4287 8230.1436 c
-8125.9561 8230.1436 -8128.5073 8227.4248 -8128.5073 8227.2979 c
-8128.5073 8227.2354 -8128.3809 8226.9395 -8128.3809 8226.876 c
-8128.3809 8226.8135 -8128.4014 8226.7715 -8128.4438 8226.7715 c
-8128.4863 8226.7715 -8128.6338 8226.9814 -8128.6758 8226.9814 c
-8128.7817 8226.9814 -8128.7817 8226.792 -8128.7817 8226.6436 c
-8128.7817 8226.54 -8128.5703 8225.9697 -8128.5703 8225.8223 c
-8128.5703 8225.7383 -8128.5918 8225.6748 -8128.6338 8225.6748 c
-8128.7178 8225.6748 -8128.9072 8226.1377 -8128.9922 8226.1377 c
-8129.0342 8226.1377 -8129.0762 8226.0967 -8129.0762 8225.9697 c
-8129.0762 8225.8223 -8128.8862 8225.1055 y
-8128.8862 8225.042 -8128.9072 8224.9365 -8128.9502 8224.9365 c
-8129.0342 8224.9365 -8129.1826 8225.3369 -8129.2666 8225.3369 c
-8129.3286 8225.3369 -8129.3926 8225.2529 -8129.3926 8225.1055 c
-8129.3926 8225.0205 -8129.2446 8224.5996 -8129.2446 8224.4941 c
-8129.2446 8224.4307 -8129.2666 8224.3662 -8129.3086 8224.3662 c
-8129.3506 8224.3662 -8129.5835 8224.9795 -8129.7095 8224.9795 c
-8129.7935 8224.9795 -8129.8994 8224.8721 -8129.8994 8224.7676 c
-8129.8994 8224.6836 -8129.7729 8224.3252 -8129.7729 8224.2412 c
-8129.7729 8224.1982 -8129.7729 8224.1768 -8129.7935 8224.1768 c
-8129.8774 8224.1768 -8130.0254 8224.6621 -8130.1104 8224.6621 c
-8130.3418 8224.6621 -8130.3623 8224.2412 -8130.3623 8224.0508 c
-8130.3623 8223.9668 -8130.2998 8223.6299 -8130.2998 8223.5654 c
-8130.2998 8223.5029 -8130.3198 8223.4814 -8130.3418 8223.4814 c
-8130.4897 8223.4814 -8130.6782 8224.2822 -8130.8271 8224.2822 c
-8131.0386 8224.2822 -8131.0386 8224.0928 -8131.0386 8223.8613 c
-8131.0166 8223.334 L
-8131.0166 8223.3125 -8131.0386 8223.292 y
-8131.0586 8223.292 -8131.1006 8223.3125 -8131.1226 8223.376 c
-8131.1855 8223.5869 -8131.3115 8224.0088 -8131.5225 8224.0088 c
-8131.6694 8224.0088 -8131.8174 8223.8398 -8131.8174 8223.6934 c
-8131.8174 8223.46 -8131.7119 8223.0801 -8131.7119 8222.8486 c
-8131.7119 8222.7852 -8131.7334 8222.7646 -8131.7754 8222.7646 c
-8131.8608 8222.7646 -8131.9863 8223.2061 -8132.0278 8223.292 c
-8132.0918 8223.376 -8132.1553 8223.3975 -8132.2192 8223.3975 c
-8132.5352 8223.3975 -8132.5352 8223.0801 -8132.5352 8222.9326 C
-8132.4927 8222.5752 l
f
0 D
-8133.8633 8218.21 m
-8133.8633 8217.9775 -8135.8042 8217.7881 -8135.8662 8217.7881 c
-8135.9722 8217.7881 -8136.0352 8217.8516 -8136.0352 8217.9561 c
-8136.0352 8218.8213 -8134.2847 8221.0566 -8133.8633 8221.0566 c
-8133.7998 8221.0566 -8133.7783 8221.0361 -8133.7783 8220.9727 c
-8134.2002 8219.7285 -8134.2002 8219.4756 v
-8134.2002 8219.0957 -8134.0942 8218.8428 -8133.9058 8218.4209 c
-8133.8838 8218.3369 -8133.8633 8218.2734 -8133.8633 8218.21 c
f
-8125.1338 8229.6592 m
-8124.9858 8229.6592 -8124.4795 8229.1543 -8124.3325 8229.1543 c
-8124.2065 8229.1543 -8124.0791 8229.2383 -8124.0791 8229.3857 c
-8124.0791 8229.4697 -8124.2695 8229.9121 -8124.2695 8230.0176 c
-8124.2695 8230.376 -8123.8896 8230.6729 -8123.5098 8230.6729 c
-8123.1094 8230.6729 -8121.9702 8230.3555 -8121.9702 8229.1318 c
-8121.9702 8228.0361 -8122.3926 8228.0361 -8124.0366 8228.0361 c
-8124.3955 8228.0361 -8126.0615 8228.2256 -8126.3145 8228.2256 c
-8126.4399 8228.2256 -8126.4834 8228.0566 -8126.4834 8227.9297 c
-8126.4834 8227.8887 -8126.4834 8227.8467 -8126.4614 8227.8252 c
-8126.3984 8227.4463 -8126.1675 8226.8975 -8126.1675 8226.5176 c
-8126.1675 8222.0693 -8130.2998 8218.21 -8132.7666 8218.21 c
-8133.4209 8218.21 -8133.6519 8219.0117 -8133.6519 8219.4326 c
-8133.6519 8221.1621 -8131.6694 8222.1943 -8131.4175 8222.1943 c
-8131.3545 8222.1943 -8131.3335 8222.1748 -8131.3335 8222.1318 c
-8131.3335 8222.0898 -8131.3545 8222.0479 -8131.3975 8222.0059 c
-8131.5225 8221.8369 -8132.0498 8221.2246 -8132.0498 8220.5928 c
-8132.0498 8220.2549 -8131.7554 8219.8125 -8130.9951 8219.8125 c
-8129.7305 8219.8125 -8129.1826 8221.1621 -8129.1826 8221.5205 c
-8129.1826 8221.6689 -8129.2446 8221.8789 -8129.4561 8221.8789 c
-8129.6035 8221.8789 -8130.0049 8221.2246 -8130.1519 8221.2246 c
-8130.2158 8221.2246 -8130.4473 8221.3516 -8130.5103 8221.3516 c
-8130.5942 8221.3516 -8130.6582 8221.3311 -8130.7422 8221.3311 c
-8130.8057 8221.3311 -8130.8481 8221.3936 -8130.8481 8221.499 c
-8130.8481 8221.8584 -8130.3623 8222.4268 -8129.8774 8222.6807 c
-8128.9722 8223.1436 -8127.6226 8224.4727 -8127.6226 8225.9277 c
-8127.6226 8226.3486 -8127.6846 8226.75 -8127.6846 8227.0869 c
-8127.6846 8227.6357 -8126.7568 8228.5 -8125.8081 8229.3857 c
-8125.6401 8229.5332 -8125.3862 8229.6592 -8125.1338 8229.6592 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8116.9722 8239.3799 m
-8116.9722 8213.3525 L
-8143 8213.3525 L
-8143 8239.3799 L
-8116.9722 8239.3799 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8125.6455 8226.3691 m
-8116.9736 8226.3691 l
S
-8129.9839 8239.3799 m
-8129.9839 8230.7041 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-8125.7202 8222.0303 m
-8116.9727 8222.0303 l
S
-8134.3232 8239.3799 m
-8134.3232 8230.0254 l
S
0.7084 0.636438 0.515526 0.381872 K
-8125.6504 8239.3799 m
-8125.6504 8236.9668 l
-8122.9937 8236.7432 -8121.3096 8235.04 v
-8119.6064 8233.3135 -8119.3774 8230.708 y
-8116.9727 8230.708 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8133.7783 8223.0176 m
-8133.7783 8222.8701 -8133.9058 8222.7852 -8134.0103 8222.7852 c
-8134.0527 8222.7852 -8134.2432 8222.9971 -8134.3057 8222.9971 c
-8134.3271 8222.9971 -8134.4326 8222.9756 -8134.4326 8222.8486 c
-8134.4326 8222.7852 -8134.3271 8222.5117 y
-8134.3271 8222.4902 -8136.4155 8219.9814 -8138.5654 8219.4756 c
-8138.7344 8219.4541 -8138.8398 8219.5381 -8138.9238 8219.2217 c
-8139.3042 8217.9561 -8140.1265 8216.5225 -8141.3706 8215.1943 c
-8141.4966 8215.0479 -8141.9185 8214.626 -8142.1089 8214.626 c
-8142.2134 8214.626 -8142.2974 8214.6455 -8142.2974 8214.8145 c
-8142.2974 8215.1523 -8141.1167 8216.4805 -8140.9263 8216.8174 c
-8140.0845 8218.2734 -8140.0845 8218.9473 -8140.0845 8219.1797 c
-8140.0845 8219.3057 -8140.2734 8219.4326 -8140.6538 8219.4326 c
-8140.8433 8219.4326 -8141.0752 8219.4111 -8141.2017 8219.4111 c
-8141.3281 8219.3916 -8141.8975 8219.1152 -8142.0449 8219.1152 c
-8142.2134 8219.1152 -8142.3193 8219.2432 -8142.3193 8219.4111 c
-8142.3193 8219.6025 -8142.2559 8219.7285 -8142.0654 8219.876 c
-8141.3921 8220.4873 -8141.3486 8220.5078 -8141.3486 8220.9932 c
-8141.3486 8221.2676 -8142.0449 8222.4697 -8142.0449 8222.7646 c
-8142.0449 8223.0801 -8141.5806 8223.3125 -8141.3066 8223.3125 c
-8140.4424 8223.3125 -8140.21 8221.8369 -8140.21 8221.5205 c
-8140.21 8221.2881 -8140.5054 8220.1934 y
-8140.5054 8220.002 -8140.4424 8220.002 -8139.9995 8220.002 c
-8139.6626 8220.002 -8139.5986 8222.9326 -8139.5986 8223.1436 c
-8139.5986 8223.3125 -8139.6826 8223.4385 -8139.8511 8223.5459 c
-8140.1265 8223.7354 -8141.4336 8225.0625 -8141.4121 8226.4756 c
-8141.4121 8228.9648 -8139.6406 8229.9121 -8138.9458 8229.9971 c
-8138.5874 8230.04 -8137.7007 8230.0176 -8137.4058 8230.1875 c
-8136.9424 8230.4189 -8135.8042 8231.5791 -8135.8042 8232.5703 c
-8135.8042 8233.7715 -8136.5215 8234.1299 -8136.8774 8234.1299 c
-8137.2378 8234.1299 -8137.5103 8234.1094 -8137.5103 8233.624 c
-8137.5103 8233.4131 -8137.3423 8233.1807 -8137.1318 8233.1182 c
-8137.0474 8233.0967 -8136.2881 8232.9072 -8136.2881 8232.5908 c
-8136.2881 8232.4424 -8136.3721 8232.4424 -8136.5835 8232.4424 c
-8137.1318 8232.4424 -8137.8066 8232.2334 -8139.0928 8231.0303 c
-8139.4722 8230.6934 -8140.1265 8230.6094 -8140.5679 8230.6094 c
-8141.0537 8230.6094 -8142.2974 8231.0723 -8142.2974 8232.5703 c
-8142.2974 8234.4033 -8141.4751 8235.1006 -8140.8433 8235.1006 c
-8140.4209 8235.1006 -8139.8936 8234.7832 -8139.8936 8234.5088 c
-8139.8936 8234.1729 -8139.9575 8233.751 -8140.5479 8233.708 c
-8141.0537 8233.666 -8141.3066 8233.4336 -8141.3066 8233.0967 c
-8141.3066 8232.8857 -8141.1592 8232.6748 -8140.8218 8232.6748 c
-8140.3154 8232.6748 -8139.7041 8233.2451 -8139.0713 8233.9824 c
-8138.6714 8234.4678 -8137.7007 8234.9951 -8136.9209 8234.9951 c
-8136.1191 8234.9951 -8135.0654 8234.0889 -8135.0654 8232.7168 c
-8135.0654 8231.4521 -8136.4995 8230.1436 -8137.2378 8229.6182 c
-8137.9546 8229.0908 -8138.3335 8228.7109 -8138.46 8228.5 c
-8138.5654 8228.3525 -8138.9033 8227.4033 -8139.1143 8227.4033 c
-8139.2607 8227.4033 -8139.3672 8227.5713 -8139.3672 8227.7832 c
-8139.3672 8228.0996 -8139.1143 8228.7334 -8138.7759 8229.0693 c
-8138.6929 8229.1748 -8138.6494 8229.2383 -8138.6494 8229.3008 c
-8138.6494 8229.4492 -8138.8398 8229.4697 -8138.9873 8229.4697 c
-8139.5767 8229.4697 -8140.7793 8228.5 -8140.7793 8226.666 c
-8140.7793 8225.084 -8139.7881 8224.2412 -8139.6406 8224.2412 c
-8139.5361 8224.2412 -8139.4297 8224.3457 -8139.3672 8224.5576 c
-8137.6592 8230.7139 -8132.7822 8231.9375 -8130.3774 8231.9375 c
-8130.2729 8231.9375 -8130.1895 8232 -8130.1895 8232.1494 c
-8130.1895 8232.2744 -8130.1895 8233.3721 -8130.3359 8233.3721 c
-8130.3774 8233.3721 -8130.4414 8233.3496 -8130.5264 8233.2871 c
-8131.0942 8232.8232 -8131.3755 8232.4648 -8132.3022 8232.4648 c
-8132.7666 8232.4648 -8133.5679 8232.9912 -8133.5679 8233.6035 c
-8133.5679 8234.3828 -8132.8936 8235.1006 -8132.4082 8235.1006 c
-8132.0498 8235.1006 -8131.9023 8235.0156 -8131.9023 8234.8896 c
-8131.9023 8234.7617 -8132.3662 8234.3203 -8132.3662 8234.1729 c
-8132.3662 8233.9189 -8132.3242 8233.7715 -8131.8809 8233.7715 c
-8131.4814 8233.7715 -8130.7842 8233.9414 -8130.3418 8234.1943 c
-8129.8774 8234.4678 -8128.7393 8235.1006 -8127.7065 8235.1006 c
-8126.9473 8235.1006 -8125.9561 8234.6572 -8125.4702 8233.8564 c
-8125.4287 8233.792 -8125.3862 8233.7715 -8125.3447 8233.7715 c
-8125.2393 8233.7715 -8125.1543 8233.8564 -8125.1338 8234.0049 c
-8125.0913 8234.4033 -8124.7534 8235.1006 -8123.9312 8235.1006 c
-8123.3408 8235.1006 -8122.8135 8234.5938 -8122.8135 8234.1504 c
-8122.8135 8233.9824 -8122.9194 8233.9189 -8123.0239 8233.9189 c
-8123.1094 8233.9189 -8123.4878 8234.1729 -8123.5942 8234.1729 c
-8123.7407 8234.1729 -8124.6479 8233.5605 -8124.7334 8233.4131 c
-8125.5127 8232.127 -8125.5977 8231.9795 -8126.2295 8231.7256 c
-8126.3984 8231.6416 -8126.3984 8231.5576 -8126.3984 8230.6934 c
-8126.3984 8230.5664 -8126.3984 8230.2705 -8126.5454 8230.1025 c
-8126.8198 8229.8291 -8128.9287 8227.7617 -8129.1392 8227.7617 c
-8129.2241 8227.7617 -8129.4985 8228.0361 -8129.5835 8228.0361 c
-8129.6035 8228.0361 -8129.6255 8228.0361 -8129.6255 8227.9941 C
-8129.6035 8227.8467 l
-8129.6035 8227.6787 -8129.6455 8227.5928 -8129.8564 8227.5928 c
-8129.9199 8227.5928 -8130.1943 8227.7197 -8130.2568 8227.7197 c
-8130.3198 8227.7197 -8130.3623 8227.2773 -8130.4473 8227.2773 c
-8130.4678 8227.2773 -8130.8057 8227.5088 -8130.8896 8227.5088 c
-8131.0166 8227.5088 -8131.1006 8227.4248 -8131.1006 8227.3193 c
-8131.1006 8227.2568 -8131.1006 8226.7715 -8131.2065 8226.7715 c
-8131.2915 8226.7715 -8131.5225 8227.0654 -8131.5654 8227.0654 c
-8131.5854 8227.0654 -8131.5854 8227.0459 -8131.5854 8226.9814 C
-8131.5439 8226.5605 l
-8131.5439 8226.4961 -8131.5854 8226.4756 -8131.6494 8226.4756 c
-8131.7119 8226.4756 -8131.9658 8226.792 -8132.0498 8226.792 c
-8132.0918 8226.792 -8132.1138 8226.75 -8132.1138 8226.666 c
-8132.1138 8226.624 -8131.9233 8225.9072 -8131.9233 8225.7588 c
-8131.9233 8225.6748 -8131.9658 8225.6318 -8132.0078 8225.6318 c
-8132.0918 8225.6318 -8132.4297 8225.9912 -8132.4722 8225.9912 c
-8132.4927 8225.9912 -8132.4927 8225.9912 -8132.4927 8225.9697 c
-8132.4927 8225.8857 -8132.3882 8225.5264 -8132.3882 8225.5068 c
-8132.3882 8225.4854 -8132.4082 8225.4639 -8132.4297 8225.4639 c
-8132.4722 8225.4639 -8132.6826 8225.6748 -8132.7446 8225.6748 c
-8132.7666 8225.6748 -8132.7666 8225.6748 -8132.7666 8225.6318 c
-8132.7666 8225.4639 -8132.5137 8224.7256 -8132.5137 8224.6621 c
-8132.5137 8224.6406 -8132.5352 8224.6201 -8132.5562 8224.6201 c
-8132.6826 8224.6201 -8133.1055 8225.1904 -8133.1465 8225.1904 c
-8133.1675 8225.1904 -8133.1675 8225.1689 -8133.1675 8225.1055 c
-8133.1675 8224.915 -8132.8936 8224.0088 y
-8132.8936 8223.9873 -8132.9146 8223.9668 -8132.9351 8223.9668 c
-8133.0615 8223.9668 -8133.4414 8224.5137 -8133.5049 8224.5137 c
-8133.5264 8224.5137 -8133.5264 8224.5137 -8133.5264 8224.4727 c
-8133.2729 8223.5654 -8133.2729 8223.4814 v
-8133.2729 8223.376 -8133.3154 8223.334 -8133.3994 8223.334 c
-8133.4634 8223.334 -8133.6943 8223.6709 -8133.7783 8223.6709 c
-8133.8218 8223.6709 -8133.8418 8223.6299 -8133.8418 8223.5654 c
-8133.7783 8223.0176 L
f
1 D
-8138.0386 8222.2803 m
-8138.1016 8222.3213 -8138.1865 8222.3428 -8138.2495 8222.3428 c
-8138.5874 8222.3428 -8138.6714 8220.3398 -8138.6714 8220.1494 c
-8138.6714 8220.0869 -8138.6289 8220.0459 -8138.5654 8220.0459 c
-8137.4272 8220.0459 -8135.5498 8222.0068 -8135.5498 8222.4268 c
-8135.5498 8222.4697 -8135.5498 8222.4902 -8135.5928 8222.4902 c
-8135.6138 8222.4902 -8135.6553 8222.4697 -8135.6982 8222.4482 c
-8136.0986 8222.1748 -8136.5215 8222.0693 -8137.1104 8222.0693 c
-8137.4902 8222.0693 -8137.7007 8222.1318 -8138.0386 8222.2803 c
f
-8136.3306 8226.2432 m
-8135.8882 8227.0654 -8134.8115 8227.0654 -8134.7271 8227.0654 c
-8134.5801 8227.0654 -8134.3906 8227.0459 -8134.3906 8226.876 c
-8134.3906 8226.6865 -8135.4238 8226.4336 -8135.4238 8226.2432 c
-8135.2129 8225.9072 -8135.2129 8225.8223 v
-8135.2129 8225.4229 -8135.2129 8225.3799 -8135.0225 8225.3799 c
-8134.7915 8225.3799 -8133.9897 8225.6748 -8133.7378 8226.3916 c
-8133.5474 8226.9189 -8132.5767 8228.6465 -8130.4258 8228.6465 c
-8129.5615 8228.6465 -8129.2446 8228.5 -8129.0977 8228.5 c
-8128.7817 8228.5 -8126.8418 8230.5459 -8126.8198 8230.7139 c
-8126.7998 8230.8193 -8126.7998 8230.9463 -8126.7998 8231.0518 c
-8126.7998 8231.2627 -8126.7998 8231.6631 -8127.1782 8231.916 c
-8127.3896 8232.043 -8127.4951 8232.2959 -8127.4951 8232.5479 c
-8127.4951 8232.6543 -8127.4951 8233.0127 -8127.2207 8233.0127 c
-8126.9473 8233.0127 -8126.9058 8232.8652 -8126.9058 8232.5703 c
-8126.9058 8232.3818 -8126.7358 8232.2744 -8126.5889 8232.2744 c
-8126.4399 8232.2744 -8125.8506 8232.5703 -8125.8506 8232.9912 c
-8125.8506 8233.2236 -8126.1455 8234.2988 -8127.4321 8234.2988 c
-8128.4014 8234.2988 -8128.4014 8234.1729 -8128.4014 8232.7793 c
-8128.4014 8231.5156 -8128.3594 8231.1143 -8128.2119 8229.9766 c
-8128.1904 8229.9766 -8128.1904 8229.9551 y
-8128.1904 8229.8076 -8128.3174 8229.7441 -8128.4233 8229.7441 c
-8128.4438 8229.7441 -8128.4648 8229.7646 -8128.4863 8229.7646 c
-8128.6118 8229.7861 -8128.9072 8230.1025 -8129.8145 8230.0801 c
-8131.7119 8230.0801 -8135.9087 8228.5215 -8137.2793 8226.0332 c
-8137.8906 8224.958 -8138.2705 8223.5869 -8138.2705 8223.334 c
-8138.2705 8222.7852 -8137.2578 8222.6172 -8137.0049 8222.6172 c
-8135.6553 8222.6172 -8134.2847 8224.2822 -8134.2847 8224.7256 c
-8134.2847 8224.7676 -8134.3271 8224.8096 -8134.3486 8224.8096 c
-8134.3906 8224.8096 -8134.4326 8224.7891 -8134.4961 8224.7471 c
-8134.6431 8224.5996 -8135.2334 8223.9453 -8135.8662 8223.9453 c
-8136.5625 8223.9453 -8136.5835 8224.4092 -8136.5835 8224.8311 c
-8136.5835 8225.2744 -8136.5415 8225.8428 -8136.3306 8226.2432 c
f
0 D
-8132.5352 8222.9326 m
-8132.5352 8223.0801 -8132.5352 8223.3975 -8132.2192 8223.3975 c
-8132.1553 8223.3975 -8132.0918 8223.376 -8132.0278 8223.292 c
-8131.9863 8223.2061 -8131.8608 8222.7646 -8131.7754 8222.7646 c
-8131.7334 8222.7646 -8131.7119 8222.7852 -8131.7119 8222.8486 c
-8131.7119 8223.0801 -8131.8174 8223.46 -8131.8174 8223.6934 c
-8131.8174 8223.8398 -8131.6694 8224.0088 -8131.5225 8224.0088 c
-8131.3115 8224.0088 -8131.1855 8223.5869 -8131.1226 8223.376 c
-8131.1006 8223.3125 -8131.0586 8223.292 -8131.0386 8223.292 c
-8131.0166 8223.3125 -8131.0166 8223.334 V
-8131.0386 8223.8613 l
-8131.0386 8224.0928 -8131.0386 8224.2822 -8130.8271 8224.2822 c
-8130.6782 8224.2822 -8130.4897 8223.4814 -8130.3418 8223.4814 c
-8130.3198 8223.4814 -8130.2998 8223.5029 -8130.2998 8223.5654 c
-8130.2998 8223.6299 -8130.3623 8223.9668 -8130.3623 8224.0508 c
-8130.3623 8224.2412 -8130.3418 8224.6621 -8130.1104 8224.6621 c
-8130.0254 8224.6621 -8129.8774 8224.1768 -8129.7935 8224.1768 c
-8129.7729 8224.1768 -8129.7729 8224.1982 -8129.7729 8224.2412 c
-8129.7729 8224.3252 -8129.8994 8224.6836 -8129.8994 8224.7676 c
-8129.8994 8224.8721 -8129.7935 8224.9795 -8129.7095 8224.9795 c
-8129.5835 8224.9795 -8129.3506 8224.3662 -8129.3086 8224.3662 c
-8129.2666 8224.3662 -8129.2446 8224.4307 -8129.2446 8224.4941 c
-8129.2446 8224.5996 -8129.3926 8225.0205 -8129.3926 8225.1055 c
-8129.3926 8225.2529 -8129.3286 8225.3369 -8129.2666 8225.3369 c
-8129.1826 8225.3369 -8129.0342 8224.9365 -8128.9502 8224.9365 c
-8128.9072 8224.9365 -8128.8862 8225.042 -8128.8862 8225.1055 c
-8129.0762 8225.8223 -8129.0762 8225.9697 v
-8129.0762 8226.0967 -8129.0342 8226.1377 -8128.9922 8226.1377 c
-8128.9072 8226.1377 -8128.7178 8225.6748 -8128.6338 8225.6748 c
-8128.5918 8225.6748 -8128.5703 8225.7383 -8128.5703 8225.8223 c
-8128.5703 8225.9697 -8128.7817 8226.54 -8128.7817 8226.6436 c
-8128.7817 8226.792 -8128.7817 8226.9814 -8128.6758 8226.9814 c
-8128.6338 8226.9814 -8128.4863 8226.7715 -8128.4438 8226.7715 c
-8128.4014 8226.7715 -8128.3809 8226.8135 -8128.3809 8226.876 c
-8128.3809 8226.9395 -8128.5073 8227.2354 -8128.5073 8227.2979 c
-8128.5073 8227.4248 -8125.9561 8230.1436 -8125.4287 8230.1436 c
-8124.9233 8230.1436 -8124.8594 8230.1436 -8124.7744 8230.335 c
-8124.6904 8230.5664 -8124.5854 8230.7988 -8124.1426 8231.0723 c
-8123.0039 8231.7041 -8122.8774 8231.79 -8122.8135 8232.1064 c
-8122.7295 8232.5908 -8122.7085 8232.6328 -8122.3926 8232.8438 c
-8122.2446 8232.9492 -8122.2026 8233.0547 -8122.2026 8233.2021 c
-8122.2026 8233.5605 -8122.2026 8233.6035 -8122.0127 8233.6035 c
-8121.7598 8233.6035 -8121.4214 8232.9287 -8121.4214 8232.5703 c
-8121.4214 8231.6211 -8121.8018 8231.5156 -8122.4126 8231.3457 c
-8122.5615 8231.3047 -8122.7085 8231.1982 -8122.7085 8231.1143 c
-8122.7085 8231.0723 -8122.6875 8231.0518 -8122.6455 8231.0303 c
-8121.7598 8230.5254 -8121.4214 8229.8291 -8121.4214 8229.2588 c
-8121.4214 8228.458 -8122.7085 8224.7471 -8122.7085 8224.4092 c
-8122.7085 8223.9238 -8122.5615 8223.8818 -8122.3711 8223.8818 c
-8122.2241 8223.8818 -8121.7178 8224.4092 -8121.5903 8224.4092 c
-8121.5073 8224.4092 -8121.4214 8224.3457 -8121.4214 8224.1768 c
-8121.4214 8223.9453 -8121.8657 8222.9121 -8122.8984 8222.9121 c
-8123.4878 8222.9121 -8123.8682 8223.4385 -8123.8682 8223.9014 c
-8123.8682 8224.8525 -8123.5518 8225.0264 -8123.1934 8225.5967 c
-8123.1294 8225.7236 -8123.0879 8225.8496 -8123.0879 8225.9561 c
-8123.0879 8226.2295 -8123.7202 8226.1504 -8124.0786 8226.1504 c
-8124.2256 8226.1504 -8124.3955 8226.124 -8124.3955 8226.0176 c
-8124.3955 8221.4014 -8127.6426 8217.8516 -8131.5225 8217.1133 c
-8131.8394 8217.0488 -8131.9863 8216.9238 -8131.9863 8216.7979 c
-8131.9863 8216.7549 -8131.1006 8215.6377 -8129.6255 8215.6377 c
-8127.8535 8215.6377 -8126.7153 8217.1133 -8126.7153 8217.8721 c
-8126.7153 8217.9561 -8126.7568 8218.0205 -8126.8198 8218.0205 c
-8126.9058 8218.0205 -8127.8535 8217.0713 -8128.0854 8217.0713 c
-8128.2119 8217.0713 -8128.3174 8217.1768 -8128.3174 8217.2822 c
-8128.3174 8217.4092 -8128.2334 8217.5342 -8128.0439 8217.6816 c
-8127.9814 8217.7041 -8126.5454 8219.3916 -8126.2515 8219.7285 c
-8125.6401 8220.4453 -8124.8594 8221.2246 -8123.6362 8221.2246 c
-8122.4561 8221.2246 -8121.4214 8220.0244 -8121.4214 8219.2646 c
-8121.4214 8218.4854 -8121.8857 8217.7881 -8122.3711 8217.3877 c
-8123.8896 8216.1221 -8123.8896 8215.7432 -8123.8896 8215.5107 c
-8123.8896 8215.1943 -8123.6992 8215.0693 -8123.4878 8215.0693 c
-8123.1514 8215.0693 -8122.9824 8215.2158 -8122.9824 8215.8896 c
-8122.9824 8216.2275 -8122.6455 8216.5654 -8122.2026 8216.5654 c
-8121.7598 8216.5654 -8121.4434 8216.1865 -8121.4434 8215.5742 c
-8121.4434 8214.9639 -8122.2871 8214.2246 -8123.4878 8214.2246 c
-8125.1338 8214.2246 -8125.6182 8215.3838 -8125.6182 8215.8691 c
-8125.6182 8216.2061 -8125.5127 8216.7979 -8125.1958 8217.1553 c
-8124.8594 8217.5566 -8124.4595 8218.2529 -8124.1846 8218.9697 c
-8123.9521 8219.623 -8123.4258 8219.9814 -8123.0879 8219.9814 c
-8123.0239 8219.9814 -8123.0039 8219.96 -8123.0039 8219.918 c
-8123.0039 8219.8125 -8123.2144 8219.4326 -8123.2144 8219.3486 c
-8123.2144 8218.9697 -8123.1094 8218.7588 -8122.8984 8218.7588 c
-8122.3711 8218.7588 -8122.2656 8219.4111 -8122.2656 8219.6436 c
-8122.2656 8220.1299 -8122.6245 8220.7188 -8123.6782 8220.7188 c
-8125.0063 8220.7188 -8126.1245 8218.9697 -8126.1245 8218.9063 c
-8126.1245 8218.8838 -8126.0825 8218.3369 -8126.0825 8218.2305 c
-8126.0825 8216.332 -8127.79 8215.0693 -8129.6255 8215.0693 c
-8131.1855 8215.0693 -8132.3447 8216.292 -8132.5352 8216.5859 c
-8132.6401 8216.7549 -8132.7666 8216.8389 -8132.9146 8216.8389 c
-8133.2729 8216.8389 -8136.1191 8216.7773 -8136.1191 8216.3545 c
-8136.1191 8216.3125 -8135.9937 8215.8486 -8135.8242 8215.8486 c
-8135.7607 8215.8486 -8135.6982 8215.8896 -8135.6353 8215.9541 c
-8135.4438 8216.1865 -8135.0225 8216.3125 -8134.6431 8216.3125 c
-8134.0942 8216.3125 -8133.1895 8215.7217 -8133.1895 8214.9844 c
-8133.1895 8214.6885 -8133.5679 8214.2041 -8133.8838 8214.2041 c
-8134.1377 8214.2041 -8135.1914 8214.9209 -8135.4238 8214.9209 c
-8135.7402 8214.9209 -8135.8662 8214.7725 -8136.1606 8214.4355 c
-8136.3306 8214.2461 -8136.4575 8214.2246 -8136.6465 8214.2246 c
-8136.8154 8214.2246 -8136.9634 8214.3301 -8136.9634 8214.4775 c
-8136.9634 8214.6455 -8136.6465 8214.9639 -8136.6265 8215.2373 c
-8136.6265 8215.3838 -8136.6055 8215.6152 -8136.6055 8215.8057 c
-8136.6055 8216.0596 -8136.6265 8216.418 -8136.8994 8216.418 c
-8137.7217 8216.418 -8139.7681 8215.1318 -8140.6538 8214.54 c
-8141.1592 8214.2041 -8141.2432 8214.2041 -8141.3066 8214.2041 c
-8141.4336 8214.2041 -8141.5176 8214.2881 -8141.5176 8214.4355 c
-8141.5176 8214.5615 -8139.0713 8216.7139 -8136.8994 8217.4502 c
-8136.5835 8217.5566 -8136.6055 8217.7041 -8136.5625 8217.8721 c
-8136.1406 8219.623 -8134.5166 8221.7959 -8133.9263 8221.7959 c
-8133.7783 8221.7959 -8133.7158 8221.7959 -8133.7158 8221.9014 c
-8133.7158 8222.1104 -8133.6104 8222.3428 -8133.4634 8222.3428 c
-8133.4209 8222.3428 -8133.2524 8222.1104 -8133.21 8222.1104 c
-8133.1255 8222.1104 -8133.0615 8222.5752 -8133.0415 8222.6582 c
-8132.9995 8222.7646 -8132.9146 8222.8486 -8132.8506 8222.8486 c
-8132.7666 8222.8486 -8132.5986 8222.5117 -8132.5352 8222.5117 c
-8132.5137 8222.5117 -8132.4927 8222.5313 -8132.4927 8222.5752 c
-8132.5352 8222.9326 L
f
1 D
-8133.9058 8218.4209 m
-8134.0942 8218.8428 -8134.2002 8219.0957 -8134.2002 8219.4756 c
-8134.2002 8219.7285 -8133.7783 8220.9727 y
-8133.7783 8221.0361 -8133.7998 8221.0566 -8133.8633 8221.0566 c
-8134.2847 8221.0566 -8136.0352 8218.8213 -8136.0352 8217.9561 c
-8136.0352 8217.8516 -8135.9722 8217.7881 -8135.8662 8217.7881 c
-8135.8042 8217.7881 -8133.8633 8217.9775 -8133.8633 8218.21 c
-8133.8633 8218.2734 -8133.8838 8218.3369 -8133.9058 8218.4209 c
f
-8125.8081 8229.3857 m
-8126.7568 8228.5 -8127.6846 8227.6357 -8127.6846 8227.0869 c
-8127.6846 8226.75 -8127.6226 8226.3486 -8127.6226 8225.9277 c
-8127.6226 8224.4727 -8128.9722 8223.1436 -8129.8774 8222.6807 c
-8130.3623 8222.4268 -8130.8481 8221.8584 -8130.8481 8221.499 c
-8130.8481 8221.3936 -8130.8057 8221.3311 -8130.7422 8221.3311 c
-8130.6582 8221.3311 -8130.5942 8221.3516 -8130.5103 8221.3516 c
-8130.4473 8221.3516 -8130.2158 8221.2246 -8130.1519 8221.2246 c
-8130.0049 8221.2246 -8129.6035 8221.8799 -8129.4561 8221.8799 c
-8129.2446 8221.8799 -8129.1826 8221.6689 -8129.1826 8221.5205 c
-8129.1826 8221.1621 -8129.7305 8219.8125 -8130.9951 8219.8125 c
-8131.7554 8219.8125 -8132.0498 8220.2549 -8132.0498 8220.5928 c
-8132.0498 8221.2246 -8131.5225 8221.8369 -8131.3975 8222.0068 c
-8131.3545 8222.0479 -8131.3335 8222.0898 -8131.3335 8222.1318 c
-8131.3335 8222.1748 -8131.3545 8222.1943 -8131.4175 8222.1943 c
-8131.6694 8222.1943 -8133.6519 8221.1621 -8133.6519 8219.4326 c
-8133.6519 8219.0117 -8133.4209 8218.21 -8132.7666 8218.21 c
-8130.2998 8218.21 -8126.1675 8222.0693 -8126.1675 8226.5176 c
-8126.1675 8226.8975 -8126.3984 8227.4463 -8126.4614 8227.8252 c
-8126.4834 8227.8467 -8126.4834 8227.8887 -8126.4834 8227.9297 c
-8126.4834 8228.0566 -8126.4399 8228.2256 -8126.3145 8228.2256 c
-8126.0615 8228.2256 -8124.3955 8228.0361 -8124.0366 8228.0361 c
-8122.3926 8228.0361 -8121.9702 8228.0361 -8121.9702 8229.1318 c
-8121.9702 8230.3555 -8123.1094 8230.6729 -8123.5098 8230.6729 c
-8123.8896 8230.6729 -8124.2695 8230.376 -8124.2695 8230.0176 c
-8124.2695 8229.9121 -8124.0791 8229.4697 -8124.0791 8229.3857 c
-8124.0791 8229.2383 -8124.2065 8229.1543 -8124.3325 8229.1543 c
-8124.4795 8229.1543 -8124.9858 8229.6592 -8125.1338 8229.6592 c
-8125.3862 8229.6592 -8125.6401 8229.5332 -8125.8081 8229.3857 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt \221\310\211~/ Adobe Calligraphic ) -
(Brush Tool/ 5 pt \221\310\211~/ Adobe Calligraphic Brush Tool/ 5 pt \203t\203) -
(\211\203b\203g/ Adobe Calligraphic Brush Tool/ 3 pt \203\211\203E\203\223\203h/ Adobe Cal) -
(ligraphic Brush Tool/ 7 pt \203\211\203E\203\223\203h/ Adobe Calligraphic Brush ) -
(Tool/ 15 pt\203\211\203E\203\223\203h/ Adobe ArtOnPath Brush Tool/ \226\330\222Y\211\346/ Adobe) -
( ArtOnPath Brush Tool/ \220\374 \(\220\346\215\327\)/ Adobe ArtOnPath Brush Tool/ ) -
(\203t\203\215\201[\203\211\203\213\203X\203|\201[\203N/ Adobe PatternOnPath Brush Tool/ \220\324\202\242\226\356\210\363\203u) -
(\203\211\203V / Adobe PatternOnPath Brush Tool/ \203S\203V\203b\203N/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt\603\611\603E\603\623\603h)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt \621\710\611~)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt \603\611\603E\603\623\603h)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \603t\603\611\603b\603g)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \621\710\611~)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt \603\611\603E\603\623\603h)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\603t\603\615\601[\603\611\603\613\603X\603|\601[\603N)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\626\730\622Y\611\746)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\620\774 \(\620\746\615\727\))
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\603S\603V\603b\603N)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\620\724\602\642\626\756\610\763\603u\603\611\603V )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623]) 0 Xs
([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
Pc
0 0 0 0 k
(\603z\603\617\603C\603g)
Pc
0 0 0 1 k
(\603u\603\611\603b\603N)
Pc
0 1 1 0 k
(CMYK \603\614\603b\603h)
Pc
0 0 1 0 k
(CMYK \603C\603G\603\615\601[)
Pc
1 0 1 0 k
(CMYK \603O\603\612\601[\603\623)
Pc
1 0 0 0 k
(CMYK \603V\603A\603\623)
Pc
1 1 0 0 k
(CMYK \603u\603\613\601[)
Pc
0 1 0 0 k
(CMYK \603}\603[\603\623\603^)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
2 (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
Pc
Bb
0 0 0 0 Bh
2 (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
0 0 0 0 Bh
2 (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
Pc
Bb
2 (\615\673\624\631\602\714\623\772\625\751\602\752) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\615\673\624\631\602\714\623\772\625\751\602\752)
Pc
Bb
0 0 0 0 Bh
2 (\623\672 \(\625\772\616\713\617\763\)) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\623\672 \(\625\772\616\713\617\763\))
Pc
(\613\633\614`\603p\603^\601[\603\623) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\613\633\614`\603p\603^\601[\603\623)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 113 250 0 50 Lb
(\203f\203U\203C\203\223) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 1 6 79 255 255 0 50 Lb
(25mm\227p\203K\203C\203h) Ln
1 A
u
0 A
1 Ap
0 D
0 O
0 0 0 0 k
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
83.623 48.1904 m
83.623 28.6211 67.7598 12.7568 48.1904 12.7568 c
28.6211 12.7568 12.7568 28.6211 12.7568 48.1904 c
12.7568 67.7593 28.6211 83.623 48.1904 83.623 c
67.7598 83.623 83.623 67.7593 83.623 48.1904 c
(b) *
U
1 A
u
0 A
95.1035 48.1895 m
95.1035 22.2803 74.0996 1.27637 48.1899 1.27637 c
22.2803 1.27637 1.27637 22.2803 1.27637 48.1895 c
1.27637 74.0996 22.2803 95.1035 48.1899 95.1035 c
74.0996 95.1035 95.1035 74.0996 95.1035 48.1895 c
(s) *
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
0 1 0 1 0 0 0 7 128 128 128 0 50 Lb
(\215\355\217\234\213\326\216~\203\214\203C\203\204\201[) Ln
1 A
u
0 A
0 Ap
0 R
0 0 0 1 K
0 J 0 j 1.98425 w 4 M []0 d0 XR
48.1836 1.56738 m
48.1836 4.40234 L
S
4.4082 48.1895 m
1.57324 48.1895 L
S
48.1738 94.8994 m
48.1738 92.0654 L
S
94.8545 48.1807 m
92.0205 48.1807 L
S
1 Ap
0 G
95.1035 48.1895 m
95.1035 22.2793 74.0986 1.27637 48.1895 1.27637 c
22.2798 1.27637 1.27637 22.2793 1.27637 48.1895 c
1.27637 74.0996 22.2798 95.1035 48.1895 95.1035 c
74.0986 95.1035 95.1035 74.0996 95.1035 48.1895 c
s
1 G
0.566929 w95.1035 48.1895 m
95.1035 22.2793 74.0986 1.27637 48.1895 1.27637 c
22.2803 1.27637 1.27637 22.2793 1.27637 48.1895 c
1.27637 74.0996 22.2803 95.1035 48.1895 95.1035 c
74.0986 95.1035 95.1035 74.0996 95.1035 48.1895 c
s
0 Ap
0.850394 w48.1738 94.8887 m
48.1738 92.4785 L
S
3.91504 48.1895 m
1.50537 48.1895 L
S
94.8643 48.1807 m
92.4561 48.1807 L
S
48.168 1.55371 m
48.168 3.96289 L
S
1 Ap
0 O
1 g
0 0 0 1 K
0.708661 w47.3262 93.2881 m
47.3262 92.6631 46.8198 92.1543 46.1924 92.1543 c
45.5649 92.1543 45.0586 92.6631 45.0586 93.2881 c
45.0586 93.916 45.5649 94.4219 46.1924 94.4219 c
46.8198 94.4219 47.3262 93.916 47.3262 93.2881 c
b
51.2793 93.292 m
51.2793 92.667 50.7705 92.1582 50.1455 92.1582 c
49.5205 92.1582 49.0107 92.667 49.0107 93.292 c
49.0107 93.9199 49.5205 94.4258 50.1455 94.4258 c
50.7705 94.4258 51.2793 93.9199 51.2793 93.292 c
b
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
