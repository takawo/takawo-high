%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 14.0.0
%%For: (C-04) ()
%%Title: (57mm.ai)
%%CreationDate: 6/29/2011 10:54 PM
%%Canvassize: 16383
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_pattern_AI5 1.0 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKProcessColor: 1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 1 0 () 
%AI3_TemplateBox: 96.7852 95.9746 96.7852 95.9746
%AI3_TileBox: -191.6201 -310.2402 384.3799 508.8799
%AI3_DocumentPreview: None
%AI5_ArtSize: 192.1895 192.1895
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 3
%AI8_OpenToView: -113 246.4263 3 1265 894 18 0 0 126 155 0 0
%AI5_OpenViewLayers: 237
%%PageOrigin:0 0
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%AI12_CMSettings: 00.MS
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Tracing Object) (\203g\203\214\201[\203X) (TracingSuite.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (flare.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (Envelope and Warp.aip)
%AI8_PluginGroupInfo
(Adobe Planar Group) (Adobe \203\211\203C\203u\203y\203C\203\223\203g\203v\203\211\203O\203C\203\223) (Live Paint.aip)
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (Live Blends.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (Symbolism.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (ArtOnPath.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Calligraphic Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (Scatter Brush Tool.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (PathFinder Suite.aip)
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
6 Bn
%AI5_BeginGradient: (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 1 3 Bd
[
0.2
0.2
0.2
1
1 %_Br
0.2
0.2
0.2
1
1 %_Br
[
0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS
%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs
0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS
%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs
0.2 0.2 0.2 1 1 50 100 %_BS
%_0.2 0.2 0.2 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 2 Bd
[
0
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 1 1 50 0 %_BS
%_0 0 0 1 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 1 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\615\673\624\631\602\714\623\772\625\751\602\752)
(\615\673\624\631\602\714\623\772\625\751\602\752) 0 6 Bd
[
<
38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455
555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D
6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F
7F7F80808080818181818282828282
>
<
5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B
7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B
9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1
B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5
>
<
2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B
3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646
464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E
4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F
>
0
1 %_Br
<
1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738
>
<
4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657
>
<
5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
>
0
1 %_Br
<
050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D
1E1E1F
>
<
2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F
3F3F40
>
<
7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554
535252
>
0
1 %_Br
<
00000000000000000001010101010101010101010101010101010202020202020202020202020202
02020303030303030303030303030303030304040404040404040404040404040405050505050505
050505
>
<
7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A59585756
5554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E
2D2C2B
>
<
9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E
8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C
7B7B7A
>
<
03030202020202020202020202020202020202020202020202020202020202020202020201010101
01010101010101010101010101010101010101010101010101010100000000000000000000000000
000000
>
1 %_Br
<
05050505050505050404040404040404040404030303030303030303030303020202020202020202
020202010101010101010101010101000000000000
>
<
91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382
828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A
>
<
DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4
B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E
>
<
2928282726262524242322222121201F1F1E1D1D1C1B1B1A19191818171616151414131212111110
0F0F0E0D0D0C0B0B0A0A0908080706060504040303
>
1 %_Br
[
0.51 0.71 0.31 0 1 50 100 %_BS
%_0.51 0.71 0.31 0 1 50 100 Bs
0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS
%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs
0.12 0.25 0.32 0 1 50 53.6679 %_BS
%_0.12 0.25 0.32 0 1 50 53.6679 Bs
0.02 0.17 0.48 0 1 48 38.764 %_BS
%_0.02 0.17 0.48 0 1 48 38.764 Bs
0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS
%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs
0.02 0.57 0.86 0.16 1 50 0 %_BS
%_0.02 0.57 0.86 0.16 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 0 1 1 50 100 %_BS
%_0 0 0 1 1 50 100 Bs
0 0 0 0 1 50 0 %_BS
%_0 0 0 0 1 50 0 Bs
BD
%AI5_EndGradient
%AI5_BeginGradient: (\623\672 \(\625\772\616\713\617\763\))
(\623\672 \(\625\772\616\713\617\763\)) 1 4 Bd
[
0
<
0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F20202122222324
24252627272829292A2B2B2C2D2D2E2F2F303131323333343536
>
<
242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F40414243444546474849
4A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263
>
<
0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A
1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B
>
1 %_Br
<
00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F101111121213131415151616
17181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E
2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647
474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959
>
<
3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556
565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778
797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B
9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5
>
<
636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788
898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAF
B0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7
D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5
>
<
2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030
30303030303131313131313131323232323232323232333333333333333334343434343434343535
3535353535353536363636363636363737373737373737383838383838383839393939393939393A
3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D
>
1 %_Br
<
595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363
636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D
6D6E
>
<
B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECF
CFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9
EAEB
>
<
F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEB
EBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1
E1E0
>
<
3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364
656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D
8E8F
>
1 %_Br
[
0 0.04 0.14 0 1 51.0204 0.395812 %_BS
%_0 0.04 0.14 0 1 51.0204 0.395812 Bs
0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS
%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs
0.35 0.71 0.96 0.24 1 50 78.0899 %_BS
%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs
0.43 0.92 0.88 0.56 1 50 100 %_BS
%_0.43 0.92 0.88 0.56 1 50 100 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI3_BeginPattern: (\613\633\614`\603p\603^\601[\603\623)
(\613\633\614`\603p\603^\601[\603\623) 77.5215 31.4824 155.3037 96.7959 [
%AI3_Tile
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 38.085 m
26.7441 24.5742 7.7324 50.1514 v
7.7324 0.7559 l
26.7441 26.334 48.6924 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 38.085 m
104.5264 24.5742 85.5137 50.1514 v
85.5137 0.7559 l
104.5264 26.334 126.4736 12.8223 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.4521 70.7412 m
144.4004 57.2314 163.4121 82.8076 v
163.4121 33.4131 l
144.4004 58.9902 122.4521 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 78.6689 m
122.4805 70.8115 l
144.4277 57.3008 163.4404 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.4736 103.3984 m
104.5264 89.8877 85.5137 115.4648 v
85.5137 66.0693 l
104.5264 91.6475 126.4736 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 102.8643 m
122.4805 110.7227 l
144.4277 124.2334 163.4404 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 98.3916 m
158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c
121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C
99.5859 94.7793 99.5859 90.6816 v
99.5859 86.9863 103.6016 87.5869 Y
123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c
151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c
164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c
165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c
167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c
170.8945 93.6357 164.7207 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 96.7959 m
157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c
154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c
153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c
156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 c
f
142.3477 90.6719 m
142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C
151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c
145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c
140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c
151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C
146.54 80.6494 142.3477 85.1709 142.3477 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 78.6689 m
44.6982 70.8115 l
66.6465 57.3008 85.6582 82.8779 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.6699 70.7412 m
66.6182 57.2314 85.6299 82.8076 v
85.6299 33.4131 l
66.6182 58.9902 44.6699 45.4785 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.6924 103.3984 m
26.7441 89.8877 7.7324 115.4648 v
7.7324 66.0693 l
26.7441 91.6475 48.6924 78.1357 y
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 102.8643 m
44.6982 110.7227 l
66.6465 124.2334 85.6582 98.6563 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 98.3916 m
80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c
43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C
21.8037 94.7793 21.8037 90.6816 v
21.8037 86.9863 25.8193 87.5869 Y
45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c
73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c
86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c
87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c
89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c
93.1123 93.6357 86.9395 98.3916 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 96.7959 m
79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c
76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c
75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c
78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 c
f
64.5654 90.6719 m
64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C
73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c
67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c
62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c
73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C
68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 46.0117 m
48.6641 38.1553 l
26.7158 24.6436 7.7041 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
44.3682 70.207 m
48.6641 78.0654 l
26.7158 91.5762 7.7041 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
67.4922 61.3281 m
47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c
17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C
0.25 60.9795 0.25 58.1104 v
0.25 55.6309 3.666 52.79 5.3535 51.2305 c
5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c
5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c
11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c
50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C
71.5586 54.3301 71.5586 58.0254 v
71.5586 62.123 67.4922 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
13.874 64.1396 m
13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c
16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c
17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c
14.7539 66.1064 13.874 65.2266 13.874 64.1396 c
f
28.7969 58.0156 m
28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C
19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c
26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c
30.8857 52.1611 26.1396 47.416 20.2861 47.416 c
19.9326 47.416 19.585 47.4355 19.2412 47.4688 C
24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 46.0117 m
126.4463 38.1553 l
104.498 24.6436 85.4863 50.2217 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
122.1504 70.207 m
126.4463 78.0654 l
104.498 91.5762 85.4863 65.999 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
145.2734 61.3281 m
125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c
95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C
78.0322 60.9795 78.0322 58.1104 v
78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c
83.1729 51.1963 83.2139 51.1592 83.25 51.126 c
83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c
88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c
127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C
149.3408 54.3301 149.3408 58.0254 v
149.3408 62.123 145.2734 61.3281 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
91.6563 64.1396 m
91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c
94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c
95.5889 65.2266 94.709 66.1064 93.623 66.1064 c
92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 c
f
106.5781 58.0156 m
106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C
97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c
103.9219 68.6152 108.668 63.8691 108.668 58.0156 c
108.668 52.1611 103.9219 47.416 98.0684 47.416 c
97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C
102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 13.3555 m
122.4805 5.498 l
144.4277 -8.0127 163.4404 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
126.7764 37.5508 m
122.4805 45.4092 l
144.4277 58.9199 163.4404 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
164.7207 33.0781 m
158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c
121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C
99.5859 29.4658 99.5859 25.3691 v
99.5859 21.6729 103.6016 22.2734 Y
123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c
151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c
164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c
165.7119 18.502 165.7529 18.54 165.79 18.5732 c
167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c
170.8945 28.3232 164.7207 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
157.2695 31.4824 m
157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c
154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c
153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c
156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 c
f
142.3477 25.3594 m
142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C
151.5596 35.9395 151.2109 35.959 150.8584 35.959 c
145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c
140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c
151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C
146.54 15.3359 142.3477 19.8574 142.3477 25.3594 c
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 13.3555 m
44.6982 5.498 l
66.6465 -8.0127 85.6582 17.5645 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.02 0.73 1 0 k
 0.02 0.73 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
F
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
48.9941 37.5508 m
44.6982 45.4092 l
66.6465 58.9199 85.6582 33.3428 v
S
%AI6_EndPatternLayer
) &
(0 O 0 R 0.01 1 1 0 k
 0.01 1 1 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
f
%AI6_EndPatternLayer
) &
(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k
 0.753658 0.603387 0.711482 0.831327 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 0.5 w 4 M []0 d0 XR
86.9395 33.0781 m
80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c
43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C
21.8037 29.4658 21.8037 25.3691 v
21.8037 21.6729 25.8193 22.2734 Y
45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c
73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c
86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c
87.9307 18.502 87.9707 18.54 88.0088 18.5732 c
89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c
93.1123 28.3232 86.9395 33.0781 Y
s
%AI6_EndPatternLayer
) &
(0 O 0 R 1 0.89 0.01 0 k
 1 0.89 0.01 0 K
) @
(
%AI6_BeginPatternLayer
0 J 0 j 1 w 4 M []0 d0 XR
79.4883 31.4824 m
79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c
76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c
75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c
78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 c
f
64.5654 25.3594 m
64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C
73.7773 35.9395 73.4297 35.959 73.0762 35.959 c
67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c
62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c
73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C
68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 c
f
%AI6_EndPatternLayer
) &
] E
%AI3_EndPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 20)0 A
u
u
0 J 0 j 1 w 4 M []0 d0 XR
-4222.5 4415.1948 m
-4008.8999 4415.1948 L
-4008.8999 4407.394 L
-4222.5 4407.394 L
-4222.5 4415.1948 L
n
0 O
0 0 0 1 k
-4222.5 4411.2949 m
-4212.4854 4413.7866 -4205.6865 4415.1348 -4193.7007 4415.1948 c
-4180.7188 4415.2598 -4115.6997 4415.1948 y
-4050.6816 4415.2598 -4037.6997 4415.1948 v
-4025.7124 4415.1348 -4018.9136 4413.7866 -4008.8999 4411.2949 C
-4018.9136 4408.8032 -4025.7124 4407.4551 -4037.6997 4407.394 c
-4050.6816 4407.3286 -4115.6997 4407.394 y
-4180.7188 4407.3286 -4193.7007 4407.394 v
-4205.6865 4407.4551 -4212.4854 4408.8032 -4222.5 4411.2949 C
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 12)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8095 8287.7598 m
-7997.2451 8287.7598 L
-7997.2451 8267.0439 L
-8095 8267.0439 L
-8095 8287.7598 L
n
0 O
0 g
1 XR
-7997.5586 8283.0781 m
-8012.8247 8269.29 -8030.5537 8290.209 -8045.9277 8277.9258 C
-8044.4199 8272.2734 -8038.7598 8279.2275 -8036.5176 8274.5811 C
-8036.4341 8272.9805 -8039.6313 8274.4805 -8039.5127 8272.3604 C
-8037.6245 8268.9512 -8032.8955 8269.4482 -8031.5664 8273.4971 C
-8025.3115 8271.5273 -8018.7734 8265.584 -8012.7847 8267.377 C
-8011.2671 8268.7275 -8012.0708 8269.9111 -8011.6211 8271.1875 C
-8004.2871 8266.752 -7995.4644 8275.8877 -7997.5586 8283.0781 C
f
-8041.2842 8284.6924 m
-8041.8247 8285.0684 -8040.9277 8286.1797 -8041.2529 8286.668 C
-8043.3237 8285.916 -8045.6919 8281.8379 -8047.4731 8279.0703 C
-8047.2632 8280.5996 -8048.6641 8281.9238 -8050.0781 8279.6924 C
-8050.2383 8278.875 -8049.3667 8278.5879 -8049.6729 8277.6963 C
-8050.8306 8276.1279 -8051.8472 8277.6133 -8052.7798 8277.3848 C
-8053.3184 8276.6211 -8053.6143 8275.9785 -8053.6816 8275.4541 C
-8047.5537 8272.6338 -8040.9263 8284.4365 -8034.7456 8284.8623 C
-8034.9048 8287.875 -8038.8555 8289.5605 -8041.2842 8284.6924 C
f
u
u
0 XR
-8038.1602 8279.4199 m
-8053.0142 8272.8799 -8074.4731 8277.1016 -8090.3687 8277.0791 c
-8096.2988 8277.0723 -8085.8965 8277.0811 -8091.8267 8277.0859 c
N
0 O
0 g
-8035.8052 8278.1992 m
-8053.1475 8271.0234 -8072.9341 8275.8154 -8091.0532 8275.7461 C
-8091.8608 8276.6328 -8092.6685 8277.5215 -8093.4751 8278.4072 C
-8092.6973 8278.4072 -8091.9194 8278.4063 -8091.1421 8278.4131 C
-8090.3345 8277.5254 -8089.5273 8276.6387 -8088.7202 8275.752 C
-8089.3516 8275.7617 -8089.9844 8275.7549 -8090.6157 8275.7549 c
-8092.3735 8275.7578 -8096.9165 8278.4219 -8093.0376 8278.417 c
-8092.4063 8278.417 -8091.7734 8278.4238 -8091.1421 8278.4131 c
-8089.4155 8278.3857 -8084.8184 8275.7832 -8088.7202 8275.752 c
-8089.4976 8275.7432 -8090.2759 8275.7461 -8091.0532 8275.7461 c
-8092.8081 8275.7451 -8097.3574 8278.3926 -8093.4751 8278.4072 c
-8076.1177 8278.4746 -8057.1025 8273.7734 -8040.5151 8280.6387 c
-8039.1035 8281.2236 -8033.8081 8279.0264 -8035.8052 8278.1992 c
-8035.8052 8278.1992 l
f
U
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 158)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8095 8287.7598 m
-8083.0078 8287.7598 L
-8083.0078 8277.123 L
-8095 8277.123 L
-8095 8287.7598 L
n
-8094.3218 8277.123 m
-8094.3218 8281.0723 L
-8094.3218 8282.1074 L
-8094.3218 8282.7461 L
-8094.3218 8283.8447 L
-8094.3218 8287.7598 L
-8083.6865 8287.7598 L
-8083.6865 8283.8447 L
-8083.6865 8282.7461 L
-8083.6865 8282.1074 L
-8083.6865 8281.0723 L
-8083.6865 8277.123 L
-8094.3218 8277.123 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8083.0078 8283.8447 m
-8083.0078 8283.1992 L
-8095 8283.2012 L
-8095 8283.8447 L
-8095 8283.9102 L
-8083.0078 8283.9092 L
-8083.0078 8283.8447 L
f
-8083.0078 8281.0723 m
-8095 8281.0723 L
-8095 8281.7813 L
-8083.0078 8281.7813 L
-8083.0078 8281.0723 L
f
0.15 1 0.9 0.1 k
-8083.0078 8282.8115 m
-8095 8282.8115 L
-8095 8283.2012 L
-8083.0078 8283.1992 L
-8083.0078 8282.8115 L
f
-8083.0078 8282.1074 m
-8083.0078 8281.7813 L
-8095 8281.7813 L
-8095 8282.1074 L
-8095 8282.1719 L
-8083.0078 8282.1719 L
-8083.0078 8282.1074 L
f
0 1 1 0 k
-8083.0078 8282.7461 m
-8083.0078 8282.1719 L
-8095 8282.1719 L
-8095 8282.7461 L
-8095 8282.8115 L
-8083.0078 8282.8115 L
-8083.0078 8282.7461 L
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 160)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8095 8286.5645 m
-8084.3638 8286.5645 L
-8084.3638 8275.9277 L
-8095 8275.9277 L
-8095 8286.5645 L
n
-8095 8275.9277 m
-8095 8279.8184 L
-8095 8280.5283 L
-8095 8280.9111 L
-8095 8281.5527 L
-8095 8281.9414 L
-8095 8282.6504 L
-8095 8286.5645 L
-8084.3638 8286.5645 L
-8084.3638 8275.9277 L
-8095 8275.9277 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8088.9585 8287.7598 m
-8088.2515 8287.7598 L
-8088.2607 8282.7158 L
-8082.5229 8282.7148 L
-8082.5229 8282.0039 L
-8088.9707 8282.0068 L
-8088.9585 8287.7598 L
f
-8090.6055 8280.2939 m
-8090.8696 8280.5566 -8091.0215 8280.9229 -8091.0215 8281.2959 C
-8091.0073 8287.7598 L
-8090.2979 8287.7598 L
-8090.3125 8281.2959 L
-8090.3125 8281.1094 -8090.2363 8280.9277 -8090.1045 8280.7949 c
-8089.9717 8280.6631 -8089.7891 8280.5879 -8089.6021 8280.5879 C
-8082.5229 8280.5879 L
-8082.5229 8279.8779 L
-8089.6021 8279.8779 L
-8089.9761 8279.8779 -8090.3418 8280.0293 -8090.6055 8280.2939 c
f
0.15 1 0.9 0.1 k
-8089.2827 8287.7598 m
-8088.9585 8287.7598 L
-8088.9707 8282.0068 L
-8082.5229 8282.0039 L
-8082.5229 8281.6152 L
-8089.2827 8281.6152 L
-8089.2827 8287.7598 L
f
-8090.1045 8280.7949 m
-8090.2363 8280.9277 -8090.3125 8281.1094 -8090.3125 8281.2959 C
-8090.2979 8287.7598 L
-8089.9219 8287.7598 L
-8089.9219 8281.2959 L
-8089.9219 8281.2119 -8089.8877 8281.1309 -8089.8281 8281.0703 c
-8089.7695 8281.0117 -8089.6865 8280.9785 -8089.6025 8280.9785 C
-8082.5229 8280.9785 L
-8082.5229 8280.5879 L
-8089.6021 8280.5879 L
-8089.7891 8280.5879 -8089.9717 8280.6631 -8090.1045 8280.7949 c
f
0 1 1 0 k
-8089.8281 8281.0703 m
-8089.8877 8281.1309 -8089.9219 8281.2119 -8089.9219 8281.2959 C
-8089.9219 8287.7598 L
-8089.2827 8287.7598 L
-8089.2827 8281.6152 L
-8082.5229 8281.6152 L
-8082.5229 8280.9785 L
-8089.6025 8280.9785 L
-8089.6865 8280.9785 -8089.7695 8281.0117 -8089.8281 8281.0703 c
f
U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 161)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8095 8287.7598 m
-8083.0078 8287.7598 L
-8083.0078 8277.123 L
-8095 8277.123 L
-8095 8287.7598 L
n
-8094.0117 8277.123 m
-8094.0117 8281.0723 L
-8094.0117 8282.1074 L
-8094.0117 8282.7461 L
-8094.0117 8283.8447 L
-8094.0117 8287.7598 L
-8083.3765 8287.7598 L
-8083.3765 8283.8447 L
-8083.3765 8282.7461 L
-8083.3765 8282.1074 L
-8083.3765 8281.0723 L
-8083.3765 8277.123 L
-8094.0117 8277.123 L
n
0 O
0.15 1 0.9 0.1 k
-8083.0078 8282.8115 m
-8095 8282.8115 L
-8095 8283.2012 L
-8083.0078 8283.1992 L
-8083.0078 8282.8115 L
f
-8083.0078 8282.1074 m
-8083.0078 8281.7813 L
-8095 8281.7813 L
-8095 8282.1074 L
-8095 8282.1719 L
-8083.0078 8282.1719 L
-8083.0078 8282.1074 L
f
0 1 1 0 k
-8083.0078 8282.7461 m
-8083.0078 8282.1719 L
-8095 8282.1719 L
-8095 8282.7461 L
-8095 8282.8115 L
-8083.0078 8282.8115 L
-8083.0078 8282.7461 L
f
1 Ap
0.746094 0.675781 0.667969 0.898438 k
-8093.2715 8283.9102 m
-8095 8283.9102 L
-8095 8281.0723 L
-8093.2715 8281.0723 L
-8093.2715 8283.9102 L
f
0.15 1 0.9 0.1 k
-8092.5967 8283.8936 m
-8093.4492 8283.8936 L
-8093.4492 8281.0566 L
-8092.5967 8281.0566 L
-8092.5967 8283.8936 L
f
0 Ap
0.746094 0.675781 0.667969 0.898438 k
-8083.0078 8283.8447 m
-8083.0078 8283.1992 L
-8095 8283.2012 L
-8095 8283.8447 L
-8095 8283.9102 L
-8083.0078 8283.9092 L
-8083.0078 8283.8447 L
f
-8083.0078 8281.0723 m
-8095 8281.0723 L
-8095 8281.7813 L
-8083.0078 8281.7813 L
-8083.0078 8281.0723 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 162)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8095 8287.7598 m
-8083.6099 8287.7598 L
-8083.6099 8277.123 L
-8095 8277.123 L
-8095 8287.7598 L
n
-8094.2461 8283.8447 m
-8094.2461 8287.7598 L
-8083.6099 8287.7598 L
-8083.6099 8277.123 L
-8094.2461 8277.123 L
-8094.2461 8281.0146 L
-8094.2461 8283.8447 L
n
u
0 O
0.746094 0.675781 0.667969 0.898438 k
-8088.6245 8283.7813 m
-8088.6245 8283.1367 L
-8095 8283.1367 L
-8095 8283.7813 L
-8095 8283.8447 L
-8088.6245 8283.8447 L
-8088.6245 8283.7813 L
f
-8088.6245 8281.0078 m
-8095 8281.0078 L
-8095 8281.7178 L
-8088.6245 8281.7178 L
-8088.6245 8281.0078 L
f
0.15 1 0.9 0.1 k
-8088.6245 8282.7461 m
-8095 8282.7461 L
-8095 8283.1367 L
-8088.6245 8283.1367 L
-8088.6245 8282.7461 L
f
-8088.6245 8282.043 m
-8088.6245 8281.7178 L
-8095 8281.7178 L
-8095 8282.043 L
-8095 8282.1084 L
-8088.6245 8282.1084 L
-8088.6245 8282.043 L
f
0 1 1 0 k
-8088.6245 8282.6807 m
-8088.6245 8282.1084 L
-8095 8282.1084 L
-8095 8282.6807 L
-8095 8282.7461 L
-8088.6245 8282.7461 L
-8088.6245 8282.6807 L
f
U
-8094.2461 8287.7598 m
-8083.6099 8287.7598 L
-8083.6099 8277.123 L
-8094.2461 8277.123 L
-8094.2461 8287.7598 L
n
-8083.7241 8282.4414 m
-8091.8125 8287.1113 L
N
0 O
0.746094 0.675781 0.667969 0.898438 k
-8091.4814 8281.7197 m
-8091.4814 8278.9004 L
-8085.3535 8282.4375 L
-8091.4814 8285.9756 L
-8091.4814 8283.1367 L
-8091.8125 8283.1367 L
-8091.8125 8283.8447 L
-8091.8125 8287.1113 L
-8083.7241 8282.4414 L
-8091.8125 8277.7725 L
-8091.8125 8281.0107 L
-8091.8125 8281.7197 L
-8091.4814 8281.7197 L
f
0.15 1 0.9 0.1 k
-8091.4814 8285.9756 m
-8085.3535 8282.4375 L
-8091.4814 8278.9004 L
-8091.4814 8281.7197 L
-8091.4814 8282.1074 L
-8091.3472 8282.1074 L
-8091.2148 8281.7354 -8090.8633 8281.4668 -8090.4453 8281.4668 c
-8089.9155 8281.4668 -8089.4849 8281.8965 -8089.4849 8282.4268 c
-8089.4849 8282.957 -8089.9155 8283.3867 -8090.4453 8283.3867 c
-8090.8633 8283.3867 -8091.2148 8283.1191 -8091.3472 8282.7461 C
-8091.4814 8282.7461 L
-8091.4814 8283.1367 L
-8091.4814 8285.9756 L
f
0 1 1 0 k
-8090.4453 8283.3867 m
-8089.9155 8283.3867 -8089.4849 8282.957 -8089.4849 8282.4268 c
-8089.4849 8281.8965 -8089.9155 8281.4668 -8090.4453 8281.4668 c
-8090.8633 8281.4668 -8091.2148 8281.7354 -8091.3472 8282.1074 c
-8091.3828 8282.207 -8091.4058 8282.3135 -8091.4058 8282.4268 c
-8091.4058 8282.5391 -8091.3828 8282.6445 -8091.3472 8282.7461 c
-8091.2148 8283.1191 -8090.8633 8283.3867 -8090.4453 8283.3867 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)0 A
u
0 J 0 j 1 w 4 M []0 d0 XR
-8094.8833 8287.7148 m
-8003.0479 8287.7148 L
-8003.0479 8283.4355 L
-8094.8833 8283.4355 L
-8094.8833 8287.7148 L
n
0 O
0 0 0 1 k
-8094.6631 8285.0352 m
-8095 8285.1016 -8094.4814 8285.291 -8094.8833 8285.1484 C
-8094.8379 8285.0303 -8094.7725 8284.9414 -8094.6631 8285.0352 C
f
-8004.1675 8285.2012 m
-8005.2524 8285.9639 -8006.6816 8285.1934 -8007.8701 8285.6797 C
-8008.0098 8285.7119 -8007.8345 8285.2617 -8008.1484 8285.3623 C
-8009.3008 8285.9551 -8011.1162 8285.6016 -8012.5195 8285.1445 C
-8012.4346 8285.0264 L
-8012.7017 8284.9414 -8013.0283 8285.332 -8013.3115 8285.2773 C
-8013.3135 8285.1992 -8013.2207 8285.166 -8013.2861 8285.0586 C
-8013.3574 8285.2949 -8013.7983 8285.168 -8013.9185 8285.3438 C
-8014.0303 8285.252 -8014.0195 8285.0645 -8014.1641 8284.9609 C
-8014.3262 8285.2295 L
-8014.7769 8285.8691 -8015.4209 8285.1855 -8016.0361 8285.5156 C
-8016.0063 8285.4531 -8015.9453 8285.4043 -8015.9941 8285.3438 C
-8016.9814 8285.7324 -8018.2168 8285.6602 -8019.3208 8285.8027 C
-8019.2769 8285.708 -8019.2363 8285.5352 -8019.3008 8285.4277 C
-8019.3555 8285.7109 -8019.6963 8285.7822 -8019.9922 8285.8379 C
-8020.1255 8285.5469 -8020.4995 8286.1035 -8020.8467 8285.9434 C
-8020.8169 8285.8789 L
-8021.0732 8286.1836 -8021.1973 8285.7031 -8021.4053 8286.0684 C
-8021.5684 8285.8398 L
-8021.6807 8286.25 -8021.9395 8285.627 -8022.1514 8285.8359 C
-8022.1445 8285.9199 L
-8022.3442 8286.0195 -8022.4482 8285.8135 -8022.6338 8285.8828 C
-8022.6514 8285.8359 L
-8023.0854 8285.9434 -8023.3379 8285.7148 -8023.3271 8286.0352 C
-8023.4795 8285.7783 -8022.9063 8285.918 -8023.1455 8285.5449 C
-8024.5732 8285.875 -8026.0459 8285.8105 -8027.4834 8285.8164 C
-8027.6465 8285.6875 -8027.7505 8285.6484 -8027.7871 8285.5273 C
-8027.9307 8285.5918 -8028.3281 8285.5859 -8028.4585 8285.75 C
-8028.4102 8285.7432 -8028.5513 8285.5859 -8028.6274 8285.5703 C
-8028.8887 8285.4492 -8028.9131 8285.9219 -8029.2002 8285.7783 C
-8029.0859 8285.6934 -8029.0469 8285.5898 -8029.0854 8285.4707 C
-8029.3301 8285.7207 -8029.6577 8285.6807 -8029.9473 8285.7617 C
-8029.9023 8285.708 -8029.8325 8285.6758 -8029.8433 8285.5752 C
-8030.1602 8285.8584 -8030.4209 8285.5156 -8030.6982 8285.6943 C
-8030.5947 8285.5098 L
-8031.0415 8285.2852 -8030.7266 8285.8965 -8031.1128 8285.7637 C
-8031.02 8285.7051 -8031.0527 8285.6328 -8031.0361 8285.5576 C
-8031.3965 8285.8936 -8031.9795 8285.7822 -8032.3389 8285.8965 C
-8032.3174 8285.8711 -8032.3232 8285.8203 Y
-8032.7148 8285.8623 -8033.1245 8285.7578 -8033.5552 8285.9043 C
-8033.7119 8285.8223 -8033.5039 8285.4531 -8033.9185 8285.5215 C
-8033.9033 8285.8926 -8034.6221 8285.6738 -8034.3779 8286.0938 C
-8034.7319 8286.0332 -8035.2925 8285.8936 -8035.5283 8286.0195 C
-8035.3691 8285.8789 -8035.7007 8285.5664 -8035.4063 8285.5352 C
-8035.6289 8285.3096 L
-8035.5957 8285.1582 -8035.3999 8285.3613 -8035.4707 8285.1699 C
-8035.6182 8285.1855 -8036.0479 8285.332 -8036.1797 8285.2715 C
-8036.4531 8285.499 -8036.7041 8285.9238 -8037.1465 8285.9707 C
-8036.9385 8285.8262 -8037.2646 8285.5615 -8037.1235 8285.498 C
-8037.7407 8286.209 L
-8037.8877 8286.2266 -8037.7725 8285.916 -8037.9854 8286.0127 C
-8037.9746 8286.1113 -8038.0674 8286.1719 -8038.1318 8286.252 C
-8038.1875 8286.209 -8038.7441 8286.3438 -8038.8081 8285.9785 C
-8038.8735 8285.8359 -8038.5684 8285.9023 -8038.7314 8285.7715 C
-8039.0029 8285.7754 -8039.0151 8285.9004 -8039.2871 8285.9063 C
-8039.2925 8285.8574 L
-8039.4717 8285.8027 -8039.8213 8286.0127 -8039.6265 8286.2148 C
-8039.5015 8286.2266 -8039.6738 8285.9951 -8039.4888 8286.1016 C
-8039.6152 8286.3135 -8039.9312 8286.373 -8040.2031 8286.377 C
-8040.1104 8286.3184 -8040.1216 8286.2207 -8040.0845 8286.1172 C
-8040.4497 8286.4043 -8040.8369 8286.4951 -8041.2451 8286.6152 C
-8041.2515 8286.7891 -8041.0928 8286.2988 -8041.0327 8286.3906 C
-8041.5557 8286.1494 -8042.1128 8286.7324 -8042.5479 8286.3799 C
-8042.4766 8286.3496 -8042.5098 8286.627 -8042.5146 8286.5781 C
-8042.7666 8286.5566 -8042.7549 8286.3047 -8042.9189 8286.3975 C
-8042.9355 8286.25 -8043.1255 8286.4453 -8043.2944 8286.4902 C
-8043.3818 8286.5967 -8043.3384 8286.418 -8043.1914 8286.4023 C
-8043.4268 8286.5273 -8044.3691 8286.7539 -8044.9131 8286.5391 C
-8044.9023 8286.6367 -8045.2471 8286.8975 -8045.3721 8286.8867 C
-8045.3232 8286.6582 L
-8045.4375 8286.5215 -8045.7422 8286.6777 -8045.7632 8286.4824 C
-8046.0303 8286.7598 -8044.7344 8286.2461 -8045.0957 8286.46 C
-8045.1895 8286.2695 -8045.5991 8286.8242 -8045.5215 8286.5127 C
-8045.7725 8286.5215 -8046.0161 8286.7783 -8046.2559 8286.5645 C
-8046.1865 8286.6016 -8046.0522 8286.2471 -8046.2549 8286.2637 C
-8046.6123 8286.3047 -8046.3564 8286.373 -8046.6465 8286.4492 C
-8046.8281 8286.543 L
-8046.8398 8286.7656 -8047.1475 8286.5127 -8047.0146 8286.7617 C
-8047.0586 8286.5781 -8047.5337 8286.875 -8047.4971 8286.5059 C
-8047.4473 8286.2148 L
-8047.6016 8286.2363 -8047.7002 8286.5215 -8047.8213 8286.6494 C
-8047.8418 8286.623 -8047.8823 8286.5645 -8047.8745 8286.5176 C
-8047.8994 8286.9629 -8048.2432 8286.4805 -8048.4268 8286.8242 C
-8048.7505 8286.6699 -8049.2495 8286.8105 -8049.4023 8286.5332 C
-8049.6514 8286.668 -8049.8784 8286.8281 -8050.1621 8286.7324 C
-8050.1055 8286.6904 -8050.0283 8286.6777 -8050.0122 8286.582 C
-8050.1904 8286.4512 -8050.2344 8286.5684 -8050.3975 8286.6406 C
-8050.3608 8286.5742 -8050.7539 8286.3799 -8050.9521 8286.2227 C
-8051.1992 8286.3555 -8051.1143 8286.5957 -8051.1392 8286.7422 C
-8051.3652 8286.3027 -8051.8379 8287.0254 -8052.1211 8286.627 C
-8052.0352 8286.5664 -8051.7598 8286.4111 -8051.9658 8286.3008 C
-8052.1919 8285.8623 -8052.4219 8286.625 -8052.7861 8286.4141 C
-8052.6968 8286.7783 L
-8052.8594 8286.5527 -8053.2334 8286.9902 -8053.1963 8286.6191 C
-8053.3184 8286.75 -8053.6265 8286.498 -8053.5859 8286.8535 C
-8054.1846 8286.5527 -8055.0425 8287.0352 -8055.4102 8286.3975 C
-8055.4961 8286.457 -8055.7104 8286.3965 -8055.6665 8286.5791 C
-8055.5239 8286.7773 -8055.4673 8286.4375 -8055.4141 8286.5723 C
-8055.4912 8286.583 -8055.5078 8286.6807 -8055.5161 8286.7295 C
-8055.7021 8286.6484 -8055.8486 8286.623 -8055.6729 8286.3271 C
-8056.0869 8286.1074 -8056.1001 8286.9316 -8056.6274 8286.793 C
-8056.6035 8286.6455 -8056.6436 8286.5898 -8056.7979 8286.6133 C
-8057.0903 8286.8652 L
-8057.4312 8286.8066 -8057.2842 8286.5303 -8057.2925 8286.2813 C
-8057.4746 8286.3242 -8057.6973 8286.3125 -8057.7803 8286.498 C
-8058.0015 8286.1855 L
-8057.8398 8286.4111 -8058.1514 8286.3359 -8058.2368 8286.3965 C
-8058.1514 8286.3359 L
-8058.1846 8286.2295 -8058.3955 8286.2949 -8058.5024 8286.3262 C
-8058.4766 8286.4805 -8058.2617 8286.543 -8058.1445 8286.5879 C
-8058.2373 8286.6973 -8058.3823 8286.6719 -8058.5059 8286.8008 C
-8058.4648 8286.5566 -8058.8027 8286.627 -8058.9473 8286.6016 C
-8059.1133 8286.5488 -8059.1348 8286.8203 -8059.1831 8286.8125 C
-8059.1875 8286.6855 -8059.4541 8286.791 -8059.3247 8286.6133 C
-8059.2681 8286.5723 -8059.1953 8286.7363 -8059.1016 8286.625 C
-8059.2109 8286.5303 -8059.1982 8286.3096 -8059.4258 8286.4707 C
-8059.5967 8286.5918 -8059.3818 8286.9531 -8059.7061 8286.7988 C
-8059.6211 8286.7383 -8059.6055 8286.6406 -8059.5391 8286.5527 C
-8059.8433 8286.4258 L
-8059.8564 8286.6484 L
-8059.8975 8286.5918 -8059.8691 8286.5723 -8059.8877 8286.543 C
-8059.9785 8286.7773 -8060.3521 8286.6152 -8060.4209 8286.8789 C
-8060.5742 8286.9023 -8060.7441 8286.7246 -8060.8906 8286.6992 C
-8060.8623 8286.6797 L
-8061.0415 8286.5488 -8061.2793 8286.6348 -8061.4297 8286.7852 C
-8061.4219 8286.7363 L
-8061.5195 8286.7188 -8061.7505 8286.7539 -8061.8735 8286.8848 C
-8062.1201 8286.7168 -8061.9561 8286.0439 -8062.2295 8286.3242 C
-8062.48 8286.332 -8062.6221 8286.7324 -8062.5215 8286.875 C
-8062.9717 8286.7246 -8063.4834 8287.0879 -8063.9009 8286.7422 C
-8063.9658 8286.832 -8063.9248 8286.8887 -8064.0586 8286.9414 C
-8064.7197 8286.8535 -8065.4551 8287.2051 -8065.9814 8286.7676 C
-8065.79 8286.6738 -8065.9688 8286.5449 -8065.9727 8286.418 C
-8066.1309 8286.6172 -8066.1631 8286.2109 -8066.2197 8286.5527 C
-8066.2041 8286.7539 -8066.2197 8286.8516 -8066.0337 8286.9326 C
-8066.4282 8287.041 -8067.0283 8287.041 -8067.2471 8286.8535 C
-8067.1377 8286.9463 -8067.2227 8287.0078 -8067.3086 8287.0684 C
-8067.2803 8286.7471 -8067.5713 8286.6992 -8067.7915 8286.8125 C
-8067.8223 8287.0078 L
-8067.9658 8286.8066 L
-8068.0503 8286.8691 -8068.0591 8287.2168 -8068.2773 8287.0293 C
-8068.2891 8286.9531 -8068.3018 8286.876 -8068.3418 8286.8203 C
-8068.5693 8286.9805 -8068.8906 8287.252 -8069.1377 8287.0859 C
-8069.3398 8286.8008 L
-8069.4453 8286.832 -8069.6235 8287.0039 -8069.4375 8287.0859 C
-8069.8594 8286.9141 -8070.1309 8286.8926 -8070.2646 8286.6455 C
-8070.9912 8287.2471 -8072.0459 8287.2715 -8072.8906 8287.2285 C
-8072.8652 8287.082 L
-8073.0923 8286.9453 -8072.9834 8287.3379 -8073.1416 8287.2363 C
-8073.0684 8287.0967 -8073.3145 8286.9326 -8073.1362 8286.7617 C
-8073.4609 8286.6074 -8073.5547 8287.0156 -8073.7656 8287.082 C
-8073.7979 8287.2744 -8073.5957 8286.959 -8073.6367 8287.2031 C
-8073.6729 8287.2715 -8074.0859 8287.0527 -8074.1362 8287.3438 C
-8074.2178 8287.2295 -8074.1543 8287.0156 -8074.1104 8286.8975 C
-8074.3086 8287.0391 L
-8074.5513 8286.6992 -8073.7559 8286.4316 -8074.0107 8286.0127 C
-8074.1934 8286.0586 L
-8074.3682 8285.7539 -8073.71 8285.7148 -8074.1689 8285.6104 C
-8074.3682 8285.7539 -8074.5381 8286.1758 -8074.3608 8286.3047 C
-8074.7754 8286.3848 -8074.5527 8286.998 -8074.9985 8286.9736 C
-8075.1201 8286.8027 -8074.6416 8286.9326 -8074.7275 8286.6934 C
-8074.9375 8286.459 -8075.1484 8286.8242 -8075.3354 8286.7422 C
-8075.1279 8286.8516 -8075.3032 8287.1455 -8075.4375 8287.1992 C
-8075.6641 8287.0615 -8075.29 8286.9238 -8075.6113 8286.8936 C
-8075.6641 8287.0615 -8075.9595 8287.1875 -8075.7041 8287.3047 C
-8075.8203 8287.6855 -8076.0381 8287.1992 -8076.2129 8287.4941 C
-8076.3174 8287.2266 -8075.8823 8286.875 -8076.2354 8286.7412 C
-8076.1792 8286.999 -8076.6704 8287.0918 -8076.4839 8287.4746 C
-8076.6221 8287.4004 -8076.6367 8287.1973 -8076.5361 8287.0391 C
-8076.7334 8286.8799 -8077.0151 8287.5098 -8077.0801 8286.998 C
-8077.1479 8287.2617 L
-8077.21 8287.1758 -8077.2983 8287.1113 -8077.3994 8286.9688 C
-8077.5732 8286.9639 -8077.96 8287.3262 -8077.9443 8286.9277 C
-8078 8286.9688 -8078.3975 8286.9512 -8078.2441 8287.2266 C
-8077.9971 8287.3945 -8077.96 8287.0254 -8077.8223 8287.3975 C
-8077.9971 8287.0938 -8078.1787 8287.4375 -8078.3213 8287.5391 C
-8078.3447 8287.3848 L
-8078.4297 8287.4453 -8078.6255 8287.4111 -8078.6787 8287.5781 C
-8078.6133 8287.4902 -8078.6475 8287.3848 -8078.7148 8287.3477 C
-8078.8042 8287.582 L
-8079.1494 8287.6992 -8078.8857 8287.1699 -8079.2217 8287.2383 C
-8078.9663 8287.0566 L
-8079.0225 8287.0957 -8079.1367 8286.876 -8079.2979 8286.9492 C
-8079.3604 8287.1631 -8079.4775 8287.4199 -8079.5313 8287.5859 C
-8079.7207 8287.6797 -8079.6162 8287.3447 -8079.8027 8287.5645 C
-8079.5586 8287.3066 L
-8079.5215 8287.2363 -8079.7231 8286.9531 -8079.9761 8286.959 C
-8080.1377 8287.0332 -8080.3887 8287.3418 -8080.1338 8287.459 C
-8080.2607 8287.4629 -8080.4385 8287.332 -8080.3379 8287.1758 C
-8080.6255 8287.25 -8080.2998 8287.4063 -8080.5479 8287.5391 C
-8080.6494 8287.3965 -8080.9658 8287.1934 -8081.1563 8286.9863 C
-8080.8975 8286.6279 L
-8081.0693 8286.625 L
-8080.8467 8286.3379 -8081.1826 8286.4063 -8081.0566 8286.1035 C
-8081.1743 8286.0566 -8081.3169 8286.1592 -8081.4307 8286.2383 C
-8081.0864 8286.7227 -8081.8159 8286.9004 -8081.7158 8287.3418 C
-8082.1875 8287.4629 -8082.0107 8286.2676 -8082.5024 8286.959 C
-8082.4219 8287.0742 -8082.6533 8287.4102 -8082.3564 8287.2822 C
-8082.6494 8287.2344 -8082.5557 8287.7256 -8082.9014 8287.543 C
-8082.6455 8287.3613 -8083.1763 8287.0957 -8082.8066 8286.832 C
-8082.8311 8286.9785 -8082.6001 8286.9434 -8082.5435 8286.9023 C
-8082.6641 8286.7324 -8082.5186 8286.457 -8082.8184 8286.457 C
-8083.0015 8286.499 -8083.2524 8286.5078 -8083.2158 8286.7383 C
-8083.2085 8286.9912 -8082.9365 8286.7109 -8083.0537 8286.9668 C
-8083.4185 8287.0547 -8083.4795 8286.6699 -8083.6304 8287.1191 C
-8083.3999 8287.083 -8083.3423 8287.3438 -8083.3467 8287.5176 C
-8083.6143 8287.623 L
-8083.5625 8287.4551 L
-8083.9922 8287.334 -8083.6895 8287.7598 -8084.1055 8287.7148 C
-8084.3008 8287.3828 L
-8084.2017 8287.0967 -8083.6953 8287.5098 -8083.7695 8287.0439 C
-8084.04 8287.0254 -8084.1299 8287.2617 -8084.3848 8287.1416 C
-8084.3281 8287.1016 -8084.2505 8287.0898 -8084.1943 8287.0488 C
-8084.2915 8287.0332 -8084.3877 8286.416 -8084.7734 8286.7773 C
-8084.9727 8286.918 -8084.8262 8286.9434 -8084.8311 8287.1172 C
-8085.2656 8287.1699 -8085.3955 8287.3477 -8085.6753 8287.375 C
-8085.6177 8287.0352 -8086.1699 8287.3418 -8085.8608 8286.9941 C
-8085.7188 8287.1934 -8085.0903 8287.1738 -8084.9365 8286.8496 C
-8085.0947 8286.4463 -8084.5952 8286.9063 -8084.5024 8286.498 C
-8084.8506 8286.4883 -8084.8335 8286.0918 -8084.8896 8285.832 C
-8084.9863 8285.8135 -8085.0801 8285.9238 -8085.1377 8285.9639 C
-8085.1787 8286.209 -8085.0522 8286.2051 -8085.0449 8286.457 C
-8085.4336 8286.3906 -8085.8081 8286.5273 -8086.0225 8286.7656 C
-8086.1523 8286.6445 -8086.1113 8286.4004 -8085.9575 8286.377 C
-8086.4199 8286.4492 -8086.9141 8286.416 -8087.3535 8286.3418 C
-8087.0693 8286.7412 -8087.8433 8286.4355 -8087.6494 8286.7676 C
-8087.4141 8286.8574 -8087.2119 8287.1416 -8087.3418 8287.3203 C
-8087.4888 8287.2949 -8087.3369 8287.1455 -8087.3984 8287.0605 C
-8087.5859 8287.2783 -8087.6895 8286.7109 -8087.8735 8287.0547 C
-8087.4512 8286.9258 -8087.7915 8286.5684 -8087.7139 8286.2559 C
-8088.0186 8286.4316 -8087.7007 8286.0332 -8088.0024 8286.0332 C
-8088.3057 8286.207 -8088.6787 8286.3438 -8089.0161 8286.4111 C
-8089.4399 8286.1152 -8090.0898 8286.4063 -8090.4683 8286.418 C
-8090.6665 8286.2598 -8090.5322 8285.9063 -8090.7471 8285.8447 C
-8090.9995 8285.8516 -8090.5601 8286.2266 -8090.9336 8286.0645 C
-8090.8975 8285.9941 L
-8091.0107 8286.0762 -8091.5825 8285.7539 -8091.6929 8286.2617 C
-8091.5776 8285.8789 L
-8091.6475 8285.8438 -8091.7119 8285.9316 -8091.7695 8285.9727 C
-8091.7725 8285.8477 -8091.8535 8285.7344 -8091.7402 8285.6523 C
-8091.9707 8285.3887 -8092.2241 8285.6943 -8092.4746 8285.7051 C
-8092.3135 8285.9316 L
-8092.7422 8286.1094 -8093.0293 8285.8848 -8093.4443 8285.9639 C
-8093.4316 8285.7422 L
-8093.6787 8285.875 L
-8093.6182 8285.6602 -8093.8447 8285.5215 -8093.9751 8285.7012 C
-8093.3335 8285.1582 L
-8093.1553 8285.2891 -8093.5283 8285.4258 -8093.4165 8285.6445 C
-8093.3213 8285.8359 -8092.9375 8285.7754 -8092.8755 8285.5615 C
-8093.0225 8285.5371 -8093.0293 8285.5859 -8093.1436 8285.666 C
-8093.1919 8285.3574 -8092.9688 8285.3691 -8092.8584 8285.1631 C
-8092.9355 8285.1758 -8093.0449 8285.082 -8093.0615 8285.1797 C
-8092.9102 8285.0293 -8092.7578 8285.0059 -8092.5059 8284.998 C
-8092.6763 8285.1191 -8092.4131 8285.1895 -8092.4775 8285.2773 C
-8092.4575 8285.0059 -8092.2168 8284.9219 -8091.9053 8284.998 C
-8091.6831 8285.3125 -8091.3208 8284.7959 -8090.96 8284.8828 C
-8091.1064 8285.1582 -8091.2935 8285.3789 -8091.5127 8285.4902 C
-8091.2861 8285.6279 -8091.2607 8285.4824 -8091.0337 8285.6211 C
-8090.9238 8285.416 -8090.8457 8285.1016 -8090.5503 8284.9766 C
-8090.5342 8285.1797 L
-8090.2666 8285.0762 -8090.2666 8284.7754 -8089.9258 8284.832 C
-8089.3418 8284.9316 -8088.7407 8284.9316 -8088.2949 8284.957 C
-8088.2783 8285.1592 L
-8088.0303 8284.7256 -8087.4521 8284.999 -8087.1182 8284.8066 C
-8086.5503 8285.002 -8085.8848 8284.6133 -8085.5938 8284.9629 C
-8084.5913 8284.8066 -8083.7148 8284.6543 -8082.6768 8284.7285 C
-8082.8516 8285.0234 L
-8082.6655 8284.8066 -8082.7305 8285.1934 -8082.5479 8285.1494 C
-8082.7578 8284.9141 -8082.2949 8284.8438 -8082.1665 8284.6631 C
-8081.7041 8284.8926 -8081.1104 8284.6426 -8080.7007 8284.4355 C
-8080.6846 8284.6387 L
-8080.2705 8284.2578 -8079.7759 8284.5918 -8079.2598 8284.6543 C
-8079.2007 8284.7383 -8079.1074 8284.9287 -8078.9536 8284.9063 C
-8078.6738 8284.5781 -8078.5273 8284.6016 -8078.1167 8284.3965 C
-8077.8169 8284.3965 -8077.3301 8284.4775 -8077.0254 8284.6055 C
-8075.8975 8284.1445 -8074.7456 8284.4395 -8073.5732 8284.1621 C
-8073.4888 8284.4004 L
-8072.3521 8283.8906 -8070.9541 8284.3535 -8069.9839 8284.0918 C
-8070.0776 8284.499 L
-8069.7734 8284.625 -8069.3843 8284.3926 -8069.4619 8284.1035 C
-8069.1567 8284.2285 -8068.7007 8283.9063 -8068.5068 8284.2412 C
-8068.1953 8284.3164 -8068.1255 8284.0527 -8067.8662 8283.998 C
-8067.2422 8284.1523 -8067.0107 8284.1172 -8066.4224 8284.041 C
-8066.5684 8284.0156 L
-8066.6328 8284.1055 -8066.6387 8284.2783 -8066.4922 8284.3047 C
-8066.2725 8284.1914 -8065.6846 8284.4141 -8065.9033 8283.9277 C
-8065.2754 8284.209 -8064.4385 8283.6992 -8063.8271 8284.0781 C
-8063.8789 8283.9453 -8063.7246 8283.9199 -8063.6602 8283.8301 C
-8063.1089 8283.8242 -8062.5293 8284.0957 -8062.0898 8283.8691 C
-8062.0024 8283.9355 -8062.2295 8284.0957 -8062.0049 8284.1094 C
-8061.8721 8284.0586 -8062.0024 8283.9355 -8061.8384 8283.8613 C
-8060.9453 8283.6133 -8060.0303 8284.1172 -8059.2188 8284.0527 C
-8057.7754 8283.7959 -8056.2695 8283.9258 -8054.8867 8283.8828 C
-8054.9023 8283.9805 L
-8054.4395 8283.6074 -8053.8159 8284.3623 -8053.4463 8283.8008 C
-8053.3369 8283.8936 -8053.0283 8283.8447 -8053.1094 8284.0332 C
-8052.7407 8283.7695 -8052.0771 8284.2813 -8051.5439 8283.9463 C
-8051.5928 8283.9375 -8051.6211 8283.957 -8051.6777 8283.999 C
-8051.1392 8284.2148 -8050.6641 8283.9199 -8050.0957 8284.1152 C
-8050.1533 8284.1572 -8050.2583 8284.1875 -8050.2754 8284.2852 C
-8050.0557 8284.4727 -8049.7549 8283.873 -8049.6348 8284.3438 C
-8049.5088 8284.3398 -8049.5449 8284.1074 -8049.6221 8284.1211 C
-8048.3779 8284.3047 -8047.0498 8284.0039 -8045.7549 8283.8965 C
-8044.8271 8284.1777 -8045.6982 8284.6895 -8044.9663 8284.3379 C
-8044.9063 8284.4287 -8044.9229 8284.1582 -8044.9131 8284.2559 C
-8044.6299 8284.124 -8044.4717 8284.7813 -8044.2754 8284.5352 C
-8044.3564 8284.2461 -8044.1445 8284.373 -8044.1387 8284.1973 C
-8043.5713 8284.3848 -8043.4575 8284.6455 -8043.0098 8284.4258 C
-8043.0435 8284.5781 L
-8042.5186 8284.1484 -8041.9102 8284.3789 -8041.4673 8283.8828 C
-8038.5728 8283.793 -8035.7983 8283.5176 -8032.9761 8283.46 C
-8030.1865 8283.5547 -8027.4551 8283.332 -8024.6221 8283.5957 C
-8023.9585 8283.9951 -8023.9087 8283.9844 -8023.1797 8283.8223 C
-8023.2095 8283.8867 -8023.2549 8283.9023 -8023.2061 8283.9629 C
-8023.1699 8283.6348 -8022.6929 8283.9316 -8022.6235 8283.6191 C
-8021.5762 8283.6797 -8020.6113 8283.5898 -8019.5337 8283.5879 C
-8019.7041 8283.623 -8019.7896 8283.8906 -8019.5869 8283.8691 C
-8019.3755 8283.6602 L
-8019.3408 8283.752 L
-8019.2021 8283.7031 -8019.0513 8283.541 -8019.1943 8283.4355 C
-8016.4873 8283.1523 -8013.8242 8283.8105 -8011.1729 8283.7295 C
-8010.5435 8283.8662 -8009.6475 8283.7412 -8008.9629 8283.6738 C
-8006.9355 8284.1113 -8005.1079 8284.4639 -8003.0479 8284.1582 C
-8003.3169 8285.0059 -8004.1675 8285.2012 V
f
-8094.2578 8285.002 m
-8094.1855 8285.166 -8093.9497 8285.2559 -8094.1377 8285.4746 C
-8094.1611 8285.3203 -8094.2822 8285.1484 -8094.2578 8285.002 C
f
-8087.9619 8286.6895 m
-8087.9536 8286.6406 -8087.8721 8286.7559 -8087.8521 8286.7822 C
-8087.9297 8286.7949 -8088.0024 8286.9326 -8088.0645 8286.8477 C
-8087.9854 8286.8359 -8087.9976 8286.7578 -8087.9619 8286.6895 C
f
-8086.3521 8286.7871 m
-8086.3765 8286.9326 -8086.7207 8287.0488 -8086.9238 8287.0664 C
-8086.3521 8286.7871 L
f
-8084.8521 8287.3887 m
-8084.7227 8287.5117 -8084.7583 8287.5791 -8084.9326 8287.5752 C
-8084.9453 8287.498 -8084.8877 8287.459 -8084.8521 8287.3887 C
f
-8084.7456 8287.0566 m
-8084.6211 8287.0527 -8084.5591 8287.1387 -8084.4985 8287.2227 C
-8084.5029 8287.0967 -8084.7871 8287.3008 -8084.7456 8287.0566 C
f
-8081.4893 8287.4805 m
-8081.4111 8287.4688 -8081.2417 8287.3477 -8081.1689 8287.5098 C
-8081.2505 8287.3965 -8081.5498 8287.6943 -8081.4893 8287.4805 C
f
-8079.9761 8287.2598 m
-8079.9272 8287.2695 -8079.9072 8287.2959 -8079.8506 8287.2559 C
-8079.7607 8287.3223 -8079.8555 8287.4287 -8079.9312 8287.4424 C
-8079.9761 8287.2598 L
f
-8052.4287 8286.6738 m
-8052.5923 8286.7461 L
-8052.5684 8286.6016 L
-8052.4287 8286.6738 L
f
-8040.3574 8286.666 m
-8040.1943 8286.5742 -8040.2441 8286.8027 -8040.2168 8286.8242 C
-8040.3643 8286.8398 -8040.1621 8286.6445 -8040.3574 8286.666 C
f
-8033.8486 8285.9375 m
-8033.8984 8285.9414 L
-8033.8818 8285.6426 L
-8033.8486 8285.9375 L
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 55)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8068.9727 8287.7598 m
-8068.9727 8261.7314 L
-8095 8261.7314 L
-8095 8287.7598 L
-8068.9727 8287.7598 L
n
0 Ap
0 R
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8095 8270.4063 m
-8068.9727 8270.4063 l
S
0.64 0.650477 0.701045 0.510735 K
-8095 8279.084 m
-8068.9727 8279.084 l
S
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8095 8274.7451 m
-8068.9727 8274.7451 l
S
0 O
0.597742 0.537865 0.64184 0.350469 k
1 w-8073.5742 8274.7715 m
-8073.3442 8274.5 -8073.6914 8274.2139 -8074 8274.0029 c
-8074.1118 8273.9258 -8074.5215 8274.1387 -8074.7466 8273.9727 c
-8075.0439 8273.7549 -8075.1826 8273.668 -8075.4824 8273.6738 c
-8075.6455 8273.6777 -8076.0435 8273.8076 -8076.1895 8273.8379 c
-8076.5679 8273.9141 -8076.8022 8274.1113 -8077.3672 8274.0146 c
-8077.7344 8273.9512 -8077.8286 8273.8604 -8077.9233 8273.9082 c
-8078.1118 8274.0498 -8078.2202 8274.2734 -8078.4258 8274.3223 c
-8078.9575 8274.4492 -8079.3535 8274.4932 -8079.8818 8274.4824 c
-8080.3047 8274.4727 -8081.4185 8274.541 -8082.2866 8274.4414 c
-8082.6226 8274.4014 -8082.6025 8273.9766 -8082.7695 8273.9727 c
-8082.8618 8273.9707 -8082.7646 8274.2861 -8082.8306 8274.3066 c
-8083.1694 8274.4131 -8083.4702 8273.2627 -8083.6943 8273.332 c
-8083.8047 8273.3672 -8083.5562 8273.9131 -8083.6729 8273.9414 c
-8083.8975 8273.9971 -8084.2178 8272.9785 -8084.4321 8273.041 c
-8084.5635 8273.0781 -8084.2886 8273.498 -8084.4375 8273.5664 c
-8084.6655 8273.6709 -8084.9087 8272.7949 -8085.1064 8272.8936 C
-8085.1543 8272.9414 -8084.7295 8273.6973 -8085.1685 8273.6387 c
-8085.2871 8273.6211 -8085.5054 8273.0732 -8085.5801 8273.0996 c
-8085.6919 8273.1396 -8085.3535 8273.5615 -8085.4897 8273.6875 C
-8085.7681 8273.9141 -8086.3711 8272.9229 -8086.4575 8272.9941 c
-8086.5791 8273.0957 -8086.1279 8273.8574 -8086.2695 8273.9258 C
-8086.4497 8274.1895 -8087.0142 8273.3125 -8087.0889 8273.3613 c
-8087.1777 8273.4199 -8086.9058 8273.7979 -8086.8799 8273.9932 c
-8086.8545 8274.1875 -8086.9966 8274.3213 -8087.2144 8274.2695 c
-8087.4736 8274.207 -8087.8696 8273.4014 -8087.9727 8273.4951 C
-8088.0791 8273.5508 -8087.8682 8273.8379 -8087.7954 8274.0723 c
-8087.7583 8274.1875 -8087.8882 8274.3613 -8088.0298 8274.3613 c
-8088.3135 8274.4092 -8088.6255 8273.7578 -8088.7065 8273.8623 c
-8088.7524 8273.9219 -8088.5898 8274.25 -8088.7295 8274.3477 c
-8088.8994 8274.4658 -8089.3115 8273.998 -8089.4521 8274.0527 C
-8089.5361 8274.1016 -8089.4126 8274.3564 -8089.4927 8274.4131 c
-8089.7295 8274.5791 -8090.0039 8274.1807 -8090.0513 8274.2285 C
-8090.1167 8274.251 -8090.1201 8274.2959 -8090.2793 8274.4004 c
-8090.4736 8274.5273 -8090.5254 8274.6084 -8090.5425 8274.7246 c
-8090.5654 8274.8428 -8090.3135 8275.1348 -8090.1655 8275.1094 c
-8089.8223 8275.0498 -8089.8662 8275.6094 -8089.6328 8275.4756 c
-8089.5679 8275.4395 -8089.6592 8275.0186 -8089.4199 8275.0254 c
-8089.0488 8275.0381 -8088.9858 8275.5811 -8088.7817 8275.5703 c
-8088.6406 8275.5635 -8088.8521 8274.9434 -8088.6328 8275.0205 c
-8088.4751 8275.0762 -8088.0063 8276.0615 -8087.9795 8275.9697 c
-8087.8975 8275.7021 -8088.0703 8275.1582 -8087.9409 8275.168 c
-8087.7568 8275.1826 -8087.5078 8276.0771 -8087.2544 8276.1973 c
-8087.1826 8276.2324 -8087.3774 8275.3604 -8087.1958 8275.3564 C
-8087.0898 8275.4063 -8086.7578 8276.209 -8086.6274 8276.2578 C
-8086.5591 8276.2422 -8086.5879 8275.8848 -8086.5176 8275.8643 c
-8086.4688 8275.8496 -8086.2817 8276.3252 -8086.21 8276.2832 c
-8086.1055 8276.2227 -8086.2471 8275.752 -8086.0889 8275.6826 c
-8085.9175 8275.6084 -8085.4878 8276.6523 -8085.3486 8276.5576 c
-8085.2769 8276.5098 -8085.3574 8275.9697 -8085.21 8276.0059 c
-8085.0718 8276.0381 -8084.9414 8276.374 -8084.8081 8276.4023 c
-8084.7295 8276.418 -8084.7935 8275.9512 -8084.7495 8275.9336 c
-8084.5889 8275.875 -8084.2329 8276.4316 -8084.0688 8276.2832 c
-8083.8584 8276.0947 -8083.9395 8275.7295 -8083.8345 8275.7422 c
-8083.6274 8275.7656 -8083.4912 8276.0029 -8083.4146 8275.9434 c
-8083.2642 8275.8281 -8083.3281 8275.5391 -8083.0527 8275.4521 c
-8082.8975 8275.4023 -8082.7935 8275.6943 -8082.7495 8275.6904 c
-8082.6738 8275.6875 -8082.6782 8275.5898 -8082.6665 8275.4844 c
-8082.6328 8275.2207 -8082.6064 8275.1592 -8082.4878 8275.1367 c
-8082.0854 8275.1133 -8081.5625 8275.0439 -8081.1807 8275.0352 c
-8080.6274 8275.0205 -8079.2607 8274.9971 -8079.1182 8274.9971 c
-8079 8274.9727 -8078.7432 8275.1543 -8078.6689 8275.2207 c
-8078.4678 8275.4053 -8078.2998 8275.6191 -8077.9858 8275.8799 c
-8077.8906 8275.9609 -8077.8081 8275.9404 -8077.7378 8275.916 c
-8077.5249 8275.8447 -8077.4585 8275.793 -8077.2202 8275.7617 c
-8076.9175 8275.7188 -8076.4272 8275.8086 -8076.1245 8275.9023 c
-8075.6035 8276.0615 -8075.5264 8276.084 -8075.0977 8276.0352 c
-8074.6992 8275.9893 -8074.0586 8275.918 -8074.0479 8275.5703 c
-8074.0415 8275.3555 -8073.9414 8275.2031 -8073.5742 8274.7715 c
f
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 56)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8068.9722 8287.7598 m
-8068.9722 8261.7324 L
-8095 8261.7324 L
-8095 8287.7598 L
-8068.9722 8287.7598 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8077.6455 8274.749 m
-8068.9736 8274.749 l
S
-8081.9839 8287.7598 m
-8081.9839 8279.084 l
S
0.7084 0.636438 0.515526 0.381872 K
1.125 w-8077.7202 8270.4102 m
-8068.9727 8270.4102 l
S
-8086.3232 8287.7588 m
-8086.3232 8278.4053 l
S
0.64 0.650477 0.701045 0.510735 K
-8077.6504 8287.7588 m
-8077.6504 8285.3467 l
-8074.9937 8285.123 -8073.3096 8283.4199 v
-8071.6064 8281.6934 -8071.3774 8279.0879 y
-8068.9727 8279.0879 l
S
*u
1 D
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8085.8418 8271.9453 m
-8085.8418 8272.0098 -8085.8218 8272.0508 -8085.7783 8272.0508 c
-8085.6943 8272.0508 -8085.4634 8271.7139 -8085.3994 8271.7139 c
-8085.3154 8271.7139 -8085.2729 8271.7559 -8085.2729 8271.8613 c
-8085.2729 8271.9453 -8085.5264 8272.8525 y
-8085.5264 8272.8936 -8085.5264 8272.8936 -8085.5049 8272.8936 c
-8085.4414 8272.8936 -8085.0615 8272.3467 -8084.9351 8272.3467 c
-8084.9146 8272.3467 -8084.8936 8272.3672 -8084.8936 8272.3887 c
-8085.1675 8273.2949 -8085.1675 8273.4854 v
-8085.1675 8273.5488 -8085.1675 8273.5703 -8085.1465 8273.5703 c
-8085.1055 8273.5703 -8084.6826 8273 -8084.5562 8273 c
-8084.5352 8273 -8084.5137 8273.0205 -8084.5137 8273.042 c
-8084.5137 8273.1055 -8084.7666 8273.8438 -8084.7666 8274.0117 c
-8084.7666 8274.0547 -8084.7666 8274.0547 -8084.7446 8274.0547 c
-8084.6826 8274.0547 -8084.4722 8273.8438 -8084.4297 8273.8438 c
-8084.4082 8273.8438 -8084.3882 8273.8652 -8084.3882 8273.8857 c
-8084.3882 8273.9063 -8084.4927 8274.2656 -8084.4927 8274.3496 c
-8084.4927 8274.3711 -8084.4927 8274.3711 -8084.4722 8274.3711 c
-8084.4297 8274.3711 -8084.0918 8274.0117 -8084.0078 8274.0117 c
-8083.9658 8274.0117 -8083.9233 8274.0547 -8083.9233 8274.1387 c
-8083.9233 8274.2871 -8084.1138 8275.0039 -8084.1138 8275.0459 c
-8084.1138 8275.1299 -8084.0918 8275.1719 -8084.0498 8275.1719 c
-8083.9658 8275.1719 -8083.7119 8274.8555 -8083.6494 8274.8555 c
-8083.5854 8274.8555 -8083.5439 8274.876 -8083.5439 8274.9404 c
-8083.5854 8275.3613 L
-8083.5854 8275.4258 -8083.5854 8275.4453 -8083.5654 8275.4453 c
-8083.5225 8275.4453 -8083.2915 8275.1514 -8083.2065 8275.1514 c
-8083.1006 8275.1514 -8083.1006 8275.6367 -8083.1006 8275.6992 c
-8083.1006 8275.8047 -8083.0166 8275.8887 -8082.8896 8275.8887 c
-8082.8057 8275.8887 -8082.4678 8275.6572 -8082.4473 8275.6572 c
-8082.3623 8275.6572 -8082.3198 8276.0996 -8082.2568 8276.0996 c
-8082.1943 8276.0996 -8081.9199 8275.9727 -8081.8564 8275.9727 c
-8081.6455 8275.9727 -8081.6035 8276.0586 -8081.6035 8276.2266 c
-8081.6255 8276.374 L
-8081.6255 8276.416 -8081.6035 8276.416 -8081.5835 8276.416 c
-8081.4985 8276.416 -8081.2241 8276.1416 -8081.1392 8276.1416 c
-8080.9287 8276.1416 -8078.8198 8278.209 -8078.5454 8278.4824 c
-8078.3984 8278.6504 -8078.3984 8278.9463 -8078.3984 8279.0732 c
-8078.3984 8279.9375 -8078.3984 8280.0215 -8078.2295 8280.1055 c
-8077.5977 8280.3594 -8077.5127 8280.5068 -8076.7334 8281.793 c
-8076.6479 8281.9404 -8075.7407 8282.5527 -8075.5942 8282.5527 c
-8075.4878 8282.5527 -8075.1094 8282.2988 -8075.0239 8282.2988 c
-8074.9194 8282.2988 -8074.8135 8282.3623 -8074.8135 8282.5303 c
-8074.8135 8282.9736 -8075.3408 8283.4805 -8075.9312 8283.4805 c
-8076.7534 8283.4805 -8077.0913 8282.7832 -8077.1338 8282.3848 c
-8077.1543 8282.2363 -8077.2393 8282.1514 -8077.3447 8282.1514 c
-8077.3862 8282.1514 -8077.4287 8282.1719 -8077.4702 8282.2363 c
-8077.9561 8283.0371 -8078.9473 8283.4805 -8079.7065 8283.4805 c
-8080.7393 8283.4805 -8081.8774 8282.8477 -8082.3418 8282.5742 c
-8082.7842 8282.3213 -8083.4814 8282.1514 -8083.8809 8282.1514 c
-8084.3242 8282.1514 -8084.3662 8282.2988 -8084.3662 8282.5527 c
-8084.3662 8282.7002 -8083.9023 8283.1416 -8083.9023 8283.2695 c
-8083.9023 8283.3955 -8084.0498 8283.4805 -8084.4082 8283.4805 c
-8084.8936 8283.4805 -8085.5679 8282.7627 -8085.5679 8281.9834 c
-8085.5679 8281.3711 -8084.7666 8280.8447 -8084.3022 8280.8447 c
-8083.3755 8280.8447 -8083.0942 8281.2031 -8082.5264 8281.667 c
-8082.4414 8281.7295 -8082.3774 8281.752 -8082.3359 8281.752 c
-8082.1895 8281.752 -8082.1895 8280.6543 -8082.1895 8280.5293 c
-8082.1895 8280.3799 -8082.2729 8280.3174 -8082.3774 8280.3174 c
-8084.7822 8280.3174 -8089.6592 8279.0938 -8091.3672 8272.9375 c
-8091.4297 8272.7256 -8091.5361 8272.6211 -8091.6406 8272.6211 c
-8091.7881 8272.6211 -8092.7793 8273.4639 -8092.7793 8275.0459 c
-8092.7793 8276.8799 -8091.5767 8277.8496 -8090.9873 8277.8496 c
-8090.8398 8277.8496 -8090.6494 8277.8291 -8090.6494 8277.6807 c
-8090.6494 8277.6182 -8090.6929 8277.5547 -8090.7759 8277.4492 c
-8091.1143 8277.1133 -8091.3672 8276.4795 -8091.3672 8276.1631 c
-8091.3672 8275.9512 -8091.2607 8275.7832 -8091.1143 8275.7832 c
-8090.9033 8275.7832 -8090.5654 8276.7324 -8090.46 8276.8799 c
-8090.3335 8277.0908 -8089.9546 8277.4707 -8089.2378 8277.998 c
-8088.4995 8278.5234 -8087.0654 8279.832 -8087.0654 8281.0967 c
-8087.0654 8282.4688 -8088.1191 8283.375 -8088.9209 8283.375 c
-8089.7007 8283.375 -8090.6714 8282.8477 -8091.0713 8282.3623 c
-8091.7041 8281.625 -8092.3154 8281.0547 -8092.8218 8281.0547 c
-8093.1592 8281.0547 -8093.3066 8281.2656 -8093.3066 8281.4766 c
-8093.3066 8281.8135 -8093.0537 8282.0459 -8092.5479 8282.0879 c
-8091.9575 8282.1309 -8091.8936 8282.5527 -8091.8936 8282.8887 c
-8091.8936 8283.1631 -8092.4209 8283.4805 -8092.8433 8283.4805 c
-8093.4751 8283.4805 -8094.2974 8282.7832 -8094.2974 8280.9502 c
-8094.2974 8279.4521 -8093.0537 8278.9893 -8092.5679 8278.9893 c
-8092.1265 8278.9893 -8091.4722 8279.0732 -8091.0928 8279.4102 c
-8089.8066 8280.6133 -8089.1318 8280.8223 -8088.5835 8280.8223 c
-8088.3721 8280.8223 -8088.2881 8280.8223 -8088.2881 8280.9707 c
-8088.2881 8281.2871 -8089.0474 8281.4766 -8089.1318 8281.498 c
-8089.3423 8281.5605 -8089.5103 8281.793 -8089.5103 8282.0039 c
-8089.5103 8282.4893 -8089.2378 8282.5098 -8088.8774 8282.5098 c
-8088.5215 8282.5098 -8087.8042 8282.1514 -8087.8042 8280.9502 c
-8087.8042 8279.959 -8088.9424 8278.7988 -8089.4058 8278.5674 c
-8089.7007 8278.3975 -8090.5874 8278.4199 -8090.9458 8278.377 c
-8091.6406 8278.292 -8093.4121 8277.3447 -8093.4121 8274.8555 c
-8093.4336 8273.4424 -8092.1265 8272.1152 -8091.8511 8271.9258 c
-8091.6826 8271.8184 -8091.5986 8271.6924 -8091.5986 8271.5234 c
-8091.5986 8271.3125 -8091.6626 8268.3818 -8091.9995 8268.3818 c
-8092.4424 8268.3818 -8092.5054 8268.3818 -8092.5054 8268.5732 c
-8092.21 8269.668 -8092.21 8269.9004 v
-8092.21 8270.2168 -8092.4424 8271.6924 -8093.3066 8271.6924 c
-8093.5806 8271.6924 -8094.0449 8271.46 -8094.0449 8271.1445 c
-8094.0449 8270.8496 -8093.3486 8269.6475 -8093.3486 8269.373 c
-8093.3486 8268.8877 -8093.3921 8268.8672 -8094.0654 8268.2559 c
-8094.2559 8268.1084 -8094.3193 8267.9824 -8094.3193 8267.791 c
-8094.3193 8267.623 -8094.2134 8267.4951 -8094.0449 8267.4951 c
-8093.8975 8267.4951 -8093.3281 8267.7715 -8093.2017 8267.791 c
-8093.0752 8267.791 -8092.8433 8267.8125 -8092.6538 8267.8125 c
-8092.2734 8267.8125 -8092.0845 8267.6855 -8092.0845 8267.5596 c
-8092.0845 8267.3271 -8092.0845 8266.6533 -8092.9263 8265.1973 c
-8093.1167 8264.8604 -8094.2974 8263.5322 -8094.2974 8263.1943 c
-8094.2974 8263.0254 -8094.2134 8263.0059 -8094.1089 8263.0059 c
-8093.9185 8263.0059 -8093.4966 8263.4268 -8093.3706 8263.5742 c
-8092.1265 8264.9023 -8091.3042 8266.3359 -8090.9238 8267.6016 c
-8090.8398 8267.918 -8090.7344 8267.834 -8090.5654 8267.8555 c
-8088.4155 8268.3613 -8086.3271 8270.8701 -8086.3271 8270.8916 c
-8086.4326 8271.165 -8086.4326 8271.2285 v
-8086.4326 8271.3555 -8086.3271 8271.377 -8086.3057 8271.377 c
-8086.2432 8271.377 -8086.0527 8271.165 -8086.0103 8271.165 c
-8085.9058 8271.165 -8085.7783 8271.25 -8085.7783 8271.3975 C
-8085.8418 8271.9453 l
f
0 D
-8089.1104 8270.4492 m
-8088.5215 8270.4492 -8088.0986 8270.5547 -8087.6982 8270.8281 c
-8087.6553 8270.8496 -8087.6138 8270.8701 -8087.5928 8270.8701 c
-8087.5498 8270.8701 -8087.5498 8270.8496 -8087.5498 8270.8066 c
-8087.5498 8270.3857 -8089.4272 8268.4258 -8090.5654 8268.4258 c
-8090.6289 8268.4258 -8090.6714 8268.4668 -8090.6714 8268.5293 c
-8090.6714 8268.7197 -8090.5874 8270.7227 -8090.2495 8270.7227 c
-8090.1865 8270.7227 -8090.1016 8270.7012 -8090.0386 8270.6602 c
-8089.7007 8270.5117 -8089.4902 8270.4492 -8089.1104 8270.4492 c
f
-8088.5835 8273.2109 m
-8088.5835 8272.7891 -8088.5625 8272.3252 -8087.8662 8272.3252 c
-8087.2334 8272.3252 -8086.6431 8272.9795 -8086.4961 8273.127 c
-8086.4326 8273.1689 -8086.3906 8273.1895 -8086.3486 8273.1895 c
-8086.3271 8273.1895 -8086.2847 8273.1475 -8086.2847 8273.1055 c
-8086.2847 8272.6621 -8087.6553 8270.9971 -8089.0049 8270.9971 c
-8089.2578 8270.9971 -8090.2705 8271.165 -8090.2705 8271.7139 c
-8090.2705 8271.9668 -8089.8906 8273.3379 -8089.2793 8274.4131 c
-8087.9087 8276.9014 -8083.7119 8278.46 -8081.8145 8278.46 c
-8080.9072 8278.4824 -8080.6118 8278.166 -8080.4863 8278.1445 c
-8080.4648 8278.1445 -8080.4438 8278.124 -8080.4233 8278.124 c
-8080.3174 8278.124 -8080.1904 8278.1875 -8080.1904 8278.335 c
-8080.1904 8278.3564 -8080.2119 8278.3564 v
-8080.3594 8279.4941 -8080.4014 8279.8955 -8080.4014 8281.1592 c
-8080.4014 8282.5527 -8080.4014 8282.6787 -8079.4321 8282.6787 c
-8078.1455 8282.6787 -8077.8506 8281.6035 -8077.8506 8281.3711 c
-8077.8506 8280.9502 -8078.4399 8280.6543 -8078.5889 8280.6543 c
-8078.7358 8280.6543 -8078.9058 8280.7617 -8078.9058 8280.9502 c
-8078.9058 8281.2451 -8078.9473 8281.3926 -8079.2207 8281.3926 c
-8079.4951 8281.3926 -8079.4951 8281.0342 -8079.4951 8280.9277 c
-8079.4951 8280.6758 -8079.3896 8280.4229 -8079.1782 8280.2959 c
-8078.7998 8280.043 -8078.7998 8279.6426 -8078.7998 8279.4316 c
-8078.7998 8279.3262 -8078.7998 8279.1992 -8078.8198 8279.0938 c
-8078.8418 8278.9258 -8080.7817 8276.8799 -8081.0977 8276.8799 c
-8081.2446 8276.8799 -8081.5615 8277.0264 -8082.4258 8277.0264 c
-8084.5767 8277.0264 -8085.5474 8275.2988 -8085.7378 8274.7715 c
-8085.9897 8274.0547 -8086.7915 8273.7588 -8087.0225 8273.7588 c
-8087.2129 8273.7588 -8087.2129 8273.8018 -8087.2129 8274.2021 c
-8087.2129 8274.2871 -8087.4238 8274.623 y
-8087.4238 8274.8135 -8086.3906 8275.0664 -8086.3906 8275.2559 c
-8086.3906 8275.4258 -8086.5801 8275.4453 -8086.7271 8275.4453 c
-8086.8115 8275.4453 -8087.8882 8275.4453 -8088.3306 8274.623 c
-8088.5415 8274.2227 -8088.5835 8273.6543 -8088.5835 8273.2109 c
f
1 D
-8084.4927 8270.9551 m
-8084.4927 8270.9111 -8084.5137 8270.8916 -8084.5352 8270.8916 c
-8084.5986 8270.8916 -8084.7666 8271.2285 -8084.8506 8271.2285 c
-8084.9146 8271.2285 -8084.9995 8271.1445 -8085.0415 8271.0381 c
-8085.0615 8270.9551 -8085.1255 8270.4902 -8085.21 8270.4902 c
-8085.2524 8270.4902 -8085.4209 8270.7227 -8085.4634 8270.7227 c
-8085.6104 8270.7227 -8085.7158 8270.4902 -8085.7158 8270.2813 c
-8085.7158 8270.1748 -8085.7783 8270.1748 -8085.9263 8270.1748 c
-8086.5166 8270.1748 -8088.1406 8268.0029 -8088.5625 8266.252 c
-8088.6055 8266.084 -8088.5835 8265.9365 -8088.8994 8265.8301 c
-8091.0713 8265.0938 -8093.5176 8262.9414 -8093.5176 8262.8154 c
-8093.5176 8262.668 -8093.4336 8262.584 -8093.3066 8262.584 c
-8093.2432 8262.584 -8093.1592 8262.584 -8092.6538 8262.9199 c
-8091.7681 8263.5107 -8089.7217 8264.7979 -8088.8994 8264.7979 c
-8088.6265 8264.7979 -8088.6055 8264.4395 -8088.6055 8264.1855 c
-8088.6055 8263.9951 -8088.6265 8263.7637 -8088.6265 8263.6172 c
-8088.6465 8263.3428 -8088.9634 8263.0254 -8088.9634 8262.8574 c
-8088.9634 8262.71 -8088.8154 8262.6045 -8088.6465 8262.6045 c
-8088.4575 8262.6045 -8088.3306 8262.626 -8088.1606 8262.8154 c
-8087.8662 8263.1523 -8087.7402 8263.3008 -8087.4238 8263.3008 c
-8087.1914 8263.3008 -8086.1377 8262.584 -8085.8838 8262.584 c
-8085.5679 8262.584 -8085.1895 8263.0684 -8085.1895 8263.3643 c
-8085.1895 8264.1016 -8086.0942 8264.6924 -8086.6431 8264.6924 c
-8087.0225 8264.6924 -8087.4438 8264.5664 -8087.6353 8264.334 c
-8087.6982 8264.2695 -8087.7607 8264.2285 -8087.8242 8264.2285 c
-8087.9937 8264.2285 -8088.1191 8264.6924 -8088.1191 8264.7344 c
-8088.1191 8265.1572 -8085.2729 8265.2188 -8084.9146 8265.2188 c
-8084.7666 8265.2188 -8084.6401 8265.1348 -8084.5352 8264.9658 c
-8084.3447 8264.6719 -8083.1855 8263.4492 -8081.6255 8263.4492 c
-8079.79 8263.4492 -8078.0825 8264.7119 -8078.0825 8266.6104 c
-8078.0825 8266.7168 -8078.1245 8267.2637 -8078.1245 8267.2861 c
-8078.1245 8267.3496 -8077.0063 8269.0986 -8075.6782 8269.0986 c
-8074.6245 8269.0986 -8074.2656 8268.5098 -8074.2656 8268.0234 c
-8074.2656 8267.791 -8074.3711 8267.1387 -8074.8984 8267.1387 c
-8075.1094 8267.1387 -8075.2144 8267.3496 -8075.2144 8267.7285 c
-8075.2144 8267.8125 -8075.0039 8268.1924 -8075.0039 8268.2979 c
-8075.0039 8268.3398 -8075.0239 8268.3613 -8075.0879 8268.3613 c
-8075.4258 8268.3613 -8075.9521 8268.0029 -8076.1846 8267.3496 c
-8076.4595 8266.6328 -8076.8594 8265.9365 -8077.1958 8265.5352 c
-8077.5127 8265.1777 -8077.6182 8264.5859 -8077.6182 8264.249 c
-8077.6182 8263.7637 -8077.1338 8262.6045 -8075.4878 8262.6045 c
-8074.2871 8262.6045 -8073.4434 8263.3428 -8073.4434 8263.9541 c
-8073.4434 8264.5664 -8073.7598 8264.9453 -8074.2026 8264.9453 c
-8074.6455 8264.9453 -8074.9824 8264.6074 -8074.9824 8264.2695 c
-8074.9824 8263.5957 -8075.1514 8263.4492 -8075.4878 8263.4492 c
-8075.6992 8263.4492 -8075.8896 8263.5742 -8075.8896 8263.8906 c
-8075.8896 8264.123 -8075.8896 8264.502 -8074.3711 8265.7676 c
-8073.8857 8266.168 -8073.4214 8266.8652 -8073.4214 8267.6445 c
-8073.4214 8268.4043 -8074.4561 8269.6045 -8075.6362 8269.6045 c
-8076.8594 8269.6045 -8077.6401 8268.8252 -8078.2515 8268.1084 c
-8078.5454 8267.7715 -8079.9814 8266.084 -8080.0439 8266.0615 c
-8080.2334 8265.9141 -8080.3174 8265.7891 -8080.3174 8265.6621 c
-8080.3174 8265.5566 -8080.2119 8265.4512 -8080.0854 8265.4512 c
-8079.8535 8265.4512 -8078.9058 8266.4004 -8078.8198 8266.4004 c
-8078.7568 8266.4004 -8078.7153 8266.3359 -8078.7153 8266.252 c
-8078.7153 8265.4932 -8079.8535 8264.0176 -8081.6255 8264.0176 c
-8083.1006 8264.0176 -8083.9863 8265.1348 -8083.9863 8265.1777 c
-8083.9863 8265.3037 -8083.8394 8265.4287 -8083.5225 8265.4932 c
-8079.6426 8266.2314 -8076.3955 8269.7813 -8076.3955 8274.3975 c
-8076.3955 8274.5039 -8076.2256 8274.5303 -8076.0786 8274.5303 c
-8075.7202 8274.5303 -8075.0879 8274.6094 -8075.0879 8274.3359 c
-8075.0879 8274.2295 -8075.1294 8274.1035 -8075.1934 8273.9766 c
-8075.5518 8273.4063 -8075.8682 8273.2324 -8075.8682 8272.2813 c
-8075.8682 8271.8184 -8075.4878 8271.292 -8074.8984 8271.292 c
-8073.8657 8271.292 -8073.4214 8272.3252 -8073.4214 8272.5566 c
-8073.4214 8272.7256 -8073.5073 8272.7891 -8073.5903 8272.7891 c
-8073.7178 8272.7891 -8074.2241 8272.2617 -8074.3711 8272.2617 c
-8074.5615 8272.2617 -8074.7085 8272.3037 -8074.7085 8272.7891 c
-8074.7085 8273.127 -8073.4214 8276.8379 -8073.4214 8277.6387 c
-8073.4214 8278.209 -8073.7598 8278.9053 -8074.6455 8279.4102 c
-8074.6875 8279.4316 -8074.7085 8279.4521 -8074.7085 8279.4941 c
-8074.7085 8279.5781 -8074.5615 8279.6846 -8074.4126 8279.7256 c
-8073.8018 8279.8955 -8073.4214 8280.001 -8073.4214 8280.9502 c
-8073.4214 8281.3086 -8073.7598 8281.9834 -8074.0127 8281.9834 c
-8074.2026 8281.9834 -8074.2026 8281.9404 -8074.2026 8281.582 c
-8074.2026 8281.4346 -8074.2446 8281.3291 -8074.3926 8281.2236 c
-8074.7085 8281.0127 -8074.7295 8280.9707 -8074.8135 8280.4863 c
-8074.8774 8280.1699 -8075.0039 8280.084 -8076.1426 8279.4521 c
-8076.5854 8279.1787 -8076.6904 8278.9463 -8076.7744 8278.7148 c
-8076.8594 8278.5234 -8076.9233 8278.5234 -8077.4287 8278.5234 c
-8077.9561 8278.5234 -8080.5073 8275.8047 -8080.5073 8275.6777 c
-8080.5073 8275.6152 -8080.3809 8275.3193 -8080.3809 8275.2559 c
-8080.3809 8275.1934 -8080.4014 8275.1514 -8080.4438 8275.1514 c
-8080.4863 8275.1514 -8080.6338 8275.3613 -8080.6758 8275.3613 c
-8080.7817 8275.3613 -8080.7817 8275.1719 -8080.7817 8275.0234 c
-8080.7817 8274.9199 -8080.5703 8274.3496 -8080.5703 8274.2021 c
-8080.5703 8274.1182 -8080.5918 8274.0547 -8080.6338 8274.0547 c
-8080.7178 8274.0547 -8080.9072 8274.5176 -8080.9922 8274.5176 c
-8081.0342 8274.5176 -8081.0762 8274.4766 -8081.0762 8274.3496 c
-8081.0762 8274.2021 -8080.8862 8273.4854 y
-8080.8862 8273.4219 -8080.9072 8273.3164 -8080.9502 8273.3164 c
-8081.0342 8273.3164 -8081.1826 8273.7168 -8081.2666 8273.7168 c
-8081.3286 8273.7168 -8081.3926 8273.6328 -8081.3926 8273.4854 c
-8081.3926 8273.4004 -8081.2446 8272.9795 -8081.2446 8272.874 c
-8081.2446 8272.8105 -8081.2666 8272.7461 -8081.3086 8272.7461 c
-8081.3506 8272.7461 -8081.5835 8273.3594 -8081.7095 8273.3594 c
-8081.7935 8273.3594 -8081.8994 8273.252 -8081.8994 8273.1475 c
-8081.8994 8273.0635 -8081.7729 8272.7051 -8081.7729 8272.6211 c
-8081.7729 8272.5781 -8081.7729 8272.5566 -8081.7935 8272.5566 c
-8081.8774 8272.5566 -8082.0254 8273.042 -8082.1104 8273.042 c
-8082.3418 8273.042 -8082.3623 8272.6211 -8082.3623 8272.4307 c
-8082.3623 8272.3467 -8082.2998 8272.0098 -8082.2998 8271.9453 c
-8082.2998 8271.8828 -8082.3198 8271.8613 -8082.3418 8271.8613 c
-8082.4897 8271.8613 -8082.6782 8272.6621 -8082.8271 8272.6621 c
-8083.0386 8272.6621 -8083.0386 8272.4727 -8083.0386 8272.2412 c
-8083.0166 8271.7139 L
-8083.0166 8271.6924 -8083.0386 8271.6719 y
-8083.0586 8271.6719 -8083.1006 8271.6924 -8083.1226 8271.7559 c
-8083.1855 8271.9668 -8083.3115 8272.3887 -8083.5225 8272.3887 c
-8083.6694 8272.3887 -8083.8174 8272.2197 -8083.8174 8272.0732 c
-8083.8174 8271.8398 -8083.7119 8271.46 -8083.7119 8271.2285 c
-8083.7119 8271.165 -8083.7334 8271.1445 -8083.7754 8271.1445 c
-8083.8608 8271.1445 -8083.9863 8271.5859 -8084.0278 8271.6719 c
-8084.0918 8271.7559 -8084.1553 8271.7773 -8084.2192 8271.7773 c
-8084.5352 8271.7773 -8084.5352 8271.46 -8084.5352 8271.3125 C
-8084.4927 8270.9551 l
f
0 D
-8085.8633 8266.5898 m
-8085.8633 8266.3574 -8087.8042 8266.168 -8087.8662 8266.168 c
-8087.9722 8266.168 -8088.0352 8266.2314 -8088.0352 8266.3359 c
-8088.0352 8267.2012 -8086.2847 8269.4365 -8085.8633 8269.4365 c
-8085.7998 8269.4365 -8085.7783 8269.416 -8085.7783 8269.3525 c
-8086.2002 8268.1084 -8086.2002 8267.8555 v
-8086.2002 8267.4756 -8086.0942 8267.2227 -8085.9058 8266.8008 c
-8085.8838 8266.7168 -8085.8633 8266.6533 -8085.8633 8266.5898 c
f
-8077.1338 8278.0391 m
-8076.9858 8278.0391 -8076.4795 8277.5342 -8076.3325 8277.5342 c
-8076.2065 8277.5342 -8076.0791 8277.6182 -8076.0791 8277.7656 c
-8076.0791 8277.8496 -8076.2695 8278.292 -8076.2695 8278.3975 c
-8076.2695 8278.7559 -8075.8896 8279.0527 -8075.5098 8279.0527 c
-8075.1094 8279.0527 -8073.9702 8278.7354 -8073.9702 8277.5117 c
-8073.9702 8276.416 -8074.3926 8276.416 -8076.0366 8276.416 c
-8076.3955 8276.416 -8078.0615 8276.6055 -8078.3145 8276.6055 c
-8078.4399 8276.6055 -8078.4834 8276.4365 -8078.4834 8276.3096 c
-8078.4834 8276.2686 -8078.4834 8276.2266 -8078.4614 8276.2051 c
-8078.3984 8275.8262 -8078.1675 8275.2773 -8078.1675 8274.8975 c
-8078.1675 8270.4492 -8082.2998 8266.5898 -8084.7666 8266.5898 c
-8085.4209 8266.5898 -8085.6519 8267.3916 -8085.6519 8267.8125 c
-8085.6519 8269.542 -8083.6694 8270.5742 -8083.4175 8270.5742 c
-8083.3545 8270.5742 -8083.3335 8270.5547 -8083.3335 8270.5117 c
-8083.3335 8270.4697 -8083.3545 8270.4277 -8083.3975 8270.3857 c
-8083.5225 8270.2168 -8084.0498 8269.6045 -8084.0498 8268.9727 c
-8084.0498 8268.6348 -8083.7554 8268.1924 -8082.9951 8268.1924 c
-8081.7305 8268.1924 -8081.1826 8269.542 -8081.1826 8269.9004 c
-8081.1826 8270.0488 -8081.2446 8270.2588 -8081.4561 8270.2588 c
-8081.6035 8270.2588 -8082.0049 8269.6045 -8082.1519 8269.6045 c
-8082.2158 8269.6045 -8082.4473 8269.7314 -8082.5103 8269.7314 c
-8082.5942 8269.7314 -8082.6582 8269.7109 -8082.7422 8269.7109 c
-8082.8057 8269.7109 -8082.8481 8269.7734 -8082.8481 8269.8789 c
-8082.8481 8270.2383 -8082.3623 8270.8066 -8081.8774 8271.0605 c
-8080.9722 8271.5234 -8079.6226 8272.8525 -8079.6226 8274.3076 c
-8079.6226 8274.7285 -8079.6846 8275.1299 -8079.6846 8275.4668 c
-8079.6846 8276.0156 -8078.7568 8276.8799 -8077.8081 8277.7656 c
-8077.6401 8277.9131 -8077.3862 8278.0391 -8077.1338 8278.0391 c
f
*U
U
%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 57)0 A
u
1 Ap
0 J 0 j 1 w 4 M []0 d0 XR
-8068.9722 8287.7598 m
-8068.9722 8261.7324 L
-8095 8261.7324 L
-8095 8287.7598 L
-8068.9722 8287.7598 L
n
0 Ap
0 R
0.597742 0.537865 0.64184 0.350469 K
0.375 w-8077.6455 8274.749 m
-8068.9736 8274.749 l
S
-8081.9839 8287.7598 m
-8081.9839 8279.084 l
S
0.64 0.650477 0.701045 0.510735 K
1.125 w-8077.7202 8270.4102 m
-8068.9727 8270.4102 l
S
-8086.3232 8287.7598 m
-8086.3232 8278.4053 l
S
0.7084 0.636438 0.515526 0.381872 K
-8077.6504 8287.7598 m
-8077.6504 8285.3467 l
-8074.9937 8285.123 -8073.3096 8283.4199 v
-8071.6064 8281.6934 -8071.3774 8279.0879 y
-8068.9727 8279.0879 l
S
*u
0 O
0.7084 0.636438 0.515526 0.381872 k
1 w-8085.7783 8271.3975 m
-8085.7783 8271.25 -8085.9058 8271.165 -8086.0103 8271.165 c
-8086.0527 8271.165 -8086.2432 8271.377 -8086.3057 8271.377 c
-8086.3271 8271.377 -8086.4326 8271.3555 -8086.4326 8271.2285 c
-8086.4326 8271.165 -8086.3271 8270.8916 y
-8086.3271 8270.8701 -8088.4155 8268.3613 -8090.5654 8267.8555 c
-8090.7344 8267.834 -8090.8398 8267.918 -8090.9238 8267.6016 c
-8091.3042 8266.3359 -8092.1265 8264.9023 -8093.3706 8263.5742 c
-8093.4966 8263.4277 -8093.9185 8263.0059 -8094.1089 8263.0059 c
-8094.2134 8263.0059 -8094.2974 8263.0254 -8094.2974 8263.1943 c
-8094.2974 8263.5322 -8093.1167 8264.8604 -8092.9263 8265.1973 c
-8092.0845 8266.6533 -8092.0845 8267.3271 -8092.0845 8267.5596 c
-8092.0845 8267.6855 -8092.2734 8267.8125 -8092.6538 8267.8125 c
-8092.8433 8267.8125 -8093.0752 8267.791 -8093.2017 8267.791 c
-8093.3281 8267.7715 -8093.8975 8267.4951 -8094.0449 8267.4951 c
-8094.2134 8267.4951 -8094.3193 8267.623 -8094.3193 8267.791 c
-8094.3193 8267.9824 -8094.2559 8268.1084 -8094.0654 8268.2559 c
-8093.3921 8268.8672 -8093.3486 8268.8877 -8093.3486 8269.373 c
-8093.3486 8269.6475 -8094.0449 8270.8496 -8094.0449 8271.1445 c
-8094.0449 8271.46 -8093.5806 8271.6924 -8093.3066 8271.6924 c
-8092.4424 8271.6924 -8092.21 8270.2168 -8092.21 8269.9004 c
-8092.21 8269.668 -8092.5054 8268.5732 y
-8092.5054 8268.3818 -8092.4424 8268.3818 -8091.9995 8268.3818 c
-8091.6626 8268.3818 -8091.5986 8271.3125 -8091.5986 8271.5234 c
-8091.5986 8271.6924 -8091.6826 8271.8184 -8091.8511 8271.9258 c
-8092.1265 8272.1152 -8093.4336 8273.4424 -8093.4121 8274.8555 c
-8093.4121 8277.3447 -8091.6406 8278.292 -8090.9458 8278.377 c
-8090.5874 8278.4199 -8089.7007 8278.3975 -8089.4058 8278.5674 c
-8088.9424 8278.7988 -8087.8042 8279.959 -8087.8042 8280.9502 c
-8087.8042 8282.1514 -8088.5215 8282.5098 -8088.8774 8282.5098 c
-8089.2378 8282.5098 -8089.5103 8282.4893 -8089.5103 8282.0039 c
-8089.5103 8281.793 -8089.3423 8281.5605 -8089.1318 8281.498 c
-8089.0474 8281.4766 -8088.2881 8281.2871 -8088.2881 8280.9707 c
-8088.2881 8280.8223 -8088.3721 8280.8223 -8088.5835 8280.8223 c
-8089.1318 8280.8223 -8089.8066 8280.6133 -8091.0928 8279.4102 c
-8091.4722 8279.0732 -8092.1265 8278.9893 -8092.5679 8278.9893 c
-8093.0537 8278.9893 -8094.2974 8279.4521 -8094.2974 8280.9502 c
-8094.2974 8282.7832 -8093.4751 8283.4805 -8092.8433 8283.4805 c
-8092.4209 8283.4805 -8091.8936 8283.1631 -8091.8936 8282.8887 c
-8091.8936 8282.5527 -8091.9575 8282.1309 -8092.5479 8282.0879 c
-8093.0537 8282.0459 -8093.3066 8281.8135 -8093.3066 8281.4766 c
-8093.3066 8281.2656 -8093.1592 8281.0547 -8092.8218 8281.0547 c
-8092.3154 8281.0547 -8091.7041 8281.625 -8091.0713 8282.3623 c
-8090.6714 8282.8477 -8089.7007 8283.375 -8088.9209 8283.375 c
-8088.1191 8283.375 -8087.0654 8282.4688 -8087.0654 8281.0967 c
-8087.0654 8279.832 -8088.4995 8278.5234 -8089.2378 8277.998 c
-8089.9546 8277.4707 -8090.3335 8277.0908 -8090.46 8276.8799 c
-8090.5654 8276.7324 -8090.9033 8275.7832 -8091.1143 8275.7832 c
-8091.2607 8275.7832 -8091.3672 8275.9512 -8091.3672 8276.1631 c
-8091.3672 8276.4795 -8091.1143 8277.1133 -8090.7759 8277.4492 c
-8090.6929 8277.5547 -8090.6494 8277.6182 -8090.6494 8277.6807 c
-8090.6494 8277.8291 -8090.8398 8277.8496 -8090.9873 8277.8496 c
-8091.5767 8277.8496 -8092.7793 8276.8799 -8092.7793 8275.0459 c
-8092.7793 8273.4639 -8091.7881 8272.6211 -8091.6406 8272.6211 c
-8091.5361 8272.6211 -8091.4297 8272.7256 -8091.3672 8272.9375 c
-8089.6592 8279.0938 -8084.7822 8280.3174 -8082.3774 8280.3174 c
-8082.2729 8280.3174 -8082.1895 8280.3799 -8082.1895 8280.5293 c
-8082.1895 8280.6543 -8082.1895 8281.752 -8082.3359 8281.752 c
-8082.3774 8281.752 -8082.4414 8281.7295 -8082.5264 8281.667 c
-8083.0942 8281.2031 -8083.3755 8280.8447 -8084.3022 8280.8447 c
-8084.7666 8280.8447 -8085.5679 8281.3711 -8085.5679 8281.9834 c
-8085.5679 8282.7627 -8084.8936 8283.4805 -8084.4082 8283.4805 c
-8084.0498 8283.4805 -8083.9023 8283.3955 -8083.9023 8283.2695 c
-8083.9023 8283.1416 -8084.3662 8282.7002 -8084.3662 8282.5527 c
-8084.3662 8282.2988 -8084.3242 8282.1514 -8083.8809 8282.1514 c
-8083.4814 8282.1514 -8082.7842 8282.3213 -8082.3418 8282.5742 c
-8081.8774 8282.8477 -8080.7393 8283.4805 -8079.7065 8283.4805 c
-8078.9473 8283.4805 -8077.9561 8283.0371 -8077.4702 8282.2363 c
-8077.4287 8282.1719 -8077.3862 8282.1514 -8077.3447 8282.1514 c
-8077.2393 8282.1514 -8077.1543 8282.2363 -8077.1338 8282.3848 c
-8077.0913 8282.7832 -8076.7534 8283.4805 -8075.9312 8283.4805 c
-8075.3408 8283.4805 -8074.8135 8282.9736 -8074.8135 8282.5303 c
-8074.8135 8282.3623 -8074.9194 8282.2988 -8075.0239 8282.2988 c
-8075.1094 8282.2988 -8075.4878 8282.5527 -8075.5942 8282.5527 c
-8075.7407 8282.5527 -8076.6479 8281.9404 -8076.7334 8281.793 c
-8077.5127 8280.5068 -8077.5977 8280.3594 -8078.2295 8280.1055 c
-8078.3984 8280.0215 -8078.3984 8279.9375 -8078.3984 8279.0732 c
-8078.3984 8278.9463 -8078.3984 8278.6504 -8078.5454 8278.4824 c
-8078.8198 8278.209 -8080.9287 8276.1416 -8081.1392 8276.1416 c
-8081.2241 8276.1416 -8081.4985 8276.416 -8081.5835 8276.416 c
-8081.6035 8276.416 -8081.6255 8276.416 -8081.6255 8276.374 C
-8081.6035 8276.2266 l
-8081.6035 8276.0586 -8081.6455 8275.9727 -8081.8564 8275.9727 c
-8081.9199 8275.9727 -8082.1943 8276.0996 -8082.2568 8276.0996 c
-8082.3198 8276.0996 -8082.3623 8275.6572 -8082.4473 8275.6572 c
-8082.4678 8275.6572 -8082.8057 8275.8887 -8082.8896 8275.8887 c
-8083.0166 8275.8887 -8083.1006 8275.8047 -8083.1006 8275.6992 c
-8083.1006 8275.6367 -8083.1006 8275.1514 -8083.2065 8275.1514 c
-8083.2915 8275.1514 -8083.5225 8275.4453 -8083.5654 8275.4453 c
-8083.5854 8275.4453 -8083.5854 8275.4258 -8083.5854 8275.3613 C
-8083.5439 8274.9404 l
-8083.5439 8274.876 -8083.5854 8274.8555 -8083.6494 8274.8555 c
-8083.7119 8274.8555 -8083.9658 8275.1719 -8084.0498 8275.1719 c
-8084.0918 8275.1719 -8084.1138 8275.1299 -8084.1138 8275.0459 c
-8084.1138 8275.0039 -8083.9233 8274.2871 -8083.9233 8274.1387 c
-8083.9233 8274.0547 -8083.9658 8274.0117 -8084.0078 8274.0117 c
-8084.0918 8274.0117 -8084.4297 8274.3711 -8084.4722 8274.3711 c
-8084.4927 8274.3711 -8084.4927 8274.3711 -8084.4927 8274.3496 c
-8084.4927 8274.2656 -8084.3882 8273.9063 -8084.3882 8273.8867 c
-8084.3882 8273.8652 -8084.4082 8273.8438 -8084.4297 8273.8438 c
-8084.4722 8273.8438 -8084.6826 8274.0547 -8084.7446 8274.0547 c
-8084.7666 8274.0547 -8084.7666 8274.0547 -8084.7666 8274.0117 c
-8084.7666 8273.8438 -8084.5137 8273.1055 -8084.5137 8273.042 c
-8084.5137 8273.0205 -8084.5352 8273 -8084.5562 8273 c
-8084.6826 8273 -8085.1055 8273.5703 -8085.1465 8273.5703 c
-8085.1675 8273.5703 -8085.1675 8273.5488 -8085.1675 8273.4854 c
-8085.1675 8273.2949 -8084.8936 8272.3887 y
-8084.8936 8272.3672 -8084.9146 8272.3467 -8084.9351 8272.3467 c
-8085.0615 8272.3467 -8085.4414 8272.8936 -8085.5049 8272.8936 c
-8085.5264 8272.8936 -8085.5264 8272.8936 -8085.5264 8272.8525 c
-8085.2729 8271.9453 -8085.2729 8271.8613 v
-8085.2729 8271.7559 -8085.3154 8271.7139 -8085.3994 8271.7139 c
-8085.4634 8271.7139 -8085.6943 8272.0508 -8085.7783 8272.0508 c
-8085.8218 8272.0508 -8085.8418 8272.0098 -8085.8418 8271.9453 c
-8085.7783 8271.3975 L
f
1 D
-8090.0386 8270.6602 m
-8090.1016 8270.7012 -8090.1865 8270.7227 -8090.2495 8270.7227 c
-8090.5874 8270.7227 -8090.6714 8268.7197 -8090.6714 8268.5293 c
-8090.6714 8268.4668 -8090.6289 8268.4258 -8090.5654 8268.4258 c
-8089.4272 8268.4258 -8087.5498 8270.3867 -8087.5498 8270.8066 c
-8087.5498 8270.8496 -8087.5498 8270.8701 -8087.5928 8270.8701 c
-8087.6138 8270.8701 -8087.6553 8270.8496 -8087.6982 8270.8281 c
-8088.0986 8270.5547 -8088.5215 8270.4492 -8089.1104 8270.4492 c
-8089.4902 8270.4492 -8089.7007 8270.5117 -8090.0386 8270.6602 c
f
-8088.3306 8274.623 m
-8087.8882 8275.4453 -8086.8115 8275.4453 -8086.7271 8275.4453 c
-8086.5801 8275.4453 -8086.3906 8275.4258 -8086.3906 8275.2559 c
-8086.3906 8275.0664 -8087.4238 8274.8135 -8087.4238 8274.623 c
-8087.2129 8274.2871 -8087.2129 8274.2021 v
-8087.2129 8273.8027 -8087.2129 8273.7598 -8087.0225 8273.7598 c
-8086.7915 8273.7598 -8085.9897 8274.0547 -8085.7378 8274.7715 c
-8085.5474 8275.2988 -8084.5767 8277.0264 -8082.4258 8277.0264 c
-8081.5615 8277.0264 -8081.2446 8276.8799 -8081.0977 8276.8799 c
-8080.7817 8276.8799 -8078.8418 8278.9258 -8078.8198 8279.0938 c
-8078.7998 8279.1992 -8078.7998 8279.3262 -8078.7998 8279.4316 c
-8078.7998 8279.6426 -8078.7998 8280.043 -8079.1782 8280.2959 c
-8079.3896 8280.4229 -8079.4951 8280.6758 -8079.4951 8280.9277 c
-8079.4951 8281.0342 -8079.4951 8281.3926 -8079.2207 8281.3926 c
-8078.9473 8281.3926 -8078.9058 8281.2451 -8078.9058 8280.9502 c
-8078.9058 8280.7617 -8078.7358 8280.6543 -8078.5889 8280.6543 c
-8078.4399 8280.6543 -8077.8506 8280.9502 -8077.8506 8281.3711 c
-8077.8506 8281.6035 -8078.1455 8282.6787 -8079.4321 8282.6787 c
-8080.4014 8282.6787 -8080.4014 8282.5527 -8080.4014 8281.1592 c
-8080.4014 8279.8955 -8080.3594 8279.4941 -8080.2119 8278.3564 c
-8080.1904 8278.3564 -8080.1904 8278.335 y
-8080.1904 8278.1875 -8080.3174 8278.124 -8080.4233 8278.124 c
-8080.4438 8278.124 -8080.4648 8278.1445 -8080.4863 8278.1445 c
-8080.6118 8278.166 -8080.9072 8278.4824 -8081.8145 8278.46 c
-8083.7119 8278.46 -8087.9087 8276.9014 -8089.2793 8274.4131 c
-8089.8906 8273.3379 -8090.2705 8271.9668 -8090.2705 8271.7139 c
-8090.2705 8271.165 -8089.2578 8270.9971 -8089.0049 8270.9971 c
-8087.6553 8270.9971 -8086.2847 8272.6621 -8086.2847 8273.1055 c
-8086.2847 8273.1475 -8086.3271 8273.1895 -8086.3486 8273.1895 c
-8086.3906 8273.1895 -8086.4326 8273.1689 -8086.4961 8273.127 c
-8086.6431 8272.9795 -8087.2334 8272.3252 -8087.8662 8272.3252 c
-8088.5625 8272.3252 -8088.5835 8272.7891 -8088.5835 8273.2109 c
-8088.5835 8273.6543 -8088.5415 8274.2227 -8088.3306 8274.623 c
f
0 D
-8084.5352 8271.3125 m
-8084.5352 8271.46 -8084.5352 8271.7773 -8084.2192 8271.7773 c
-8084.1553 8271.7773 -8084.0918 8271.7559 -8084.0278 8271.6719 c
-8083.9863 8271.5859 -8083.8608 8271.1445 -8083.7754 8271.1445 c
-8083.7334 8271.1445 -8083.7119 8271.165 -8083.7119 8271.2285 c
-8083.7119 8271.46 -8083.8174 8271.8398 -8083.8174 8272.0732 c
-8083.8174 8272.2197 -8083.6694 8272.3887 -8083.5225 8272.3887 c
-8083.3115 8272.3887 -8083.1855 8271.9668 -8083.1226 8271.7559 c
-8083.1006 8271.6924 -8083.0586 8271.6719 -8083.0386 8271.6719 c
-8083.0166 8271.6924 -8083.0166 8271.7139 V
-8083.0386 8272.2412 l
-8083.0386 8272.4727 -8083.0386 8272.6621 -8082.8271 8272.6621 c
-8082.6782 8272.6621 -8082.4897 8271.8613 -8082.3418 8271.8613 c
-8082.3198 8271.8613 -8082.2998 8271.8828 -8082.2998 8271.9453 c
-8082.2998 8272.0098 -8082.3623 8272.3467 -8082.3623 8272.4307 c
-8082.3623 8272.6211 -8082.3418 8273.042 -8082.1104 8273.042 c
-8082.0254 8273.042 -8081.8774 8272.5566 -8081.7935 8272.5566 c
-8081.7729 8272.5566 -8081.7729 8272.5781 -8081.7729 8272.6211 c
-8081.7729 8272.7051 -8081.8994 8273.0635 -8081.8994 8273.1475 c
-8081.8994 8273.252 -8081.7935 8273.3594 -8081.7095 8273.3594 c
-8081.5835 8273.3594 -8081.3506 8272.7461 -8081.3086 8272.7461 c
-8081.2666 8272.7461 -8081.2446 8272.8105 -8081.2446 8272.874 c
-8081.2446 8272.9795 -8081.3926 8273.4004 -8081.3926 8273.4854 c
-8081.3926 8273.6328 -8081.3286 8273.7168 -8081.2666 8273.7168 c
-8081.1826 8273.7168 -8081.0342 8273.3164 -8080.9502 8273.3164 c
-8080.9072 8273.3164 -8080.8862 8273.4219 -8080.8862 8273.4854 c
-8081.0762 8274.2021 -8081.0762 8274.3496 v
-8081.0762 8274.4766 -8081.0342 8274.5176 -8080.9922 8274.5176 c
-8080.9072 8274.5176 -8080.7178 8274.0547 -8080.6338 8274.0547 c
-8080.5918 8274.0547 -8080.5703 8274.1182 -8080.5703 8274.2021 c
-8080.5703 8274.3496 -8080.7817 8274.9199 -8080.7817 8275.0234 c
-8080.7817 8275.1719 -8080.7817 8275.3613 -8080.6758 8275.3613 c
-8080.6338 8275.3613 -8080.4863 8275.1514 -8080.4438 8275.1514 c
-8080.4014 8275.1514 -8080.3809 8275.1934 -8080.3809 8275.2559 c
-8080.3809 8275.3193 -8080.5073 8275.6152 -8080.5073 8275.6777 c
-8080.5073 8275.8047 -8077.9561 8278.5234 -8077.4287 8278.5234 c
-8076.9233 8278.5234 -8076.8594 8278.5234 -8076.7744 8278.7148 c
-8076.6904 8278.9463 -8076.5854 8279.1787 -8076.1426 8279.4521 c
-8075.0039 8280.084 -8074.8774 8280.1699 -8074.8135 8280.4863 c
-8074.7295 8280.9707 -8074.7085 8281.0127 -8074.3926 8281.2236 c
-8074.2446 8281.3291 -8074.2026 8281.4346 -8074.2026 8281.582 c
-8074.2026 8281.9404 -8074.2026 8281.9834 -8074.0127 8281.9834 c
-8073.7598 8281.9834 -8073.4214 8281.3086 -8073.4214 8280.9502 c
-8073.4214 8280.001 -8073.8018 8279.8955 -8074.4126 8279.7256 c
-8074.5615 8279.6846 -8074.7085 8279.5781 -8074.7085 8279.4941 c
-8074.7085 8279.4521 -8074.6875 8279.4316 -8074.6455 8279.4102 c
-8073.7598 8278.9053 -8073.4214 8278.209 -8073.4214 8277.6387 c
-8073.4214 8276.8379 -8074.7085 8273.127 -8074.7085 8272.7891 c
-8074.7085 8272.3037 -8074.5615 8272.2617 -8074.3711 8272.2617 c
-8074.2241 8272.2617 -8073.7178 8272.7891 -8073.5903 8272.7891 c
-8073.5073 8272.7891 -8073.4214 8272.7256 -8073.4214 8272.5566 c
-8073.4214 8272.3252 -8073.8657 8271.292 -8074.8984 8271.292 c
-8075.4878 8271.292 -8075.8682 8271.8184 -8075.8682 8272.2813 c
-8075.8682 8273.2324 -8075.5518 8273.4063 -8075.1934 8273.9766 c
-8075.1294 8274.1035 -8075.0879 8274.2295 -8075.0879 8274.3359 c
-8075.0879 8274.6094 -8075.7202 8274.5303 -8076.0786 8274.5303 c
-8076.2256 8274.5303 -8076.3955 8274.5039 -8076.3955 8274.3975 c
-8076.3955 8269.7813 -8079.6426 8266.2314 -8083.5225 8265.4932 c
-8083.8394 8265.4287 -8083.9863 8265.3037 -8083.9863 8265.1777 c
-8083.9863 8265.1348 -8083.1006 8264.0176 -8081.6255 8264.0176 c
-8079.8535 8264.0176 -8078.7153 8265.4932 -8078.7153 8266.252 c
-8078.7153 8266.3359 -8078.7568 8266.4004 -8078.8198 8266.4004 c
-8078.9058 8266.4004 -8079.8535 8265.4512 -8080.0854 8265.4512 c
-8080.2119 8265.4512 -8080.3174 8265.5566 -8080.3174 8265.6621 c
-8080.3174 8265.7891 -8080.2334 8265.9141 -8080.0439 8266.0615 c
-8079.9814 8266.084 -8078.5454 8267.7715 -8078.2515 8268.1084 c
-8077.6401 8268.8252 -8076.8594 8269.6045 -8075.6362 8269.6045 c
-8074.4561 8269.6045 -8073.4214 8268.4043 -8073.4214 8267.6445 c
-8073.4214 8266.8652 -8073.8857 8266.168 -8074.3711 8265.7676 c
-8075.8896 8264.502 -8075.8896 8264.123 -8075.8896 8263.8906 c
-8075.8896 8263.5742 -8075.6992 8263.4492 -8075.4878 8263.4492 c
-8075.1514 8263.4492 -8074.9824 8263.5957 -8074.9824 8264.2695 c
-8074.9824 8264.6074 -8074.6455 8264.9453 -8074.2026 8264.9453 c
-8073.7598 8264.9453 -8073.4434 8264.5664 -8073.4434 8263.9541 c
-8073.4434 8263.3438 -8074.2871 8262.6045 -8075.4878 8262.6045 c
-8077.1338 8262.6045 -8077.6182 8263.7637 -8077.6182 8264.249 c
-8077.6182 8264.5859 -8077.5127 8265.1777 -8077.1958 8265.5352 c
-8076.8594 8265.9365 -8076.4595 8266.6328 -8076.1846 8267.3496 c
-8075.9521 8268.0029 -8075.4258 8268.3613 -8075.0879 8268.3613 c
-8075.0239 8268.3613 -8075.0039 8268.3398 -8075.0039 8268.2979 c
-8075.0039 8268.1924 -8075.2144 8267.8125 -8075.2144 8267.7285 c
-8075.2144 8267.3496 -8075.1094 8267.1387 -8074.8984 8267.1387 c
-8074.3711 8267.1387 -8074.2656 8267.791 -8074.2656 8268.0234 c
-8074.2656 8268.5098 -8074.6245 8269.0986 -8075.6782 8269.0986 c
-8077.0063 8269.0986 -8078.1245 8267.3496 -8078.1245 8267.2861 c
-8078.1245 8267.2637 -8078.0825 8266.7168 -8078.0825 8266.6104 c
-8078.0825 8264.7119 -8079.79 8263.4492 -8081.6255 8263.4492 c
-8083.1855 8263.4492 -8084.3447 8264.6719 -8084.5352 8264.9658 c
-8084.6401 8265.1348 -8084.7666 8265.2188 -8084.9146 8265.2188 c
-8085.2729 8265.2188 -8088.1191 8265.1572 -8088.1191 8264.7344 c
-8088.1191 8264.6924 -8087.9937 8264.2285 -8087.8242 8264.2285 c
-8087.7607 8264.2285 -8087.6982 8264.2695 -8087.6353 8264.334 c
-8087.4438 8264.5664 -8087.0225 8264.6924 -8086.6431 8264.6924 c
-8086.0942 8264.6924 -8085.1895 8264.1016 -8085.1895 8263.3643 c
-8085.1895 8263.0684 -8085.5679 8262.584 -8085.8838 8262.584 c
-8086.1377 8262.584 -8087.1914 8263.3008 -8087.4238 8263.3008 c
-8087.7402 8263.3008 -8087.8662 8263.1523 -8088.1606 8262.8154 c
-8088.3306 8262.626 -8088.4575 8262.6045 -8088.6465 8262.6045 c
-8088.8154 8262.6045 -8088.9634 8262.71 -8088.9634 8262.8574 c
-8088.9634 8263.0254 -8088.6465 8263.3438 -8088.6265 8263.6172 c
-8088.6265 8263.7637 -8088.6055 8263.9951 -8088.6055 8264.1855 c
-8088.6055 8264.4395 -8088.6265 8264.7979 -8088.8994 8264.7979 c
-8089.7217 8264.7979 -8091.7681 8263.5117 -8092.6538 8262.9199 c
-8093.1592 8262.584 -8093.2432 8262.584 -8093.3066 8262.584 c
-8093.4336 8262.584 -8093.5176 8262.668 -8093.5176 8262.8154 c
-8093.5176 8262.9414 -8091.0713 8265.0938 -8088.8994 8265.8301 c
-8088.5835 8265.9365 -8088.6055 8266.084 -8088.5625 8266.252 c
-8088.1406 8268.0029 -8086.5166 8270.1758 -8085.9263 8270.1758 c
-8085.7783 8270.1758 -8085.7158 8270.1758 -8085.7158 8270.2813 c
-8085.7158 8270.4902 -8085.6104 8270.7227 -8085.4634 8270.7227 c
-8085.4209 8270.7227 -8085.2524 8270.4902 -8085.21 8270.4902 c
-8085.1255 8270.4902 -8085.0615 8270.9551 -8085.0415 8271.0381 c
-8084.9995 8271.1445 -8084.9146 8271.2285 -8084.8506 8271.2285 c
-8084.7666 8271.2285 -8084.5986 8270.8916 -8084.5352 8270.8916 c
-8084.5137 8270.8916 -8084.4927 8270.9111 -8084.4927 8270.9551 c
-8084.5352 8271.3125 L
f
1 D
-8085.9058 8266.8008 m
-8086.0942 8267.2227 -8086.2002 8267.4756 -8086.2002 8267.8555 c
-8086.2002 8268.1084 -8085.7783 8269.3525 y
-8085.7783 8269.416 -8085.7998 8269.4365 -8085.8633 8269.4365 c
-8086.2847 8269.4365 -8088.0352 8267.2012 -8088.0352 8266.3359 c
-8088.0352 8266.2314 -8087.9722 8266.168 -8087.8662 8266.168 c
-8087.8042 8266.168 -8085.8633 8266.3574 -8085.8633 8266.5898 c
-8085.8633 8266.6533 -8085.8838 8266.7168 -8085.9058 8266.8008 c
f
-8077.8081 8277.7656 m
-8078.7568 8276.8799 -8079.6846 8276.0156 -8079.6846 8275.4668 c
-8079.6846 8275.1299 -8079.6226 8274.7285 -8079.6226 8274.3076 c
-8079.6226 8272.8525 -8080.9722 8271.5234 -8081.8774 8271.0605 c
-8082.3623 8270.8066 -8082.8481 8270.2383 -8082.8481 8269.8789 c
-8082.8481 8269.7734 -8082.8057 8269.7109 -8082.7422 8269.7109 c
-8082.6582 8269.7109 -8082.5942 8269.7314 -8082.5103 8269.7314 c
-8082.4473 8269.7314 -8082.2158 8269.6045 -8082.1519 8269.6045 c
-8082.0049 8269.6045 -8081.6035 8270.2598 -8081.4561 8270.2598 c
-8081.2446 8270.2598 -8081.1826 8270.0488 -8081.1826 8269.9004 c
-8081.1826 8269.542 -8081.7305 8268.1924 -8082.9951 8268.1924 c
-8083.7554 8268.1924 -8084.0498 8268.6348 -8084.0498 8268.9727 c
-8084.0498 8269.6045 -8083.5225 8270.2168 -8083.3975 8270.3867 c
-8083.3545 8270.4277 -8083.3335 8270.4697 -8083.3335 8270.5117 c
-8083.3335 8270.5547 -8083.3545 8270.5742 -8083.4175 8270.5742 c
-8083.6694 8270.5742 -8085.6519 8269.542 -8085.6519 8267.8125 c
-8085.6519 8267.3916 -8085.4209 8266.5898 -8084.7666 8266.5898 c
-8082.2998 8266.5898 -8078.1675 8270.4492 -8078.1675 8274.8975 c
-8078.1675 8275.2773 -8078.3984 8275.8262 -8078.4614 8276.2051 c
-8078.4834 8276.2266 -8078.4834 8276.2686 -8078.4834 8276.3096 c
-8078.4834 8276.4365 -8078.4399 8276.6055 -8078.3145 8276.6055 c
-8078.0615 8276.6055 -8076.3955 8276.416 -8076.0366 8276.416 c
-8074.3926 8276.416 -8073.9702 8276.416 -8073.9702 8277.5117 c
-8073.9702 8278.7354 -8075.1094 8279.0527 -8075.5098 8279.0527 c
-8075.8896 8279.0527 -8076.2695 8278.7559 -8076.2695 8278.3975 c
-8076.2695 8278.292 -8076.0791 8277.8496 -8076.0791 8277.7656 c
-8076.0791 8277.6182 -8076.2065 8277.5342 -8076.3325 8277.5342 c
-8076.4795 8277.5342 -8076.9858 8278.0391 -8077.1338 8278.0391 c
-8077.3862 8278.0391 -8077.6401 8277.9131 -8077.8081 8277.7656 c
f
*U
U
%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt \221\310\211~/ Adobe Calligraphic ) -
(Brush Tool/ 5 pt \221\310\211~/ Adobe Calligraphic Brush Tool/ 5 pt \203t\203) -
(\211\203b\203g/ Adobe Calligraphic Brush Tool/ 3 pt \203\211\203E\203\223\203h/ Adobe Cal) -
(ligraphic Brush Tool/ 7 pt \203\211\203E\203\223\203h/ Adobe Calligraphic Brush ) -
(Tool/ 15 pt\203\211\203E\203\223\203h/ Adobe ArtOnPath Brush Tool/ \226\330\222Y\211\346/ Adobe) -
( ArtOnPath Brush Tool/ \220\374 \(\220\346\215\327\)/ Adobe ArtOnPath Brush Tool/ ) -
(\203t\203\215\201[\203\211\203\213\203X\203|\201[\203N/ Adobe PatternOnPath Brush Tool/ \220\324\202\242\226\356\210\363\203u) -
(\203\211\203V / Adobe PatternOnPath Brush Tool/ \203S\203V\203b\203N/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(15 pt\603\611\603E\603\623\603h)
(1 15 15 100 100 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt \621\710\611~)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt \603\611\603E\603\623\603h)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \603t\603\611\603b\603g)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt \621\710\611~)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt \603\611\603E\603\623\603h)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\603t\603\615\601[\603\611\603\613\603X\603|\601[\603N)
(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\626\730\622Y\611\746)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\620\774 \(\620\746\615\727\))
(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\603S\603V\603b\603N)
(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -
(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\620\724\602\642\626\756\610\763\603u\603\611\603V )
(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -
(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -
(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623]) 0 Xs
([\603\614\603W\603X\603g\603\614\601[\603V\603\607\603\623])
Pc
0 0 0 0 k
(\603z\603\617\603C\603g)
Pc
0 0 0 1 k
(\603u\603\611\603b\603N)
Pc
0 1 1 0 k
(CMYK \603\614\603b\603h)
Pc
0 0 1 0 k
(CMYK \603C\603G\603\615\601[)
Pc
1 0 1 0 k
(CMYK \603O\603\612\601[\603\623)
Pc
1 0 0 0 k
(CMYK \603V\603A\603\623)
Pc
1 1 0 0 k
(CMYK \603u\603\613\601[)
Pc
0 1 0 0 k
(CMYK \603}\603[\603\623\603^)
Pc
0.15 1 0.9 0.1 k
(C=15 M=100 Y=90 K=10)
Pc
0 0.9 0.85 0 k
(C=0 M=90 Y=85 K=0)
Pc
0 0.8 0.95 0 k
(C=0 M=80 Y=95 K=0)
Pc
0 0.5 1 0 k
(C=0 M=50 Y=100 K=0)
Pc
0 0.35 0.85 0 k
(C=0 M=35 Y=85 K=0)
Pc
0.05 0 0.9 0 k
(C=5 M=0 Y=90 K=0)
Pc
0.2 0 1 0 k
(C=20 M=0 Y=100 K=0)
Pc
0.5 0 1 0 k
(C=50 M=0 Y=100 K=0)
Pc
0.75 0 1 0 k
(C=75 M=0 Y=100 K=0)
Pc
0.85 0.1 1 0.1 k
(C=85 M=10 Y=100 K=10)
Pc
0.9 0.3 0.95 0.3 k
(C=90 M=30 Y=95 K=30)
Pc
0.75 0 0.75 0 k
(C=75 M=0 Y=75 K=0)
Pc
0.8 0.1 0.45 0 k
(C=80 M=10 Y=45 K=0)
Pc
0.7 0.15 0 0 k
(C=70 M=15 Y=0 K=0)
Pc
0.85 0.5 0 0 k
(C=85 M=50 Y=0 K=0)
Pc
1 0.95 0.05 0 k
(C=100 M=95 Y=5 K=0)
Pc
1 1 0.25 0.25 k
(C=100 M=100 Y=25 K=25)
Pc
0.75 1 0 0 k
(C=75 M=100 Y=0 K=0)
Pc
0.5 1 0 0 k
(C=50 M=100 Y=0 K=0)
Pc
0.35 1 0.35 0.1 k
(C=35 M=100 Y=35 K=10)
Pc
0.1 1 0.5 0 k
(C=10 M=100 Y=50 K=0)
Pc
0 0.95 0.2 0 k
(C=0 M=95 Y=20 K=0)
Pc
0.25 0.25 0.4 0 k
(C=25 M=25 Y=40 K=0)
Pc
0.4 0.45 0.5 0.05 k
(C=40 M=45 Y=50 K=5)
Pc
0.5 0.5 0.6 0.25 k
(C=50 M=50 Y=60 K=25)
Pc
0.55 0.6 0.65 0.4 k
(C=55 M=60 Y=65 K=40)
Pc
0.25 0.4 0.65 0 k
(C=25 M=40 Y=65 K=0)
Pc
0.3 0.5 0.75 0.1 k
(C=30 M=50 Y=75 K=10)
Pc
0.35 0.6 0.8 0.25 k
(C=35 M=60 Y=80 K=25)
Pc
0.4 0.65 0.9 0.35 k
(C=40 M=65 Y=90 K=35)
Pc
0.4 0.7 1 0.5 k
(C=40 M=70 Y=100 K=50)
Pc
0.5 0.7 0.8 0.7 k
(C=50 M=70 Y=80 K=70)
Pc
Bb
2 (\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\620\774\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
2 (\603u\603\611\603b\603N\602\711\603t\603F\601[\603h) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603u\603\611\603b\603N\602\711\603t\603F\601[\603h)
Pc
Bb
0 0 0 0 Bh
2 (\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\625\772\616\713\617\763\603O\603\611\603f\601[\603V\603\607\603\623)
Pc
Bb
0 0 0 0 Bh
2 (\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\603\\\603t\603g\603u\603\611\603b\603N\603r\603l\603b\603g)
Pc
Bb
2 (\615\673\624\631\602\714\623\772\625\751\602\752) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\615\673\624\631\602\714\623\772\625\751\602\752)
Pc
Bb
0 0 0 0 Bh
2 (\623\672 \(\625\772\616\713\617\763\)) 0 0 0 1 1 0 0 1 0 0 Bg
0 BB
(\623\672 \(\625\772\616\713\617\763\))
Pc
(\613\633\614`\603p\603^\601[\603\623) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p
(\613\633\614`\603p\603^\601[\603\623)
Pc
0 0 0 1 k
(C=0 M=0 Y=0 K=100)
Pc
0 0 0 0.899994 k
(C=0 M=0 Y=0 K=90)
Pc
0 0 0 0.799988 k
(C=0 M=0 Y=0 K=80)
Pc
0 0 0 0.699997 k
(C=0 M=0 Y=0 K=70)
Pc
0 0 0 0.599991 k
(C=0 M=0 Y=0 K=60)
Pc
0 0 0 0.5 k
(C=0 M=0 Y=0 K=50)
Pc
0 0 0 0.399994 k
(C=0 M=0 Y=0 K=40)
Pc
0 0 0 0.299988 k
(C=0 M=0 Y=0 K=30)
Pc
0 0 0 0.199997 k
(C=0 M=0 Y=0 K=20)
Pc
0 0 0 0.099991 k
(C=0 M=0 Y=0 K=10)
Pc
0 0 0 0.049988 k
(C=0 M=0 Y=0 K=5)
Pc
0 1 1 0 k
(C=0 M=100 Y=100 K=0)
Pc
0 0.75 1 0 k
(C=0 M=75 Y=100 K=0)
Pc
0 0.1 0.95 0 k
(C=0 M=10 Y=95 K=0)
Pc
0.85 0.1 1 0 k
(C=85 M=10 Y=100 K=0)
Pc
1 0.9 0 0 k
(C=100 M=90 Y=0 K=0)
Pc
0.6 0.9 0.000031 0.000031 k
(C=60 M=90 Y=0 K=0)
Pc
PB
%AI5_EndPalette
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 -1 31 113 250 0 50 Lb
(\203f\203U\203C\203\223) Ln
0 A
LB
%AI5_EndLayer--
%AI5_BeginLayer
1 1 0 1 0 0 1 6 79 255 255 0 50 Lb
(57mm\227p\203K\203C\203h) Ln
1 A
u
0 A
1 Ap
0 D
0 R
0 0 0 1 K
0 J 0 j 1 w 4 M []0 d0 XR
177.168 96.3804 m
177.168 51.7617 140.998 15.5918 96.3794 15.5918 c
51.7622 15.5918 15.5923 51.7617 15.5923 96.3804 c
15.5923 140.9976 51.7622 177.1675 96.3794 177.1675 c
140.998 177.1675 177.168 140.9976 177.168 96.3804 c
(s) *
U
1 A
u
0 A
190.3486 96.3799 m
190.3486 44.4824 148.2773 2.41113 96.3799 2.41113 c
44.4824 2.41113 2.41113 44.4824 2.41113 96.3799 c
2.41113 148.2773 44.4824 190.3486 96.3799 190.3486 c
148.2773 190.3486 190.3486 148.2773 190.3486 96.3799 c
(s) *
U
LB
%AI5_EndLayer--
%AI5_BeginLayer
0 1 0 1 0 0 0 7 128 128 128 0 50 Lb
(\215\355\217\234\213\326\216~\203\214\203C\203\204\201[) Ln
1 A
u
0 A
0 Ap
0 R
0 0 0 1 K
0 J 0 j 3.40158 w 4 M []0 d0 XR
7.31885 96.4775 m
2.9248 96.4297 L
S
96.3423 7.35352 m
96.3906 2.95996 L
S
/BBAccumRotation (0.011045) XT
4.13264 w96.3467 189.7227 m
96.3467 185.4707 L
S
u
1 Ap
3.41704 w190.3496 96.3799 m
190.3496 44.4834 148.2773 2.41113 96.3794 2.41113 c
44.4829 2.41113 2.41162 44.4834 2.41162 96.3799 c
2.41162 148.2769 44.4829 190.3486 96.3794 190.3486 c
148.2773 190.3486 190.3496 148.2769 190.3496 96.3799 c
s
U
u
0 0 0 0 K
1.13386 w190.3496 96.3799 m
190.3496 44.4834 148.2773 2.41113 96.3789 2.41113 c
44.4824 2.41113 2.41113 44.4834 2.41113 96.3799 c
2.41113 148.2769 44.4824 190.3486 96.3789 190.3486 c
148.2773 190.3486 190.3496 148.2769 190.3496 96.3799 c
s
U
0 Ap
1 G
1.13386 w96.3779 189.7954 m
96.3779 186.394 L
S
1 Ap
0 O
1 g
0 0 0 1 K
0.992126 w95.2134 187.5449 m
95.2134 186.606 94.4517 185.8428 93.5107 185.8428 c
92.5732 185.8428 91.8115 186.606 91.8115 187.5449 c
91.8115 188.4824 92.5732 189.2446 93.5107 189.2446 c
94.4517 189.2446 95.2134 188.4824 95.2134 187.5449 c
b
100.9297 187.5444 m
100.9297 186.6055 100.168 185.8433 99.2285 185.8433 c
98.2852 185.8433 97.5293 186.6055 97.5293 187.5444 c
97.5293 188.4824 98.2852 189.2446 99.2285 189.2446 c
100.168 189.2446 100.9297 188.4824 100.9297 187.5444 c
b
0 Ap
0 0 0 0 k
0.850394 w185.8066 98.2202 m
189.002 96.376 L
185.8066 94.5322 L
185.8066 98.2202 L
b
0 0 0 0 K
1.13386 w96.3818 6.49707 m
96.4219 2.9541 L
S
/BBAccumRotation (0.011045) XT
6.51221 96.4395 m
2.96875 96.4014 L
S
U
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
